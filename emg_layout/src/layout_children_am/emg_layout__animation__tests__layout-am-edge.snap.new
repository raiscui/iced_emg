---
source: emg_layout/src/animation.rs
assertion_line: 1528
expression: "&e1"
---
EmgEdgeItem {
    id: StateVar(
        StateAnchor(
            EdgeIndex(OptionNodeIndex(Some(NodeIndex("root")))->OptionNodeIndex(Some(NodeIndex("1")))),
        ),
    ),
    paths: StateAnchor(
        {
            EPath(
                [
                    EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("root")))),
                ],
            ): EdgeData(
                EdgeData {
                    path_layout: StateAnchor(
                        Layout {
                            w: StateVar(
                                GenericSizeAnchor(
                                    StateAnchor(
                                        Length(
                                            Simplex(
                                                ExactLengthSimplex {
                                                    unit: Px,
                                                    value: NotNan(
                                                        1920.0,
                                                    ),
                                                },
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                            h: StateVar(
                                GenericSizeAnchor(
                                    StateAnchor(
                                        Length(
                                            Simplex(
                                                ExactLengthSimplex {
                                                    unit: Px,
                                                    value: NotNan(
                                                        1080.0,
                                                    ),
                                                },
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                            z: StateVar(
                                StateAnchor(
                                    0,
                                ),
                            ),
                            origin_x: StateVar(
                                GenericSizeAnchor(
                                    StateAnchor(
                                        None,
                                    ),
                                ),
                            ),
                            origin_y: StateVar(
                                GenericSizeAnchor(
                                    StateAnchor(
                                        None,
                                    ),
                                ),
                            ),
                            origin_z: StateVar(
                                GenericSizeAnchor(
                                    StateAnchor(
                                        None,
                                    ),
                                ),
                            ),
                            align_x: StateVar(
                                GenericSizeAnchor(
                                    StateAnchor(
                                        None,
                                    ),
                                ),
                            ),
                            align_y: StateVar(
                                GenericSizeAnchor(
                                    StateAnchor(
                                        None,
                                    ),
                                ),
                            ),
                            align_z: StateVar(
                                GenericSizeAnchor(
                                    StateAnchor(
                                        None,
                                    ),
                                ),
                            ),
                            cassowary_constants: StateVar(
                                StateAnchor(
                                    [],
                                ),
                            ),
                            cassowary_selectors: StateVar(
                                [],
                            ),
                            cassowary_generals: StateVar(
                                CassowaryGeneralMap {
                                    map: {},
                                    v_v_suggest: {},
                                    virtual_constraints: {},
                                    top_virtual_constraints: {},
                                    top_map: {},
                                    top_v_v_suggest: {},
                                    parent: None,
                                },
                            ),
                        },
                    ),
                    calculated: LayoutCalculated {
                        size_constraints: StateAnchor(
                            [
                                Constraint(
                                    ConstraintData {
                                        expression: Expression {
                                            terms: [
                                                Term {
                                                    variable: Variable(
                                                        19,
                                                    ),
                                                    coefficient: NotNan(
                                                        1.0,
                                                    ),
                                                },
                                            ],
                                            constant: NotNan(
                                                -1920.0,
                                            ),
                                        },
                                        strength: NotNan(
                                            1001001000.0,
                                        ),
                                        op: Equal,
                                    },
                                ),
                                Constraint(
                                    ConstraintData {
                                        expression: Expression {
                                            terms: [
                                                Term {
                                                    variable: Variable(
                                                        20,
                                                    ),
                                                    coefficient: NotNan(
                                                        1.0,
                                                    ),
                                                },
                                            ],
                                            constant: NotNan(
                                                -1080.0,
                                            ),
                                        },
                                        strength: NotNan(
                                            1001001000.0,
                                        ),
                                        op: Equal,
                                    },
                                ),
                                Constraint(
                                    ConstraintData {
                                        expression: Expression {
                                            terms: [
                                                Term {
                                                    variable: Variable(
                                                        23,
                                                    ),
                                                    coefficient: NotNan(
                                                        1.0,
                                                    ),
                                                },
                                                Term {
                                                    variable: Variable(
                                                        21,
                                                    ),
                                                    coefficient: NotNan(
                                                        -1.0,
                                                    ),
                                                },
                                                Term {
                                                    variable: Variable(
                                                        20,
                                                    ),
                                                    coefficient: NotNan(
                                                        -1.0,
                                                    ),
                                                },
                                            ],
                                            constant: NotNan(
                                                0.0,
                                            ),
                                        },
                                        strength: NotNan(
                                            1001001000.0,
                                        ),
                                        op: Equal,
                                    },
                                ),
                                Constraint(
                                    ConstraintData {
                                        expression: Expression {
                                            terms: [
                                                Term {
                                                    variable: Variable(
                                                        24,
                                                    ),
                                                    coefficient: NotNan(
                                                        1.0,
                                                    ),
                                                },
                                                Term {
                                                    variable: Variable(
                                                        22,
                                                    ),
                                                    coefficient: NotNan(
                                                        -1.0,
                                                    ),
                                                },
                                                Term {
                                                    variable: Variable(
                                                        19,
                                                    ),
                                                    coefficient: NotNan(
                                                        -1.0,
                                                    ),
                                                },
                                            ],
                                            constant: NotNan(
                                                0.0,
                                            ),
                                        },
                                        strength: NotNan(
                                            1001001000.0,
                                        ),
                                        op: Equal,
                                    },
                                ),
                                Constraint(
                                    ConstraintData {
                                        expression: Expression {
                                            terms: [
                                                Term {
                                                    variable: Variable(
                                                        23,
                                                    ),
                                                    coefficient: NotNan(
                                                        1.0,
                                                    ),
                                                },
                                                Term {
                                                    variable: Variable(
                                                        21,
                                                    ),
                                                    coefficient: NotNan(
                                                        -1.0,
                                                    ),
                                                },
                                            ],
                                            constant: NotNan(
                                                0.0,
                                            ),
                                        },
                                        strength: NotNan(
                                            1001001000.0,
                                        ),
                                        op: GreaterOrEqual,
                                    },
                                ),
                                Constraint(
                                    ConstraintData {
                                        expression: Expression {
                                            terms: [
                                                Term {
                                                    variable: Variable(
                                                        24,
                                                    ),
                                                    coefficient: NotNan(
                                                        1.0,
                                                    ),
                                                },
                                                Term {
                                                    variable: Variable(
                                                        22,
                                                    ),
                                                    coefficient: NotNan(
                                                        -1.0,
                                                    ),
                                                },
                                            ],
                                            constant: NotNan(
                                                0.0,
                                            ),
                                        },
                                        strength: NotNan(
                                            1001001000.0,
                                        ),
                                        op: GreaterOrEqual,
                                    },
                                ),
                                Constraint(
                                    ConstraintData {
                                        expression: Expression {
                                            terms: [
                                                Term {
                                                    variable: Variable(
                                                        19,
                                                    ),
                                                    coefficient: NotNan(
                                                        1.0,
                                                    ),
                                                },
                                            ],
                                            constant: NotNan(
                                                0.0,
                                            ),
                                        },
                                        strength: NotNan(
                                            1001001000.0,
                                        ),
                                        op: GreaterOrEqual,
                                    },
                                ),
                                Constraint(
                                    ConstraintData {
                                        expression: Expression {
                                            terms: [
                                                Term {
                                                    variable: Variable(
                                                        20,
                                                    ),
                                                    coefficient: NotNan(
                                                        1.0,
                                                    ),
                                                },
                                            ],
                                            constant: NotNan(
                                                0.0,
                                            ),
                                        },
                                        strength: NotNan(
                                            1001001000.0,
                                        ),
                                        op: GreaterOrEqual,
                                    },
                                ),
                                Constraint(
                                    ConstraintData {
                                        expression: Expression {
                                            terms: [
                                                Term {
                                                    variable: Variable(
                                                        21,
                                                    ),
                                                    coefficient: NotNan(
                                                        1.0,
                                                    ),
                                                },
                                            ],
                                            constant: NotNan(
                                                0.0,
                                            ),
                                        },
                                        strength: NotNan(
                                            1.0,
                                        ),
                                        op: GreaterOrEqual,
                                    },
                                ),
                                Constraint(
                                    ConstraintData {
                                        expression: Expression {
                                            terms: [
                                                Term {
                                                    variable: Variable(
                                                        22,
                                                    ),
                                                    coefficient: NotNan(
                                                        1.0,
                                                    ),
                                                },
                                            ],
                                            constant: NotNan(
                                                0.0,
                                            ),
                                        },
                                        strength: NotNan(
                                            1.0,
                                        ),
                                        op: GreaterOrEqual,
                                    },
                                ),
                            ],
                        ),
                        cassowary_inherited_generals_sa: StateAnchor(
                            CassowaryGeneralMap {
                                map: {
                                    "align_x": Variable(
                                        29,
                                    ),
                                    "align_y": Variable(
                                        30,
                                    ),
                                    "align_z": Variable(
                                        31,
                                    ),
                                    "baseline": Variable(
                                        37,
                                    ),
                                    "bottom": Variable(
                                        23,
                                    ),
                                    "height": Variable(
                                        20,
                                    ),
                                    "hgap": Variable(
                                        33,
                                    ),
                                    "left": Variable(
                                        22,
                                    ),
                                    "origin_x": Variable(
                                        26,
                                    ),
                                    "origin_y": Variable(
                                        27,
                                    ),
                                    "origin_z": Variable(
                                        28,
                                    ),
                                    "right": Variable(
                                        24,
                                    ),
                                    "top": Variable(
                                        21,
                                    ),
                                    "vgap": Variable(
                                        35,
                                    ),
                                    "width": Variable(
                                        19,
                                    ),
                                    "z": Variable(
                                        25,
                                    ),
                                },
                                v_v_suggest: {
                                    Variable(
                                        33,
                                    ): 10.0,
                                    Variable(
                                        35,
                                    ): 10.0,
                                    Variable(
                                        37,
                                    ): 16.0,
                                },
                                virtual_constraints: {},
                                top_virtual_constraints: {},
                                top_map: {
                                    "baseline": Variable(
                                        36,
                                    ),
                                    "hgap": Variable(
                                        32,
                                    ),
                                    "vgap": Variable(
                                        34,
                                    ),
                                },
                                top_v_v_suggest: {
                                    Variable(
                                        32,
                                    ): 10.0,
                                    Variable(
                                        34,
                                    ): 10.0,
                                    Variable(
                                        36,
                                    ): 16.0,
                                },
                                parent: None,
                            },
                        ),
                        cass_or_calc_size: StateAnchor(
                            [
                                [
                                    1920.0,
                                    1080.0,
                                ],
                            ],
                        ),
                        origin: StateAnchor(
                            [
                                0.0,
                                0.0,
                                0.0,
                            ],
                        ),
                        align: StateAnchor(
                            [
                                0.0,
                                0.0,
                                0.0,
                            ],
                        ),
                        translation: StateAnchor(
                            [
                                0.0,
                                0.0,
                                0.0,
                            ],
                        ),
                        coordinates_trans: StateAnchor(
                            [
                                0.0,
                                0.0,
                                0.0,
                            ],
                        ),
                        cass_trans: StateAnchor(
                            [
                                0.0,
                                0.0,
                                0.0,
                            ],
                        ),
                        matrix: StateAnchor(
                            Mat4(
                                [
                                    [
                                        1.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                    ],
                                    [
                                        0.0,
                                        1.0,
                                        0.0,
                                        0.0,
                                    ],
                                    [
                                        0.0,
                                        0.0,
                                        1.0,
                                        0.0,
                                    ],
                                    [
                                        0.0,
                                        0.0,
                                        0.0,
                                        1.0,
                                    ],
                                ],
                            ),
                        ),
                        loc_styles: StateAnchor(
                            Style {
                                media_rules: {},
                                rules: [
                                    Rule {
                                        value: Length(
                                            Simplex(
                                                ExactLengthSimplex {
                                                    unit: Px,
                                                    value: NotNan(
                                                        1920.0,
                                                    ),
                                                },
                                            ),
                                        ),
                                    },
                                    Rule {
                                        value: Length(
                                            Simplex(
                                                ExactLengthSimplex {
                                                    unit: Px,
                                                    value: NotNan(
                                                        1080.0,
                                                    ),
                                                },
                                            ),
                                        ),
                                    },
                                    Rule {
                                        value: StringValue(
                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                        ),
                                    },
                                ],
                                updated_at: [
                                    "emg_layout/src/lib.rs:1903:13",
                                    "emg_layout/src/lib.rs:1903:17",
                                    "emg_layout/src/lib.rs:1903:31",
                                    "emg_layout/src/lib.rs:1903:45",
                                ],
                                pseudo: None,
                                media: None,
                                name: "",
                                keyframes: Keyframes {
                                    frames: [],
                                },
                                combinator: None,
                                pre_combinators: [],
                            },
                        ),
                        world: StateAnchor(
                            [
                                0.0,
                                0.0,
                                0.0,
                            ],
                        ),
                    },
                    cassowary_map: CassowaryMap {
                        map: {
                            "align_x": Variable(
                                29,
                            ),
                            "align_y": Variable(
                                30,
                            ),
                            "align_z": Variable(
                                31,
                            ),
                            "bottom": Variable(
                                23,
                            ),
                            "height": Variable(
                                20,
                            ),
                            "left": Variable(
                                22,
                            ),
                            "origin_x": Variable(
                                26,
                            ),
                            "origin_y": Variable(
                                27,
                            ),
                            "origin_z": Variable(
                                28,
                            ),
                            "right": Variable(
                                24,
                            ),
                            "top": Variable(
                                21,
                            ),
                            "width": Variable(
                                19,
                            ),
                            "z": Variable(
                                25,
                            ),
                        },
                        v_k: {
                            Variable(
                                19,
                            ): "width",
                            Variable(
                                20,
                            ): "height",
                            Variable(
                                21,
                            ): "top",
                            Variable(
                                22,
                            ): "left",
                            Variable(
                                23,
                            ): "bottom",
                            Variable(
                                24,
                            ): "right",
                            Variable(
                                25,
                            ): "z",
                            Variable(
                                26,
                            ): "origin_x",
                            Variable(
                                27,
                            ): "origin_y",
                            Variable(
                                28,
                            ): "origin_z",
                            Variable(
                                29,
                            ): "align_x",
                            Variable(
                                30,
                            ): "align_y",
                            Variable(
                                31,
                            ): "align_z",
                        },
                    },
                    children_vars_sa: StateAnchor(
                        {},
                    ),
                    cassowary_calculated_vars: StateAnchor(
                        {
                            Variable(
                                19,
                            ): (
                                NotNan(
                                    1920.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\"))))])[width] ",
                            ),
                            Variable(
                                20,
                            ): (
                                NotNan(
                                    1080.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\"))))])[height] ",
                            ),
                            Variable(
                                21,
                            ): (
                                NotNan(
                                    -0.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\"))))])[top] ",
                            ),
                            Variable(
                                22,
                            ): (
                                NotNan(
                                    -0.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\"))))])[left] ",
                            ),
                            Variable(
                                23,
                            ): (
                                NotNan(
                                    1080.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\"))))])[bottom] ",
                            ),
                            Variable(
                                24,
                            ): (
                                NotNan(
                                    1920.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\"))))])[right] ",
                            ),
                            Variable(
                                26,
                            ): (
                                NotNan(
                                    0.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\"))))])[origin_x] ",
                            ),
                            Variable(
                                27,
                            ): (
                                NotNan(
                                    0.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\"))))])[origin_y] ",
                            ),
                            Variable(
                                29,
                            ): (
                                NotNan(
                                    0.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\"))))])[align_x] ",
                            ),
                            Variable(
                                30,
                            ): (
                                NotNan(
                                    0.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\"))))])[align_y] ",
                            ),
                            Variable(
                                32,
                            ): (
                                NotNan(
                                    10.0,
                                ),
                                "",
                            ),
                            Variable(
                                33,
                            ): (
                                NotNan(
                                    10.0,
                                ),
                                "",
                            ),
                            Variable(
                                34,
                            ): (
                                NotNan(
                                    10.0,
                                ),
                                "",
                            ),
                            Variable(
                                35,
                            ): (
                                NotNan(
                                    10.0,
                                ),
                                "",
                            ),
                            Variable(
                                36,
                            ): (
                                NotNan(
                                    16.0,
                                ),
                                "",
                            ),
                            Variable(
                                37,
                            ): (
                                NotNan(
                                    16.0,
                                ),
                                "",
                            ),
                            Variable(
                                38,
                            ): (
                                NotNan(
                                    50.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\"))))]) |=> #\"1\"[width]",
                            ),
                            Variable(
                                39,
                            ): (
                                NotNan(
                                    50.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\"))))]) |=> #\"1\"[height]",
                            ),
                            Variable(
                                40,
                            ): (
                                NotNan(
                                    -0.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\"))))]) |=> #\"1\"[top]",
                            ),
                            Variable(
                                41,
                            ): (
                                NotNan(
                                    -0.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\"))))]) |=> #\"1\"[left]",
                            ),
                            Variable(
                                42,
                            ): (
                                NotNan(
                                    50.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\"))))]) |=> #\"1\"[bottom]",
                            ),
                            Variable(
                                43,
                            ): (
                                NotNan(
                                    50.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\"))))]) |=> #\"1\"[right]",
                            ),
                        },
                    ),
                    cassowary_calculated_layout: StateAnchor(
                        (
                            Some(
                                1920.0,
                            ),
                            Some(
                                1080.0,
                            ),
                        ),
                    ),
                    styles_string: StateAnchor(
                        "width: 1920px;\nheight: 1080px;\ntransform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);\n width: 1920px;\nheight: 1080px;\n",
                    ),
                    ctx: EdgeCtx {
                        styles_end: StateAnchor(
                            {},
                        ),
                        layout_end: StateAnchor(
                            (
                                [
                                    0.0,
                                    0.0,
                                    0.0,
                                ],
                                1920.0,
                                1080.0,
                            ),
                        ),
                        world: StateAnchor(
                            [
                                0.0,
                                0.0,
                                0.0,
                            ],
                        ),
                        children_layout: StateAnchor(
                            Some(
                                LayoutOverride {
                                    rect_tree: {
                                        RectLTRB {
                                            x0: NotNan(
                                                960.0,
                                            ),
                                            y0: NotNan(
                                                540.0,
                                            ),
                                            x1: NotNan(
                                                1010.0,
                                            ),
                                            y1: NotNan(
                                                590.0,
                                            ),
                                        },
                                    },
                                    bbox: RectLTRB {
                                        x0: NotNan(
                                            960.0,
                                        ),
                                        y0: NotNan(
                                            540.0,
                                        ),
                                        x1: NotNan(
                                            1010.0,
                                        ),
                                        y1: NotNan(
                                            590.0,
                                        ),
                                    },
                                },
                            ),
                        ),
                    },
                    opt_p_calculated: None,
                },
            ),
        },
    ),
    layout: Layout {
        w: StateVar(
            GenericSizeAnchor(
                StateAnchor(
                    Length(
                        Simplex(
                            ExactLengthSimplex {
                                unit: Px,
                                value: NotNan(
                                    50.0,
                                ),
                            },
                        ),
                    ),
                ),
            ),
        ),
        h: StateVar(
            GenericSizeAnchor(
                StateAnchor(
                    Length(
                        Simplex(
                            ExactLengthSimplex {
                                unit: Px,
                                value: NotNan(
                                    50.0,
                                ),
                            },
                        ),
                    ),
                ),
            ),
        ),
        z: StateVar(
            StateAnchor(
                0,
            ),
        ),
        origin_x: StateVar(
            GenericSizeAnchor(
                StateAnchor(
                    Length(
                        Simplex(
                            ExactLengthSimplex {
                                unit: Pc,
                                value: NotNan(
                                    0.0,
                                ),
                            },
                        ),
                    ),
                ),
            ),
        ),
        origin_y: StateVar(
            GenericSizeAnchor(
                StateAnchor(
                    Length(
                        Simplex(
                            ExactLengthSimplex {
                                unit: Pc,
                                value: NotNan(
                                    0.0,
                                ),
                            },
                        ),
                    ),
                ),
            ),
        ),
        origin_z: StateVar(
            GenericSizeAnchor(
                StateAnchor(
                    Length(
                        Simplex(
                            ExactLengthSimplex {
                                unit: Pc,
                                value: NotNan(
                                    0.0,
                                ),
                            },
                        ),
                    ),
                ),
            ),
        ),
        align_x: StateVar(
            GenericSizeAnchor(
                StateAnchor(
                    Length(
                        Simplex(
                            ExactLengthSimplex {
                                unit: Pc,
                                value: NotNan(
                                    50.0,
                                ),
                            },
                        ),
                    ),
                ),
            ),
        ),
        align_y: StateVar(
            GenericSizeAnchor(
                StateAnchor(
                    Length(
                        Simplex(
                            ExactLengthSimplex {
                                unit: Pc,
                                value: NotNan(
                                    50.0,
                                ),
                            },
                        ),
                    ),
                ),
            ),
        ),
        align_z: StateVar(
            GenericSizeAnchor(
                StateAnchor(
                    Length(
                        Simplex(
                            ExactLengthSimplex {
                                unit: Pc,
                                value: NotNan(
                                    50.0,
                                ),
                            },
                        ),
                    ),
                ),
            ),
        ),
        cassowary_constants: StateVar(
            StateAnchor(
                [],
            ),
        ),
        cassowary_selectors: StateVar(
            [],
        ),
        cassowary_generals: StateVar(
            CassowaryGeneralMap {
                map: {},
                v_v_suggest: {},
                virtual_constraints: {},
                top_virtual_constraints: {},
                top_map: {},
                top_v_v_suggest: {},
                parent: None,
            },
        ),
    },
    styles: StateVar(
        {},
    ),
    path_styles: StateVar(
        {},
    ),
    path_layouts: StateVar(
        {},
    ),
    other_css_styles: StateVar(
        Style {
            media_rules: {},
            rules: [],
            updated_at: [
                "emg_layout/src/lib.rs:937:45",
            ],
            pseudo: None,
            media: None,
            name: "",
            keyframes: Keyframes {
                frames: [],
            },
            combinator: None,
            pre_combinators: [],
        },
    ),
    edge_nodes: StateAnchor(
        {
            EPath(
                [
                    EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("root")))),
                    EdgeIndex(OptionNodeIndex(Some(NodeIndex("root")))->OptionNodeIndex(Some(NodeIndex("1")))),
                ],
            ): EdgeData(
                EdgeData {
                    path_layout: StateAnchor(
                        Layout {
                            w: StateVar(
                                GenericSizeAnchor(
                                    StateAnchor(
                                        Length(
                                            Simplex(
                                                ExactLengthSimplex {
                                                    unit: Px,
                                                    value: NotNan(
                                                        50.0,
                                                    ),
                                                },
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                            h: StateVar(
                                GenericSizeAnchor(
                                    StateAnchor(
                                        Length(
                                            Simplex(
                                                ExactLengthSimplex {
                                                    unit: Px,
                                                    value: NotNan(
                                                        50.0,
                                                    ),
                                                },
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                            z: StateVar(
                                StateAnchor(
                                    0,
                                ),
                            ),
                            origin_x: StateVar(
                                GenericSizeAnchor(
                                    StateAnchor(
                                        Length(
                                            Simplex(
                                                ExactLengthSimplex {
                                                    unit: Pc,
                                                    value: NotNan(
                                                        0.0,
                                                    ),
                                                },
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                            origin_y: StateVar(
                                GenericSizeAnchor(
                                    StateAnchor(
                                        Length(
                                            Simplex(
                                                ExactLengthSimplex {
                                                    unit: Pc,
                                                    value: NotNan(
                                                        0.0,
                                                    ),
                                                },
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                            origin_z: StateVar(
                                GenericSizeAnchor(
                                    StateAnchor(
                                        Length(
                                            Simplex(
                                                ExactLengthSimplex {
                                                    unit: Pc,
                                                    value: NotNan(
                                                        0.0,
                                                    ),
                                                },
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                            align_x: StateVar(
                                GenericSizeAnchor(
                                    StateAnchor(
                                        Length(
                                            Simplex(
                                                ExactLengthSimplex {
                                                    unit: Pc,
                                                    value: NotNan(
                                                        50.0,
                                                    ),
                                                },
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                            align_y: StateVar(
                                GenericSizeAnchor(
                                    StateAnchor(
                                        Length(
                                            Simplex(
                                                ExactLengthSimplex {
                                                    unit: Pc,
                                                    value: NotNan(
                                                        50.0,
                                                    ),
                                                },
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                            align_z: StateVar(
                                GenericSizeAnchor(
                                    StateAnchor(
                                        Length(
                                            Simplex(
                                                ExactLengthSimplex {
                                                    unit: Pc,
                                                    value: NotNan(
                                                        50.0,
                                                    ),
                                                },
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                            cassowary_constants: StateVar(
                                StateAnchor(
                                    [],
                                ),
                            ),
                            cassowary_selectors: StateVar(
                                [],
                            ),
                            cassowary_generals: StateVar(
                                CassowaryGeneralMap {
                                    map: {},
                                    v_v_suggest: {},
                                    virtual_constraints: {},
                                    top_virtual_constraints: {},
                                    top_map: {},
                                    top_v_v_suggest: {},
                                    parent: None,
                                },
                            ),
                        },
                    ),
                    calculated: LayoutCalculated {
                        size_constraints: StateAnchor(
                            [
                                Constraint(
                                    ConstraintData {
                                        expression: Expression {
                                            terms: [
                                                Term {
                                                    variable: Variable(
                                                        38,
                                                    ),
                                                    coefficient: NotNan(
                                                        1.0,
                                                    ),
                                                },
                                            ],
                                            constant: NotNan(
                                                -50.0,
                                            ),
                                        },
                                        strength: NotNan(
                                            900.0,
                                        ),
                                        op: Equal,
                                    },
                                ),
                                Constraint(
                                    ConstraintData {
                                        expression: Expression {
                                            terms: [
                                                Term {
                                                    variable: Variable(
                                                        39,
                                                    ),
                                                    coefficient: NotNan(
                                                        1.0,
                                                    ),
                                                },
                                            ],
                                            constant: NotNan(
                                                -50.0,
                                            ),
                                        },
                                        strength: NotNan(
                                            900.0,
                                        ),
                                        op: Equal,
                                    },
                                ),
                                Constraint(
                                    ConstraintData {
                                        expression: Expression {
                                            terms: [
                                                Term {
                                                    variable: Variable(
                                                        43,
                                                    ),
                                                    coefficient: NotNan(
                                                        1.0,
                                                    ),
                                                },
                                                Term {
                                                    variable: Variable(
                                                        41,
                                                    ),
                                                    coefficient: NotNan(
                                                        -1.0,
                                                    ),
                                                },
                                                Term {
                                                    variable: Variable(
                                                        38,
                                                    ),
                                                    coefficient: NotNan(
                                                        -1.0,
                                                    ),
                                                },
                                            ],
                                            constant: NotNan(
                                                0.0,
                                            ),
                                        },
                                        strength: NotNan(
                                            1001001000.0,
                                        ),
                                        op: Equal,
                                    },
                                ),
                                Constraint(
                                    ConstraintData {
                                        expression: Expression {
                                            terms: [
                                                Term {
                                                    variable: Variable(
                                                        42,
                                                    ),
                                                    coefficient: NotNan(
                                                        1.0,
                                                    ),
                                                },
                                                Term {
                                                    variable: Variable(
                                                        40,
                                                    ),
                                                    coefficient: NotNan(
                                                        -1.0,
                                                    ),
                                                },
                                                Term {
                                                    variable: Variable(
                                                        39,
                                                    ),
                                                    coefficient: NotNan(
                                                        -1.0,
                                                    ),
                                                },
                                            ],
                                            constant: NotNan(
                                                0.0,
                                            ),
                                        },
                                        strength: NotNan(
                                            1001001000.0,
                                        ),
                                        op: Equal,
                                    },
                                ),
                                Constraint(
                                    ConstraintData {
                                        expression: Expression {
                                            terms: [
                                                Term {
                                                    variable: Variable(
                                                        42,
                                                    ),
                                                    coefficient: NotNan(
                                                        1.0,
                                                    ),
                                                },
                                                Term {
                                                    variable: Variable(
                                                        40,
                                                    ),
                                                    coefficient: NotNan(
                                                        -1.0,
                                                    ),
                                                },
                                            ],
                                            constant: NotNan(
                                                0.0,
                                            ),
                                        },
                                        strength: NotNan(
                                            1001001000.0,
                                        ),
                                        op: GreaterOrEqual,
                                    },
                                ),
                                Constraint(
                                    ConstraintData {
                                        expression: Expression {
                                            terms: [
                                                Term {
                                                    variable: Variable(
                                                        43,
                                                    ),
                                                    coefficient: NotNan(
                                                        1.0,
                                                    ),
                                                },
                                                Term {
                                                    variable: Variable(
                                                        41,
                                                    ),
                                                    coefficient: NotNan(
                                                        -1.0,
                                                    ),
                                                },
                                            ],
                                            constant: NotNan(
                                                0.0,
                                            ),
                                        },
                                        strength: NotNan(
                                            1001001000.0,
                                        ),
                                        op: GreaterOrEqual,
                                    },
                                ),
                                Constraint(
                                    ConstraintData {
                                        expression: Expression {
                                            terms: [
                                                Term {
                                                    variable: Variable(
                                                        38,
                                                    ),
                                                    coefficient: NotNan(
                                                        1.0,
                                                    ),
                                                },
                                            ],
                                            constant: NotNan(
                                                0.0,
                                            ),
                                        },
                                        strength: NotNan(
                                            1001001000.0,
                                        ),
                                        op: GreaterOrEqual,
                                    },
                                ),
                                Constraint(
                                    ConstraintData {
                                        expression: Expression {
                                            terms: [
                                                Term {
                                                    variable: Variable(
                                                        39,
                                                    ),
                                                    coefficient: NotNan(
                                                        1.0,
                                                    ),
                                                },
                                            ],
                                            constant: NotNan(
                                                0.0,
                                            ),
                                        },
                                        strength: NotNan(
                                            1001001000.0,
                                        ),
                                        op: GreaterOrEqual,
                                    },
                                ),
                                Constraint(
                                    ConstraintData {
                                        expression: Expression {
                                            terms: [
                                                Term {
                                                    variable: Variable(
                                                        40,
                                                    ),
                                                    coefficient: NotNan(
                                                        1.0,
                                                    ),
                                                },
                                            ],
                                            constant: NotNan(
                                                0.0,
                                            ),
                                        },
                                        strength: NotNan(
                                            1.0,
                                        ),
                                        op: GreaterOrEqual,
                                    },
                                ),
                                Constraint(
                                    ConstraintData {
                                        expression: Expression {
                                            terms: [
                                                Term {
                                                    variable: Variable(
                                                        41,
                                                    ),
                                                    coefficient: NotNan(
                                                        1.0,
                                                    ),
                                                },
                                            ],
                                            constant: NotNan(
                                                0.0,
                                            ),
                                        },
                                        strength: NotNan(
                                            1.0,
                                        ),
                                        op: GreaterOrEqual,
                                    },
                                ),
                            ],
                        ),
                        cassowary_inherited_generals_sa: StateAnchor(
                            CassowaryGeneralMap {
                                map: {
                                    "align_x": Variable(
                                        48,
                                    ),
                                    "align_y": Variable(
                                        49,
                                    ),
                                    "align_z": Variable(
                                        50,
                                    ),
                                    "baseline": Variable(
                                        37,
                                    ),
                                    "bottom": Variable(
                                        42,
                                    ),
                                    "height": Variable(
                                        39,
                                    ),
                                    "hgap": Variable(
                                        33,
                                    ),
                                    "left": Variable(
                                        41,
                                    ),
                                    "origin_x": Variable(
                                        45,
                                    ),
                                    "origin_y": Variable(
                                        46,
                                    ),
                                    "origin_z": Variable(
                                        47,
                                    ),
                                    "right": Variable(
                                        43,
                                    ),
                                    "top": Variable(
                                        40,
                                    ),
                                    "vgap": Variable(
                                        35,
                                    ),
                                    "width": Variable(
                                        38,
                                    ),
                                    "z": Variable(
                                        44,
                                    ),
                                },
                                v_v_suggest: {
                                    Variable(
                                        33,
                                    ): 10.0,
                                    Variable(
                                        35,
                                    ): 10.0,
                                    Variable(
                                        37,
                                    ): 16.0,
                                },
                                virtual_constraints: {},
                                top_virtual_constraints: {},
                                top_map: {
                                    "baseline": Variable(
                                        36,
                                    ),
                                    "hgap": Variable(
                                        32,
                                    ),
                                    "vgap": Variable(
                                        34,
                                    ),
                                },
                                top_v_v_suggest: {
                                    Variable(
                                        32,
                                    ): 10.0,
                                    Variable(
                                        34,
                                    ): 10.0,
                                    Variable(
                                        36,
                                    ): 16.0,
                                },
                                parent: Some(
                                    CassowaryGeneralMap {
                                        map: {
                                            "align_x": Variable(
                                                29,
                                            ),
                                            "align_y": Variable(
                                                30,
                                            ),
                                            "align_z": Variable(
                                                31,
                                            ),
                                            "baseline": Variable(
                                                37,
                                            ),
                                            "bottom": Variable(
                                                23,
                                            ),
                                            "height": Variable(
                                                20,
                                            ),
                                            "hgap": Variable(
                                                33,
                                            ),
                                            "left": Variable(
                                                22,
                                            ),
                                            "origin_x": Variable(
                                                26,
                                            ),
                                            "origin_y": Variable(
                                                27,
                                            ),
                                            "origin_z": Variable(
                                                28,
                                            ),
                                            "right": Variable(
                                                24,
                                            ),
                                            "top": Variable(
                                                21,
                                            ),
                                            "vgap": Variable(
                                                35,
                                            ),
                                            "width": Variable(
                                                19,
                                            ),
                                            "z": Variable(
                                                25,
                                            ),
                                        },
                                        v_v_suggest: {
                                            Variable(
                                                33,
                                            ): 10.0,
                                            Variable(
                                                35,
                                            ): 10.0,
                                            Variable(
                                                37,
                                            ): 16.0,
                                        },
                                        virtual_constraints: {},
                                        top_virtual_constraints: {},
                                        top_map: {
                                            "baseline": Variable(
                                                36,
                                            ),
                                            "hgap": Variable(
                                                32,
                                            ),
                                            "vgap": Variable(
                                                34,
                                            ),
                                        },
                                        top_v_v_suggest: {
                                            Variable(
                                                32,
                                            ): 10.0,
                                            Variable(
                                                34,
                                            ): 10.0,
                                            Variable(
                                                36,
                                            ): 16.0,
                                        },
                                        parent: None,
                                    },
                                ),
                            },
                        ),
                        cass_or_calc_size: StateAnchor(
                            [
                                [
                                    50.0,
                                    50.0,
                                ],
                            ],
                        ),
                        origin: StateAnchor(
                            [
                                0.0,
                                0.0,
                                0.0,
                            ],
                        ),
                        align: StateAnchor(
                            [
                                960.0,
                                540.0,
                                0.0,
                            ],
                        ),
                        translation: StateAnchor(
                            [
                                960.0,
                                540.0,
                                0.0,
                            ],
                        ),
                        coordinates_trans: StateAnchor(
                            [
                                960.0,
                                540.0,
                                0.0,
                            ],
                        ),
                        cass_trans: StateAnchor(
                            [
                                0.0,
                                0.0,
                                0.0,
                            ],
                        ),
                        matrix: StateAnchor(
                            Mat4(
                                [
                                    [
                                        1.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                    ],
                                    [
                                        0.0,
                                        1.0,
                                        0.0,
                                        0.0,
                                    ],
                                    [
                                        0.0,
                                        0.0,
                                        1.0,
                                        0.0,
                                    ],
                                    [
                                        960.0,
                                        540.0,
                                        0.0,
                                        1.0,
                                    ],
                                ],
                            ),
                        ),
                        loc_styles: StateAnchor(
                            Style {
                                media_rules: {},
                                rules: [
                                    Rule {
                                        value: StringValue(
                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,960,540,0,1)",
                                        ),
                                    },
                                ],
                                updated_at: [
                                    "emg_layout/src/calc.rs:472:29",
                                    "emg_layout/src/calc.rs:472:33",
                                ],
                                pseudo: None,
                                media: None,
                                name: "",
                                keyframes: Keyframes {
                                    frames: [],
                                },
                                combinator: None,
                                pre_combinators: [],
                            },
                        ),
                        world: StateAnchor(
                            [
                                960.0,
                                540.0,
                                0.0,
                            ],
                        ),
                    },
                    cassowary_map: CassowaryMap {
                        map: {
                            "align_x": Variable(
                                48,
                            ),
                            "align_y": Variable(
                                49,
                            ),
                            "align_z": Variable(
                                50,
                            ),
                            "bottom": Variable(
                                42,
                            ),
                            "height": Variable(
                                39,
                            ),
                            "left": Variable(
                                41,
                            ),
                            "origin_x": Variable(
                                45,
                            ),
                            "origin_y": Variable(
                                46,
                            ),
                            "origin_z": Variable(
                                47,
                            ),
                            "right": Variable(
                                43,
                            ),
                            "top": Variable(
                                40,
                            ),
                            "width": Variable(
                                38,
                            ),
                            "z": Variable(
                                44,
                            ),
                        },
                        v_k: {
                            Variable(
                                38,
                            ): "width",
                            Variable(
                                39,
                            ): "height",
                            Variable(
                                40,
                            ): "top",
                            Variable(
                                41,
                            ): "left",
                            Variable(
                                42,
                            ): "bottom",
                            Variable(
                                43,
                            ): "right",
                            Variable(
                                44,
                            ): "z",
                            Variable(
                                45,
                            ): "origin_x",
                            Variable(
                                46,
                            ): "origin_y",
                            Variable(
                                47,
                            ): "origin_z",
                            Variable(
                                48,
                            ): "align_x",
                            Variable(
                                49,
                            ): "align_y",
                            Variable(
                                50,
                            ): "align_z",
                        },
                    },
                    children_vars_sa: StateAnchor(
                        {},
                    ),
                    cassowary_calculated_vars: StateAnchor(
                        {
                            Variable(
                                32,
                            ): (
                                NotNan(
                                    10.0,
                                ),
                                "",
                            ),
                            Variable(
                                33,
                            ): (
                                NotNan(
                                    10.0,
                                ),
                                "",
                            ),
                            Variable(
                                34,
                            ): (
                                NotNan(
                                    10.0,
                                ),
                                "",
                            ),
                            Variable(
                                35,
                            ): (
                                NotNan(
                                    10.0,
                                ),
                                "",
                            ),
                            Variable(
                                36,
                            ): (
                                NotNan(
                                    16.0,
                                ),
                                "",
                            ),
                            Variable(
                                37,
                            ): (
                                NotNan(
                                    16.0,
                                ),
                                "",
                            ),
                            Variable(
                                38,
                            ): (
                                NotNan(
                                    50.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"root\")))->OptionNodeIndex(Some(NodeIndex(\"1\"))))])[width] ",
                            ),
                            Variable(
                                39,
                            ): (
                                NotNan(
                                    50.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"root\")))->OptionNodeIndex(Some(NodeIndex(\"1\"))))])[height] ",
                            ),
                            Variable(
                                40,
                            ): (
                                NotNan(
                                    -0.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"root\")))->OptionNodeIndex(Some(NodeIndex(\"1\"))))])[top] ",
                            ),
                            Variable(
                                41,
                            ): (
                                NotNan(
                                    -0.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"root\")))->OptionNodeIndex(Some(NodeIndex(\"1\"))))])[left] ",
                            ),
                            Variable(
                                42,
                            ): (
                                NotNan(
                                    50.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"root\")))->OptionNodeIndex(Some(NodeIndex(\"1\"))))])[bottom] ",
                            ),
                            Variable(
                                43,
                            ): (
                                NotNan(
                                    50.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"root\")))->OptionNodeIndex(Some(NodeIndex(\"1\"))))])[right] ",
                            ),
                            Variable(
                                45,
                            ): (
                                NotNan(
                                    0.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"root\")))->OptionNodeIndex(Some(NodeIndex(\"1\"))))])[origin_x] ",
                            ),
                            Variable(
                                46,
                            ): (
                                NotNan(
                                    0.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"root\")))->OptionNodeIndex(Some(NodeIndex(\"1\"))))])[origin_y] ",
                            ),
                            Variable(
                                48,
                            ): (
                                NotNan(
                                    960.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"root\")))->OptionNodeIndex(Some(NodeIndex(\"1\"))))])[align_x] ",
                            ),
                            Variable(
                                49,
                            ): (
                                NotNan(
                                    540.0,
                                ),
                                "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"root\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"root\")))->OptionNodeIndex(Some(NodeIndex(\"1\"))))])[align_y] ",
                            ),
                        },
                    ),
                    cassowary_calculated_layout: StateAnchor(
                        (
                            Some(
                                50.0,
                            ),
                            Some(
                                50.0,
                            ),
                        ),
                    ),
                    styles_string: StateAnchor(
                        "transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,960,540,0,1);\n width: 50px;\nheight: 50px;\n",
                    ),
                    ctx: EdgeCtx {
                        styles_end: StateAnchor(
                            {},
                        ),
                        layout_end: StateAnchor(
                            (
                                [
                                    960.0,
                                    540.0,
                                    0.0,
                                ],
                                50.0,
                                50.0,
                            ),
                        ),
                        world: StateAnchor(
                            [
                                960.0,
                                540.0,
                                0.0,
                            ],
                        ),
                        children_layout: StateAnchor(
                            None,
                        ),
                    },
                    opt_p_calculated: Some(
                        LayoutCalculated {
                            size_constraints: StateAnchor(
                                [
                                    Constraint(
                                        ConstraintData {
                                            expression: Expression {
                                                terms: [
                                                    Term {
                                                        variable: Variable(
                                                            19,
                                                        ),
                                                        coefficient: NotNan(
                                                            1.0,
                                                        ),
                                                    },
                                                ],
                                                constant: NotNan(
                                                    -1920.0,
                                                ),
                                            },
                                            strength: NotNan(
                                                1001001000.0,
                                            ),
                                            op: Equal,
                                        },
                                    ),
                                    Constraint(
                                        ConstraintData {
                                            expression: Expression {
                                                terms: [
                                                    Term {
                                                        variable: Variable(
                                                            20,
                                                        ),
                                                        coefficient: NotNan(
                                                            1.0,
                                                        ),
                                                    },
                                                ],
                                                constant: NotNan(
                                                    -1080.0,
                                                ),
                                            },
                                            strength: NotNan(
                                                1001001000.0,
                                            ),
                                            op: Equal,
                                        },
                                    ),
                                    Constraint(
                                        ConstraintData {
                                            expression: Expression {
                                                terms: [
                                                    Term {
                                                        variable: Variable(
                                                            23,
                                                        ),
                                                        coefficient: NotNan(
                                                            1.0,
                                                        ),
                                                    },
                                                    Term {
                                                        variable: Variable(
                                                            21,
                                                        ),
                                                        coefficient: NotNan(
                                                            -1.0,
                                                        ),
                                                    },
                                                    Term {
                                                        variable: Variable(
                                                            20,
                                                        ),
                                                        coefficient: NotNan(
                                                            -1.0,
                                                        ),
                                                    },
                                                ],
                                                constant: NotNan(
                                                    0.0,
                                                ),
                                            },
                                            strength: NotNan(
                                                1001001000.0,
                                            ),
                                            op: Equal,
                                        },
                                    ),
                                    Constraint(
                                        ConstraintData {
                                            expression: Expression {
                                                terms: [
                                                    Term {
                                                        variable: Variable(
                                                            24,
                                                        ),
                                                        coefficient: NotNan(
                                                            1.0,
                                                        ),
                                                    },
                                                    Term {
                                                        variable: Variable(
                                                            22,
                                                        ),
                                                        coefficient: NotNan(
                                                            -1.0,
                                                        ),
                                                    },
                                                    Term {
                                                        variable: Variable(
                                                            19,
                                                        ),
                                                        coefficient: NotNan(
                                                            -1.0,
                                                        ),
                                                    },
                                                ],
                                                constant: NotNan(
                                                    0.0,
                                                ),
                                            },
                                            strength: NotNan(
                                                1001001000.0,
                                            ),
                                            op: Equal,
                                        },
                                    ),
                                    Constraint(
                                        ConstraintData {
                                            expression: Expression {
                                                terms: [
                                                    Term {
                                                        variable: Variable(
                                                            23,
                                                        ),
                                                        coefficient: NotNan(
                                                            1.0,
                                                        ),
                                                    },
                                                    Term {
                                                        variable: Variable(
                                                            21,
                                                        ),
                                                        coefficient: NotNan(
                                                            -1.0,
                                                        ),
                                                    },
                                                ],
                                                constant: NotNan(
                                                    0.0,
                                                ),
                                            },
                                            strength: NotNan(
                                                1001001000.0,
                                            ),
                                            op: GreaterOrEqual,
                                        },
                                    ),
                                    Constraint(
                                        ConstraintData {
                                            expression: Expression {
                                                terms: [
                                                    Term {
                                                        variable: Variable(
                                                            24,
                                                        ),
                                                        coefficient: NotNan(
                                                            1.0,
                                                        ),
                                                    },
                                                    Term {
                                                        variable: Variable(
                                                            22,
                                                        ),
                                                        coefficient: NotNan(
                                                            -1.0,
                                                        ),
                                                    },
                                                ],
                                                constant: NotNan(
                                                    0.0,
                                                ),
                                            },
                                            strength: NotNan(
                                                1001001000.0,
                                            ),
                                            op: GreaterOrEqual,
                                        },
                                    ),
                                    Constraint(
                                        ConstraintData {
                                            expression: Expression {
                                                terms: [
                                                    Term {
                                                        variable: Variable(
                                                            19,
                                                        ),
                                                        coefficient: NotNan(
                                                            1.0,
                                                        ),
                                                    },
                                                ],
                                                constant: NotNan(
                                                    0.0,
                                                ),
                                            },
                                            strength: NotNan(
                                                1001001000.0,
                                            ),
                                            op: GreaterOrEqual,
                                        },
                                    ),
                                    Constraint(
                                        ConstraintData {
                                            expression: Expression {
                                                terms: [
                                                    Term {
                                                        variable: Variable(
                                                            20,
                                                        ),
                                                        coefficient: NotNan(
                                                            1.0,
                                                        ),
                                                    },
                                                ],
                                                constant: NotNan(
                                                    0.0,
                                                ),
                                            },
                                            strength: NotNan(
                                                1001001000.0,
                                            ),
                                            op: GreaterOrEqual,
                                        },
                                    ),
                                    Constraint(
                                        ConstraintData {
                                            expression: Expression {
                                                terms: [
                                                    Term {
                                                        variable: Variable(
                                                            21,
                                                        ),
                                                        coefficient: NotNan(
                                                            1.0,
                                                        ),
                                                    },
                                                ],
                                                constant: NotNan(
                                                    0.0,
                                                ),
                                            },
                                            strength: NotNan(
                                                1.0,
                                            ),
                                            op: GreaterOrEqual,
                                        },
                                    ),
                                    Constraint(
                                        ConstraintData {
                                            expression: Expression {
                                                terms: [
                                                    Term {
                                                        variable: Variable(
                                                            22,
                                                        ),
                                                        coefficient: NotNan(
                                                            1.0,
                                                        ),
                                                    },
                                                ],
                                                constant: NotNan(
                                                    0.0,
                                                ),
                                            },
                                            strength: NotNan(
                                                1.0,
                                            ),
                                            op: GreaterOrEqual,
                                        },
                                    ),
                                ],
                            ),
                            cassowary_inherited_generals_sa: StateAnchor(
                                CassowaryGeneralMap {
                                    map: {
                                        "align_x": Variable(
                                            29,
                                        ),
                                        "align_y": Variable(
                                            30,
                                        ),
                                        "align_z": Variable(
                                            31,
                                        ),
                                        "baseline": Variable(
                                            37,
                                        ),
                                        "bottom": Variable(
                                            23,
                                        ),
                                        "height": Variable(
                                            20,
                                        ),
                                        "hgap": Variable(
                                            33,
                                        ),
                                        "left": Variable(
                                            22,
                                        ),
                                        "origin_x": Variable(
                                            26,
                                        ),
                                        "origin_y": Variable(
                                            27,
                                        ),
                                        "origin_z": Variable(
                                            28,
                                        ),
                                        "right": Variable(
                                            24,
                                        ),
                                        "top": Variable(
                                            21,
                                        ),
                                        "vgap": Variable(
                                            35,
                                        ),
                                        "width": Variable(
                                            19,
                                        ),
                                        "z": Variable(
                                            25,
                                        ),
                                    },
                                    v_v_suggest: {
                                        Variable(
                                            33,
                                        ): 10.0,
                                        Variable(
                                            35,
                                        ): 10.0,
                                        Variable(
                                            37,
                                        ): 16.0,
                                    },
                                    virtual_constraints: {},
                                    top_virtual_constraints: {},
                                    top_map: {
                                        "baseline": Variable(
                                            36,
                                        ),
                                        "hgap": Variable(
                                            32,
                                        ),
                                        "vgap": Variable(
                                            34,
                                        ),
                                    },
                                    top_v_v_suggest: {
                                        Variable(
                                            32,
                                        ): 10.0,
                                        Variable(
                                            34,
                                        ): 10.0,
                                        Variable(
                                            36,
                                        ): 16.0,
                                    },
                                    parent: None,
                                },
                            ),
                            cass_or_calc_size: StateAnchor(
                                [
                                    [
                                        1920.0,
                                        1080.0,
                                    ],
                                ],
                            ),
                            origin: StateAnchor(
                                [
                                    0.0,
                                    0.0,
                                    0.0,
                                ],
                            ),
                            align: StateAnchor(
                                [
                                    0.0,
                                    0.0,
                                    0.0,
                                ],
                            ),
                            translation: StateAnchor(
                                [
                                    0.0,
                                    0.0,
                                    0.0,
                                ],
                            ),
                            coordinates_trans: StateAnchor(
                                [
                                    0.0,
                                    0.0,
                                    0.0,
                                ],
                            ),
                            cass_trans: StateAnchor(
                                [
                                    0.0,
                                    0.0,
                                    0.0,
                                ],
                            ),
                            matrix: StateAnchor(
                                Mat4(
                                    [
                                        [
                                            1.0,
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                        [
                                            0.0,
                                            1.0,
                                            0.0,
                                            0.0,
                                        ],
                                        [
                                            0.0,
                                            0.0,
                                            1.0,
                                            0.0,
                                        ],
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                            1.0,
                                        ],
                                    ],
                                ),
                            ),
                            loc_styles: StateAnchor(
                                Style {
                                    media_rules: {},
                                    rules: [
                                        Rule {
                                            value: Length(
                                                Simplex(
                                                    ExactLengthSimplex {
                                                        unit: Px,
                                                        value: NotNan(
                                                            1920.0,
                                                        ),
                                                    },
                                                ),
                                            ),
                                        },
                                        Rule {
                                            value: Length(
                                                Simplex(
                                                    ExactLengthSimplex {
                                                        unit: Px,
                                                        value: NotNan(
                                                            1080.0,
                                                        ),
                                                    },
                                                ),
                                            ),
                                        },
                                        Rule {
                                            value: StringValue(
                                                "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                            ),
                                        },
                                    ],
                                    updated_at: [
                                        "emg_layout/src/lib.rs:1903:13",
                                        "emg_layout/src/lib.rs:1903:17",
                                        "emg_layout/src/lib.rs:1903:31",
                                        "emg_layout/src/lib.rs:1903:45",
                                    ],
                                    pseudo: None,
                                    media: None,
                                    name: "",
                                    keyframes: Keyframes {
                                        frames: [],
                                    },
                                    combinator: None,
                                    pre_combinators: [],
                                },
                            ),
                            world: StateAnchor(
                                [
                                    0.0,
                                    0.0,
                                    0.0,
                                ],
                            ),
                        },
                    ),
                },
            ),
        },
    ),
}
