---
source: examples/counter/src/main.rs
assertion_line: 149
expression: graph.borrow()
---
Graph {
    node_count: 12,
    edges_count: 12,
    node item: {
        "GEl-ti_HF3oa": Node {
            item: EmgNodeItem {
                gel_sa: StateVar(
                    StateAnchor(
                        GElement::NodeIndex("a2"),
                    ),
                ),
                paths_sa: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("GEl-ti_HF3oa")))),
                            ],
                        ): (),
                    },
                ),
                paths_view_gel: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("GEl-ti_HF3oa")))),
                            ],
                        ): GElement::Builder_(
                            NodeBuilderWidget {
                                id: "GEl-ti_HF3oa",
                                widget: GElement::Layer(
                                    Layer {
                                        id: "a2",
                                        children: [],
                                    },
                                ),
                                event_listener: EventBuilder {
                                    event_callbacks: {},
                                },
                                widget_state: StateAnchor(
                                    WidgetState {
                                        children_layout_override: None,
                                        size: 120.0WÃ—120.0H,
                                        translation: [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                        world: [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                        fill: Some(
                                            Rgba(
                                                1.0,
                                                0.0,
                                                1.0,
                                                1.0,
                                            ),
                                        ),
                                        border_width: Some(
                                            Length(
                                                Simplex(
                                                    ExactLengthSimplex {
                                                        unit: Px,
                                                        value: NotNan(
                                                            5.0,
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                        border_color: Some(
                                            Rgba(
                                                1.0,
                                                1.0,
                                                0.0,
                                                1.0,
                                            ),
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            incoming_count: 1,
            outgoing_count: 0,
            incoming: StateVar(
                {
                    EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("GEl-ti_HF3oa")))),
                },
            ),
        },
        "debug_layer": Node {
            item: EmgNodeItem {
                gel_sa: StateVar(
                    StateAnchor(
                        GElement::Layer(
                            Layer {
                                id: "debug_layer",
                                children: [],
                            },
                        ),
                    ),
                ),
                paths_sa: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                            ],
                        ): (),
                    },
                ),
                paths_view_gel: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                            ],
                        ): GElement::Builder_(
                            NodeBuilderWidget {
                                id: "debug_layer",
                                widget: GElement::Layer(
                                    Layer {
                                        id: "debug_layer",
                                        children: [
                                            GElement::Builder_(
                                                NodeBuilderWidget {
                                                    id: "a1",
                                                    widget: GElement::Layer(
                                                        Layer {
                                                            id: "a1",
                                                            children: [
                                                                GElement::Builder_(
                                                                    NodeBuilderWidget {
                                                                        id: "GEl-fPY-hr04",
                                                                        widget: GElement::Generic_(
                                                                            Checkbox {
                                                                                is_checked: false,
                                                                                label: "abcd2",
                                                                                id: None,
                                                                                width: Simplex(
                                                                                    ExactLengthSimplex {
                                                                                        unit: Px,
                                                                                        value: NotNan(
                                                                                            0.0,
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        event_listener: EventBuilder {
                                                                            event_callbacks: {
                                                                                EventIdentify(
                                                                                    2,
                                                                                    19,
                                                                                ): [
                                                                                    EventNode<Message>(
                                                                                        EventMessage(
                                                                                            EventIdentify(
                                                                                                2,
                                                                                                19,
                                                                                            ),
                                                                                            "EventMessageFn<Message>",
                                                                                        ),
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                        widget_state: StateAnchor(
                                                                            WidgetState {
                                                                                children_layout_override: Some(
                                                                                    LayoutOverride {
                                                                                        rect_tree: {
                                                                                            RectLTRB {
                                                                                                x0: NotNan(
                                                                                                    250.0,
                                                                                                ),
                                                                                                y0: NotNan(
                                                                                                    250.0,
                                                                                                ),
                                                                                                x1: NotNan(
                                                                                                    250.0,
                                                                                                ),
                                                                                                y1: NotNan(
                                                                                                    250.0,
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                        bbox: RectLTRB {
                                                                                            x0: NotNan(
                                                                                                250.0,
                                                                                            ),
                                                                                            y0: NotNan(
                                                                                                250.0,
                                                                                            ),
                                                                                            x1: NotNan(
                                                                                                250.0,
                                                                                            ),
                                                                                            y1: NotNan(
                                                                                                250.0,
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                                size: 30.0WÃ—30.0H,
                                                                                translation: [
                                                                                    250.0,
                                                                                    250.0,
                                                                                    0.0,
                                                                                ],
                                                                                world: [
                                                                                    250.0,
                                                                                    250.0,
                                                                                    0.0,
                                                                                ],
                                                                                fill: Some(
                                                                                    Rgba(
                                                                                        1.0,
                                                                                        1.0,
                                                                                        1.0,
                                                                                        1.0,
                                                                                    ),
                                                                                ),
                                                                                border_width: None,
                                                                                border_color: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                GElement::Builder_(
                                                                    NodeBuilderWidget {
                                                                        id: "a2",
                                                                        widget: GElement::Layer(
                                                                            Layer {
                                                                                id: "a2",
                                                                                children: [],
                                                                            },
                                                                        ),
                                                                        event_listener: EventBuilder {
                                                                            event_callbacks: {
                                                                                EventIdentify(
                                                                                    2,
                                                                                    19,
                                                                                ): [
                                                                                    EventNode<Message>(
                                                                                        EventMessage(
                                                                                            EventIdentify(
                                                                                                2,
                                                                                                19,
                                                                                            ),
                                                                                            "EventMessageFn<Message>",
                                                                                        ),
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                        widget_state: StateAnchor(
                                                                            WidgetState {
                                                                                children_layout_override: Some(
                                                                                    LayoutOverride {
                                                                                        rect_tree: {
                                                                                            RectLTRB {
                                                                                                x0: NotNan(
                                                                                                    120.0,
                                                                                                ),
                                                                                                y0: NotNan(
                                                                                                    0.0,
                                                                                                ),
                                                                                                x1: NotNan(
                                                                                                    120.0,
                                                                                                ),
                                                                                                y1: NotNan(
                                                                                                    0.0,
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                        bbox: RectLTRB {
                                                                                            x0: NotNan(
                                                                                                120.0,
                                                                                            ),
                                                                                            y0: NotNan(
                                                                                                0.0,
                                                                                            ),
                                                                                            x1: NotNan(
                                                                                                120.0,
                                                                                            ),
                                                                                            y1: NotNan(
                                                                                                0.0,
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                                size: 300.0WÃ—20.0H,
                                                                                translation: [
                                                                                    120.0,
                                                                                    0.0,
                                                                                    0.0,
                                                                                ],
                                                                                world: [
                                                                                    120.0,
                                                                                    0.0,
                                                                                    0.0,
                                                                                ],
                                                                                fill: Some(
                                                                                    Rgba(
                                                                                        1.0,
                                                                                        0.5,
                                                                                        0.0,
                                                                                        1.0,
                                                                                    ),
                                                                                ),
                                                                                border_width: None,
                                                                                border_color: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                GElement::Builder_(
                                                                    NodeBuilderWidget {
                                                                        id: "a3",
                                                                        widget: GElement::Layer(
                                                                            Layer {
                                                                                id: "a3",
                                                                                children: [],
                                                                            },
                                                                        ),
                                                                        event_listener: EventBuilder {
                                                                            event_callbacks: {},
                                                                        },
                                                                        widget_state: StateAnchor(
                                                                            WidgetState {
                                                                                children_layout_override: None,
                                                                                size: 30.0WÃ—30.0H,
                                                                                translation: [
                                                                                    300.0,
                                                                                    300.0,
                                                                                    0.0,
                                                                                ],
                                                                                world: [
                                                                                    300.0,
                                                                                    300.0,
                                                                                    0.0,
                                                                                ],
                                                                                fill: Some(
                                                                                    Rgba(
                                                                                        1.0,
                                                                                        1.0,
                                                                                        0.0,
                                                                                        1.0,
                                                                                    ),
                                                                                ),
                                                                                border_width: Some(
                                                                                    Length(
                                                                                        Simplex(
                                                                                            ExactLengthSimplex {
                                                                                                unit: Px,
                                                                                                value: NotNan(
                                                                                                    1.0,
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                ),
                                                                                border_color: Some(
                                                                                    Rgba(
                                                                                        1.0,
                                                                                        0.0,
                                                                                        0.0,
                                                                                        1.0,
                                                                                    ),
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                GElement::Builder_(
                                                                    NodeBuilderWidget {
                                                                        id: "a4",
                                                                        widget: GElement::Layer(
                                                                            Layer {
                                                                                id: "a4",
                                                                                children: [],
                                                                            },
                                                                        ),
                                                                        event_listener: EventBuilder {
                                                                            event_callbacks: {},
                                                                        },
                                                                        widget_state: StateAnchor(
                                                                            WidgetState {
                                                                                children_layout_override: None,
                                                                                size: 100.0WÃ—40.0H,
                                                                                translation: [
                                                                                    400.0,
                                                                                    400.0,
                                                                                    0.0,
                                                                                ],
                                                                                world: [
                                                                                    400.0,
                                                                                    400.0,
                                                                                    0.0,
                                                                                ],
                                                                                fill: Some(
                                                                                    Rgba(
                                                                                        1.0,
                                                                                        1.0,
                                                                                        0.0,
                                                                                        1.0,
                                                                                    ),
                                                                                ),
                                                                                border_width: Some(
                                                                                    Length(
                                                                                        Simplex(
                                                                                            ExactLengthSimplex {
                                                                                                unit: Px,
                                                                                                value: NotNan(
                                                                                                    7.0,
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                ),
                                                                                border_color: Some(
                                                                                    Rgba(
                                                                                        1.0,
                                                                                        0.0,
                                                                                        1.0,
                                                                                        1.0,
                                                                                    ),
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    event_listener: EventBuilder {
                                                        event_callbacks: {},
                                                    },
                                                    widget_state: StateAnchor(
                                                        WidgetState {
                                                            children_layout_override: Some(
                                                                LayoutOverride {
                                                                    rect_tree: {
                                                                        RectLTRB {
                                                                            x0: NotNan(
                                                                                120.0,
                                                                            ),
                                                                            y0: NotNan(
                                                                                0.0,
                                                                            ),
                                                                            x1: NotNan(
                                                                                420.0,
                                                                            ),
                                                                            y1: NotNan(
                                                                                20.0,
                                                                            ),
                                                                        },
                                                                        RectLTRB {
                                                                            x0: NotNan(
                                                                                250.0,
                                                                            ),
                                                                            y0: NotNan(
                                                                                250.0,
                                                                            ),
                                                                            x1: NotNan(
                                                                                280.0,
                                                                            ),
                                                                            y1: NotNan(
                                                                                280.0,
                                                                            ),
                                                                        },
                                                                        RectLTRB {
                                                                            x0: NotNan(
                                                                                300.0,
                                                                            ),
                                                                            y0: NotNan(
                                                                                300.0,
                                                                            ),
                                                                            x1: NotNan(
                                                                                330.0,
                                                                            ),
                                                                            y1: NotNan(
                                                                                330.0,
                                                                            ),
                                                                        },
                                                                        RectLTRB {
                                                                            x0: NotNan(
                                                                                400.0,
                                                                            ),
                                                                            y0: NotNan(
                                                                                400.0,
                                                                            ),
                                                                            x1: NotNan(
                                                                                500.0,
                                                                            ),
                                                                            y1: NotNan(
                                                                                440.0,
                                                                            ),
                                                                        },
                                                                    },
                                                                    bbox: RectLTRB {
                                                                        x0: NotNan(
                                                                            120.0,
                                                                        ),
                                                                        y0: NotNan(
                                                                            0.0,
                                                                        ),
                                                                        x1: NotNan(
                                                                            500.0,
                                                                        ),
                                                                        y1: NotNan(
                                                                            440.0,
                                                                        ),
                                                                    },
                                                                },
                                                            ),
                                                            size: 540.0WÃ—540.0H,
                                                            translation: [
                                                                0.0,
                                                                0.0,
                                                                0.0,
                                                            ],
                                                            world: [
                                                                0.0,
                                                                0.0,
                                                                0.0,
                                                            ],
                                                            fill: Some(
                                                                Hsl(
                                                                    150.0,
                                                                    100.0,
                                                                    100.0,
                                                                ),
                                                            ),
                                                            border_width: Some(
                                                                Length(
                                                                    Simplex(
                                                                        ExactLengthSimplex {
                                                                            unit: Px,
                                                                            value: NotNan(
                                                                                5.0,
                                                                            ),
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                            border_color: Some(
                                                                Rgba(
                                                                    1.0,
                                                                    0.0,
                                                                    0.0,
                                                                    1.0,
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            GElement::Builder_(
                                                NodeBuilderWidget {
                                                    id: "GEl-ti_HF3oa",
                                                    widget: GElement::Layer(
                                                        Layer {
                                                            id: "a2",
                                                            children: [],
                                                        },
                                                    ),
                                                    event_listener: EventBuilder {
                                                        event_callbacks: {},
                                                    },
                                                    widget_state: StateAnchor(
                                                        WidgetState {
                                                            children_layout_override: None,
                                                            size: 120.0WÃ—120.0H,
                                                            translation: [
                                                                0.0,
                                                                0.0,
                                                                0.0,
                                                            ],
                                                            world: [
                                                                0.0,
                                                                0.0,
                                                                0.0,
                                                            ],
                                                            fill: Some(
                                                                Rgba(
                                                                    1.0,
                                                                    0.0,
                                                                    1.0,
                                                                    1.0,
                                                                ),
                                                            ),
                                                            border_width: Some(
                                                                Length(
                                                                    Simplex(
                                                                        ExactLengthSimplex {
                                                                            unit: Px,
                                                                            value: NotNan(
                                                                                5.0,
                                                                            ),
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                            border_color: Some(
                                                                Rgba(
                                                                    1.0,
                                                                    1.0,
                                                                    0.0,
                                                                    1.0,
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                event_listener: EventBuilder {
                                    event_callbacks: {
                                        EventIdentify(
                                            2,
                                            19,
                                        ): [
                                            EventNode<Message>(
                                                EventMessage(
                                                    EventIdentify(
                                                        2,
                                                        19,
                                                    ),
                                                    "EventMessageFn<Message>",
                                                ),
                                            ),
                                        ],
                                    },
                                },
                                widget_state: StateAnchor(
                                    WidgetState {
                                        children_layout_override: Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            0.0,
                                                        ),
                                                        y0: NotNan(
                                                            0.0,
                                                        ),
                                                        x1: NotNan(
                                                            540.0,
                                                        ),
                                                        y1: NotNan(
                                                            540.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        0.0,
                                                    ),
                                                    y0: NotNan(
                                                        0.0,
                                                    ),
                                                    x1: NotNan(
                                                        540.0,
                                                    ),
                                                    y1: NotNan(
                                                        540.0,
                                                    ),
                                                },
                                            },
                                        ),
                                        size: 600.0WÃ—600.0H,
                                        translation: [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                        world: [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                        fill: None,
                                        border_width: None,
                                        border_color: None,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            incoming_count: 1,
            outgoing_count: 3,
            incoming: StateVar(
                {
                    EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                },
            ),
            outgoing: {
                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("Ev-CLICK-OBA")))),
                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("GEl-ti_HF3oa")))),
            },
        },
        "GEl-fPY-hr04|CLICK": Node {
            item: EmgNodeItem {
                gel_sa: StateVar(
                    StateAnchor(
                        GElement::EventCallBack_(
                            EventNode<Message>(
                                EventMessage(
                                    EventIdentify(
                                        2,
                                        19,
                                    ),
                                    "EventMessageFn<Message>",
                                ),
                            ),
                        ),
                    ),
                ),
                paths_sa: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04|CLICK")))),
                            ],
                        ): (),
                    },
                ),
                paths_view_gel: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04|CLICK")))),
                            ],
                        ): GElement::EventCallBack_(
                            EventNode<Message>(
                                EventMessage(
                                    EventIdentify(
                                        2,
                                        19,
                                    ),
                                    "EventMessageFn<Message>",
                                ),
                            ),
                        ),
                    },
                ),
            },
            incoming_count: 1,
            outgoing_count: 0,
            incoming: StateVar(
                {
                    EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04|CLICK")))),
                },
            ),
        },
        "Ev-CLICK-OBA": Node {
            item: EmgNodeItem {
                gel_sa: StateVar(
                    StateAnchor(
                        GElement::EventCallBack_(
                            EventNode<Message>(
                                EventMessage(
                                    EventIdentify(
                                        2,
                                        19,
                                    ),
                                    "EventMessageFn<Message>",
                                ),
                            ),
                        ),
                    ),
                ),
                paths_sa: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("Ev-CLICK-OBA")))),
                            ],
                        ): (),
                    },
                ),
                paths_view_gel: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("Ev-CLICK-OBA")))),
                            ],
                        ): GElement::EventCallBack_(
                            EventNode<Message>(
                                EventMessage(
                                    EventIdentify(
                                        2,
                                        19,
                                    ),
                                    "EventMessageFn<Message>",
                                ),
                            ),
                        ),
                    },
                ),
            },
            incoming_count: 1,
            outgoing_count: 0,
            incoming: StateVar(
                {
                    EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("Ev-CLICK-OBA")))),
                },
            ),
        },
        "a3": Node {
            item: EmgNodeItem {
                gel_sa: StateVar(
                    StateAnchor(
                        GElement::Layer(
                            Layer {
                                id: "a3",
                                children: [],
                            },
                        ),
                    ),
                ),
                paths_sa: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a3")))),
                            ],
                        ): (),
                    },
                ),
                paths_view_gel: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a3")))),
                            ],
                        ): GElement::Builder_(
                            NodeBuilderWidget {
                                id: "a3",
                                widget: GElement::Layer(
                                    Layer {
                                        id: "a3",
                                        children: [],
                                    },
                                ),
                                event_listener: EventBuilder {
                                    event_callbacks: {},
                                },
                                widget_state: StateAnchor(
                                    WidgetState {
                                        children_layout_override: None,
                                        size: 30.0WÃ—30.0H,
                                        translation: [
                                            300.0,
                                            300.0,
                                            0.0,
                                        ],
                                        world: [
                                            300.0,
                                            300.0,
                                            0.0,
                                        ],
                                        fill: Some(
                                            Rgba(
                                                1.0,
                                                1.0,
                                                0.0,
                                                1.0,
                                            ),
                                        ),
                                        border_width: Some(
                                            Length(
                                                Simplex(
                                                    ExactLengthSimplex {
                                                        unit: Px,
                                                        value: NotNan(
                                                            1.0,
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                        border_color: Some(
                                            Rgba(
                                                1.0,
                                                0.0,
                                                0.0,
                                                1.0,
                                            ),
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            incoming_count: 1,
            outgoing_count: 0,
            incoming: StateVar(
                {
                    EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a3")))),
                },
            ),
        },
        "GEl-e1LKf2dv": Node {
            item: EmgNodeItem {
                gel_sa: StateVar(
                    StateAnchor(
                        GElement::Generic_(
                            Checkbox {
                                is_checked: false,
                                label: "abcd2",
                                id: None,
                                width: Simplex(
                                    ExactLengthSimplex {
                                        unit: Px,
                                        value: NotNan(
                                            0.0,
                                        ),
                                    },
                                ),
                            },
                        ),
                    ),
                ),
                paths_sa: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))->OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv")))),
                            ],
                        ): (),
                    },
                ),
                paths_view_gel: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))->OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv")))),
                            ],
                        ): GElement::Builder_(
                            NodeBuilderWidget {
                                id: "GEl-e1LKf2dv",
                                widget: GElement::Generic_(
                                    Checkbox {
                                        is_checked: false,
                                        label: "abcd2",
                                        id: None,
                                        width: Simplex(
                                            ExactLengthSimplex {
                                                unit: Px,
                                                value: NotNan(
                                                    0.0,
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                event_listener: EventBuilder {
                                    event_callbacks: {
                                        EventIdentify(
                                            2,
                                            19,
                                        ): [
                                            EventNode<Message>(
                                                EventMessage(
                                                    EventIdentify(
                                                        2,
                                                        19,
                                                    ),
                                                    "EventMessageFn<Message>",
                                                ),
                                            ),
                                        ],
                                    },
                                },
                                widget_state: StateAnchor(
                                    WidgetState {
                                        children_layout_override: Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            250.0,
                                                        ),
                                                        y0: NotNan(
                                                            250.0,
                                                        ),
                                                        x1: NotNan(
                                                            250.0,
                                                        ),
                                                        y1: NotNan(
                                                            250.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        250.0,
                                                    ),
                                                    y0: NotNan(
                                                        250.0,
                                                    ),
                                                    x1: NotNan(
                                                        250.0,
                                                    ),
                                                    y1: NotNan(
                                                        250.0,
                                                    ),
                                                },
                                            },
                                        ),
                                        size: -0.0WÃ—-0.0H,
                                        translation: [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                        world: [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                        fill: None,
                                        border_width: None,
                                        border_color: None,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            incoming_count: 1,
            outgoing_count: 1,
            incoming: StateVar(
                {
                    EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))->OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv")))),
                },
            ),
            outgoing: {
                EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv")))->OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv|CLICK")))),
            },
        },
        "GEl-e1LKf2dv|CLICK": Node {
            item: EmgNodeItem {
                gel_sa: StateVar(
                    StateAnchor(
                        GElement::EventCallBack_(
                            EventNode<Message>(
                                EventMessage(
                                    EventIdentify(
                                        2,
                                        19,
                                    ),
                                    "EventMessageFn<Message>",
                                ),
                            ),
                        ),
                    ),
                ),
                paths_sa: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))->OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv")))->OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv|CLICK")))),
                            ],
                        ): (),
                    },
                ),
                paths_view_gel: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))->OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv")))->OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv|CLICK")))),
                            ],
                        ): GElement::EventCallBack_(
                            EventNode<Message>(
                                EventMessage(
                                    EventIdentify(
                                        2,
                                        19,
                                    ),
                                    "EventMessageFn<Message>",
                                ),
                            ),
                        ),
                    },
                ),
            },
            incoming_count: 1,
            outgoing_count: 0,
            incoming: StateVar(
                {
                    EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv")))->OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv|CLICK")))),
                },
            ),
        },
        "a4": Node {
            item: EmgNodeItem {
                gel_sa: StateVar(
                    StateAnchor(
                        GElement::Layer(
                            Layer {
                                id: "a4",
                                children: [],
                            },
                        ),
                    ),
                ),
                paths_sa: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a4")))),
                            ],
                        ): (),
                    },
                ),
                paths_view_gel: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a4")))),
                            ],
                        ): GElement::Builder_(
                            NodeBuilderWidget {
                                id: "a4",
                                widget: GElement::Layer(
                                    Layer {
                                        id: "a4",
                                        children: [],
                                    },
                                ),
                                event_listener: EventBuilder {
                                    event_callbacks: {},
                                },
                                widget_state: StateAnchor(
                                    WidgetState {
                                        children_layout_override: None,
                                        size: 100.0WÃ—40.0H,
                                        translation: [
                                            400.0,
                                            400.0,
                                            0.0,
                                        ],
                                        world: [
                                            400.0,
                                            400.0,
                                            0.0,
                                        ],
                                        fill: Some(
                                            Rgba(
                                                1.0,
                                                1.0,
                                                0.0,
                                                1.0,
                                            ),
                                        ),
                                        border_width: Some(
                                            Length(
                                                Simplex(
                                                    ExactLengthSimplex {
                                                        unit: Px,
                                                        value: NotNan(
                                                            7.0,
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                        border_color: Some(
                                            Rgba(
                                                1.0,
                                                0.0,
                                                1.0,
                                                1.0,
                                            ),
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            incoming_count: 1,
            outgoing_count: 0,
            incoming: StateVar(
                {
                    EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a4")))),
                },
            ),
        },
        "a1": Node {
            item: EmgNodeItem {
                gel_sa: StateVar(
                    StateAnchor(
                        GElement::Layer(
                            Layer {
                                id: "a1",
                                children: [],
                            },
                        ),
                    ),
                ),
                paths_sa: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                            ],
                        ): (),
                    },
                ),
                paths_view_gel: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                            ],
                        ): GElement::Builder_(
                            NodeBuilderWidget {
                                id: "a1",
                                widget: GElement::Layer(
                                    Layer {
                                        id: "a1",
                                        children: [
                                            GElement::Builder_(
                                                NodeBuilderWidget {
                                                    id: "GEl-fPY-hr04",
                                                    widget: GElement::Generic_(
                                                        Checkbox {
                                                            is_checked: false,
                                                            label: "abcd2",
                                                            id: None,
                                                            width: Simplex(
                                                                ExactLengthSimplex {
                                                                    unit: Px,
                                                                    value: NotNan(
                                                                        0.0,
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    event_listener: EventBuilder {
                                                        event_callbacks: {
                                                            EventIdentify(
                                                                2,
                                                                19,
                                                            ): [
                                                                EventNode<Message>(
                                                                    EventMessage(
                                                                        EventIdentify(
                                                                            2,
                                                                            19,
                                                                        ),
                                                                        "EventMessageFn<Message>",
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                    widget_state: StateAnchor(
                                                        WidgetState {
                                                            children_layout_override: Some(
                                                                LayoutOverride {
                                                                    rect_tree: {
                                                                        RectLTRB {
                                                                            x0: NotNan(
                                                                                250.0,
                                                                            ),
                                                                            y0: NotNan(
                                                                                250.0,
                                                                            ),
                                                                            x1: NotNan(
                                                                                250.0,
                                                                            ),
                                                                            y1: NotNan(
                                                                                250.0,
                                                                            ),
                                                                        },
                                                                    },
                                                                    bbox: RectLTRB {
                                                                        x0: NotNan(
                                                                            250.0,
                                                                        ),
                                                                        y0: NotNan(
                                                                            250.0,
                                                                        ),
                                                                        x1: NotNan(
                                                                            250.0,
                                                                        ),
                                                                        y1: NotNan(
                                                                            250.0,
                                                                        ),
                                                                    },
                                                                },
                                                            ),
                                                            size: 30.0WÃ—30.0H,
                                                            translation: [
                                                                250.0,
                                                                250.0,
                                                                0.0,
                                                            ],
                                                            world: [
                                                                250.0,
                                                                250.0,
                                                                0.0,
                                                            ],
                                                            fill: Some(
                                                                Rgba(
                                                                    1.0,
                                                                    1.0,
                                                                    1.0,
                                                                    1.0,
                                                                ),
                                                            ),
                                                            border_width: None,
                                                            border_color: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                            GElement::Builder_(
                                                NodeBuilderWidget {
                                                    id: "a2",
                                                    widget: GElement::Layer(
                                                        Layer {
                                                            id: "a2",
                                                            children: [],
                                                        },
                                                    ),
                                                    event_listener: EventBuilder {
                                                        event_callbacks: {
                                                            EventIdentify(
                                                                2,
                                                                19,
                                                            ): [
                                                                EventNode<Message>(
                                                                    EventMessage(
                                                                        EventIdentify(
                                                                            2,
                                                                            19,
                                                                        ),
                                                                        "EventMessageFn<Message>",
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                    widget_state: StateAnchor(
                                                        WidgetState {
                                                            children_layout_override: Some(
                                                                LayoutOverride {
                                                                    rect_tree: {
                                                                        RectLTRB {
                                                                            x0: NotNan(
                                                                                120.0,
                                                                            ),
                                                                            y0: NotNan(
                                                                                0.0,
                                                                            ),
                                                                            x1: NotNan(
                                                                                120.0,
                                                                            ),
                                                                            y1: NotNan(
                                                                                0.0,
                                                                            ),
                                                                        },
                                                                    },
                                                                    bbox: RectLTRB {
                                                                        x0: NotNan(
                                                                            120.0,
                                                                        ),
                                                                        y0: NotNan(
                                                                            0.0,
                                                                        ),
                                                                        x1: NotNan(
                                                                            120.0,
                                                                        ),
                                                                        y1: NotNan(
                                                                            0.0,
                                                                        ),
                                                                    },
                                                                },
                                                            ),
                                                            size: 300.0WÃ—20.0H,
                                                            translation: [
                                                                120.0,
                                                                0.0,
                                                                0.0,
                                                            ],
                                                            world: [
                                                                120.0,
                                                                0.0,
                                                                0.0,
                                                            ],
                                                            fill: Some(
                                                                Rgba(
                                                                    1.0,
                                                                    0.5,
                                                                    0.0,
                                                                    1.0,
                                                                ),
                                                            ),
                                                            border_width: None,
                                                            border_color: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                            GElement::Builder_(
                                                NodeBuilderWidget {
                                                    id: "a3",
                                                    widget: GElement::Layer(
                                                        Layer {
                                                            id: "a3",
                                                            children: [],
                                                        },
                                                    ),
                                                    event_listener: EventBuilder {
                                                        event_callbacks: {},
                                                    },
                                                    widget_state: StateAnchor(
                                                        WidgetState {
                                                            children_layout_override: None,
                                                            size: 30.0WÃ—30.0H,
                                                            translation: [
                                                                300.0,
                                                                300.0,
                                                                0.0,
                                                            ],
                                                            world: [
                                                                300.0,
                                                                300.0,
                                                                0.0,
                                                            ],
                                                            fill: Some(
                                                                Rgba(
                                                                    1.0,
                                                                    1.0,
                                                                    0.0,
                                                                    1.0,
                                                                ),
                                                            ),
                                                            border_width: Some(
                                                                Length(
                                                                    Simplex(
                                                                        ExactLengthSimplex {
                                                                            unit: Px,
                                                                            value: NotNan(
                                                                                1.0,
                                                                            ),
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                            border_color: Some(
                                                                Rgba(
                                                                    1.0,
                                                                    0.0,
                                                                    0.0,
                                                                    1.0,
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            GElement::Builder_(
                                                NodeBuilderWidget {
                                                    id: "a4",
                                                    widget: GElement::Layer(
                                                        Layer {
                                                            id: "a4",
                                                            children: [],
                                                        },
                                                    ),
                                                    event_listener: EventBuilder {
                                                        event_callbacks: {},
                                                    },
                                                    widget_state: StateAnchor(
                                                        WidgetState {
                                                            children_layout_override: None,
                                                            size: 100.0WÃ—40.0H,
                                                            translation: [
                                                                400.0,
                                                                400.0,
                                                                0.0,
                                                            ],
                                                            world: [
                                                                400.0,
                                                                400.0,
                                                                0.0,
                                                            ],
                                                            fill: Some(
                                                                Rgba(
                                                                    1.0,
                                                                    1.0,
                                                                    0.0,
                                                                    1.0,
                                                                ),
                                                            ),
                                                            border_width: Some(
                                                                Length(
                                                                    Simplex(
                                                                        ExactLengthSimplex {
                                                                            unit: Px,
                                                                            value: NotNan(
                                                                                7.0,
                                                                            ),
                                                                        },
                                                                    ),
                                                                ),
                                                            ),
                                                            border_color: Some(
                                                                Rgba(
                                                                    1.0,
                                                                    0.0,
                                                                    1.0,
                                                                    1.0,
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                event_listener: EventBuilder {
                                    event_callbacks: {},
                                },
                                widget_state: StateAnchor(
                                    WidgetState {
                                        children_layout_override: Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            120.0,
                                                        ),
                                                        y0: NotNan(
                                                            0.0,
                                                        ),
                                                        x1: NotNan(
                                                            420.0,
                                                        ),
                                                        y1: NotNan(
                                                            20.0,
                                                        ),
                                                    },
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            250.0,
                                                        ),
                                                        y0: NotNan(
                                                            250.0,
                                                        ),
                                                        x1: NotNan(
                                                            280.0,
                                                        ),
                                                        y1: NotNan(
                                                            280.0,
                                                        ),
                                                    },
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            300.0,
                                                        ),
                                                        y0: NotNan(
                                                            300.0,
                                                        ),
                                                        x1: NotNan(
                                                            330.0,
                                                        ),
                                                        y1: NotNan(
                                                            330.0,
                                                        ),
                                                    },
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            400.0,
                                                        ),
                                                        y0: NotNan(
                                                            400.0,
                                                        ),
                                                        x1: NotNan(
                                                            500.0,
                                                        ),
                                                        y1: NotNan(
                                                            440.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        120.0,
                                                    ),
                                                    y0: NotNan(
                                                        0.0,
                                                    ),
                                                    x1: NotNan(
                                                        500.0,
                                                    ),
                                                    y1: NotNan(
                                                        440.0,
                                                    ),
                                                },
                                            },
                                        ),
                                        size: 540.0WÃ—540.0H,
                                        translation: [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                        world: [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                        fill: Some(
                                            Hsl(
                                                150.0,
                                                100.0,
                                                100.0,
                                            ),
                                        ),
                                        border_width: Some(
                                            Length(
                                                Simplex(
                                                    ExactLengthSimplex {
                                                        unit: Px,
                                                        value: NotNan(
                                                            5.0,
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                        border_color: Some(
                                            Rgba(
                                                1.0,
                                                0.0,
                                                0.0,
                                                1.0,
                                            ),
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            incoming_count: 1,
            outgoing_count: 4,
            incoming: StateVar(
                {
                    EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                },
            ),
            outgoing: {
                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))),
                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a2")))),
                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a3")))),
                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a4")))),
            },
        },
        "a2": Node {
            item: EmgNodeItem {
                gel_sa: StateVar(
                    StateAnchor(
                        GElement::Layer(
                            Layer {
                                id: "a2",
                                children: [],
                            },
                        ),
                    ),
                ),
                paths_sa: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a2")))),
                            ],
                        ): (),
                    },
                ),
                paths_view_gel: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a2")))),
                            ],
                        ): GElement::Builder_(
                            NodeBuilderWidget {
                                id: "a2",
                                widget: GElement::Layer(
                                    Layer {
                                        id: "a2",
                                        children: [],
                                    },
                                ),
                                event_listener: EventBuilder {
                                    event_callbacks: {
                                        EventIdentify(
                                            2,
                                            19,
                                        ): [
                                            EventNode<Message>(
                                                EventMessage(
                                                    EventIdentify(
                                                        2,
                                                        19,
                                                    ),
                                                    "EventMessageFn<Message>",
                                                ),
                                            ),
                                        ],
                                    },
                                },
                                widget_state: StateAnchor(
                                    WidgetState {
                                        children_layout_override: Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            120.0,
                                                        ),
                                                        y0: NotNan(
                                                            0.0,
                                                        ),
                                                        x1: NotNan(
                                                            120.0,
                                                        ),
                                                        y1: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        120.0,
                                                    ),
                                                    y0: NotNan(
                                                        0.0,
                                                    ),
                                                    x1: NotNan(
                                                        120.0,
                                                    ),
                                                    y1: NotNan(
                                                        0.0,
                                                    ),
                                                },
                                            },
                                        ),
                                        size: 300.0WÃ—20.0H,
                                        translation: [
                                            120.0,
                                            0.0,
                                            0.0,
                                        ],
                                        world: [
                                            120.0,
                                            0.0,
                                            0.0,
                                        ],
                                        fill: Some(
                                            Rgba(
                                                1.0,
                                                0.5,
                                                0.0,
                                                1.0,
                                            ),
                                        ),
                                        border_width: None,
                                        border_color: None,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            incoming_count: 1,
            outgoing_count: 1,
            incoming: StateVar(
                {
                    EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a2")))),
                },
            ),
            outgoing: {
                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a2")))->OptionNodeIndex(Some(NodeIndex("Ev-CLICK-iis")))),
            },
        },
        "Ev-CLICK-iis": Node {
            item: EmgNodeItem {
                gel_sa: StateVar(
                    StateAnchor(
                        GElement::EventCallBack_(
                            EventNode<Message>(
                                EventMessage(
                                    EventIdentify(
                                        2,
                                        19,
                                    ),
                                    "EventMessageFn<Message>",
                                ),
                            ),
                        ),
                    ),
                ),
                paths_sa: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a2")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a2")))->OptionNodeIndex(Some(NodeIndex("Ev-CLICK-iis")))),
                            ],
                        ): (),
                    },
                ),
                paths_view_gel: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a2")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a2")))->OptionNodeIndex(Some(NodeIndex("Ev-CLICK-iis")))),
                            ],
                        ): GElement::EventCallBack_(
                            EventNode<Message>(
                                EventMessage(
                                    EventIdentify(
                                        2,
                                        19,
                                    ),
                                    "EventMessageFn<Message>",
                                ),
                            ),
                        ),
                    },
                ),
            },
            incoming_count: 1,
            outgoing_count: 0,
            incoming: StateVar(
                {
                    EdgeIndex(OptionNodeIndex(Some(NodeIndex("a2")))->OptionNodeIndex(Some(NodeIndex("Ev-CLICK-iis")))),
                },
            ),
        },
        "GEl-fPY-hr04": Node {
            item: EmgNodeItem {
                gel_sa: StateVar(
                    StateAnchor(
                        GElement::Generic_(
                            Checkbox {
                                is_checked: false,
                                label: "abcd",
                                id: None,
                                width: Simplex(
                                    ExactLengthSimplex {
                                        unit: Px,
                                        value: NotNan(
                                            0.0,
                                        ),
                                    },
                                ),
                            },
                        ),
                    ),
                ),
                paths_sa: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))),
                            ],
                        ): (),
                    },
                ),
                paths_view_gel: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))),
                            ],
                        ): GElement::Builder_(
                            NodeBuilderWidget {
                                id: "GEl-fPY-hr04",
                                widget: GElement::Generic_(
                                    Checkbox {
                                        is_checked: false,
                                        label: "abcd2",
                                        id: None,
                                        width: Simplex(
                                            ExactLengthSimplex {
                                                unit: Px,
                                                value: NotNan(
                                                    0.0,
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                event_listener: EventBuilder {
                                    event_callbacks: {
                                        EventIdentify(
                                            2,
                                            19,
                                        ): [
                                            EventNode<Message>(
                                                EventMessage(
                                                    EventIdentify(
                                                        2,
                                                        19,
                                                    ),
                                                    "EventMessageFn<Message>",
                                                ),
                                            ),
                                        ],
                                    },
                                },
                                widget_state: StateAnchor(
                                    WidgetState {
                                        children_layout_override: Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            250.0,
                                                        ),
                                                        y0: NotNan(
                                                            250.0,
                                                        ),
                                                        x1: NotNan(
                                                            250.0,
                                                        ),
                                                        y1: NotNan(
                                                            250.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        250.0,
                                                    ),
                                                    y0: NotNan(
                                                        250.0,
                                                    ),
                                                    x1: NotNan(
                                                        250.0,
                                                    ),
                                                    y1: NotNan(
                                                        250.0,
                                                    ),
                                                },
                                            },
                                        ),
                                        size: 30.0WÃ—30.0H,
                                        translation: [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                        world: [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                        fill: Some(
                                            Rgba(
                                                1.0,
                                                1.0,
                                                1.0,
                                                1.0,
                                            ),
                                        ),
                                        border_width: None,
                                        border_color: None,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            incoming_count: 1,
            outgoing_count: 2,
            incoming: StateVar(
                {
                    EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))),
                },
            ),
            outgoing: {
                EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))->OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv")))),
                EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04|CLICK")))),
            },
        },
    },
    edges: EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
    EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv")))->OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv|CLICK")))),
    EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))->OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv")))),
    EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04|CLICK")))),
    EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))),
    EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a2")))),
    EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a3")))),
    EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a4")))),
    EdgeIndex(OptionNodeIndex(Some(NodeIndex("a2")))->OptionNodeIndex(Some(NodeIndex("Ev-CLICK-iis")))),
    EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("Ev-CLICK-OBA")))),
    EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("GEl-ti_HF3oa")))),
    EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
    edge item: {
        EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))): Edge {
            item: EmgEdgeItem {
                id: StateVar(
                    StateAnchor(
                        EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                    ),
                ),
                paths: StateAnchor(
                    {
                        EPath(
                            [],
                        ): Empty,
                    },
                ),
                layout: Layout {
                    w: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Empty,
                                            value: NotNan(
                                                600.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    h: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Empty,
                                            value: NotNan(
                                                600.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    z: StateVar(
                        StateAnchor(
                            0,
                        ),
                    ),
                    origin_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    origin_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    origin_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    cassowary_constants: StateVar(
                        StateAnchor(
                            [],
                        ),
                    ),
                    cassowary_selectors: StateVar(
                        [],
                    ),
                    cassowary_generals: StateVar(
                        CassowaryGeneralMap {
                            map: {},
                            v_v_suggest: {},
                            virtual_constraints: {},
                            top_virtual_constraints: {},
                            top_map: {},
                            top_v_v_suggest: {},
                            parent: None,
                        },
                    ),
                },
                styles: StateVar(
                    {},
                ),
                path_styles: StateVar(
                    {},
                ),
                path_layouts: StateVar(
                    {},
                ),
                other_css_styles: StateVar(
                    Style {
                        media_rules: {},
                        rules: [],
                        updated_at: [
                            "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:942:45",
                        ],
                        pseudo: None,
                        media: None,
                        name: "",
                        keyframes: Keyframes {
                            frames: [],
                        },
                        combinator: None,
                        pre_combinators: [],
                    },
                ),
                edge_nodes: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Empty,
                                                                value: NotNan(
                                                                    600.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Empty,
                                                                value: NotNan(
                                                                    600.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {},
                                                v_v_suggest: {},
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {},
                                                top_v_v_suggest: {},
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    4,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            -600.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    5,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            -600.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    8,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    6,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    5,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    9,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    7,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    4,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    8,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    6,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    9,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    7,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    4,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    5,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    6,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    7,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    14,
                                                ),
                                                "align_y": Variable(
                                                    15,
                                                ),
                                                "align_z": Variable(
                                                    16,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    8,
                                                ),
                                                "height": Variable(
                                                    5,
                                                ),
                                                "hgap": Variable(
                                                    18,
                                                ),
                                                "left": Variable(
                                                    7,
                                                ),
                                                "origin_x": Variable(
                                                    11,
                                                ),
                                                "origin_y": Variable(
                                                    12,
                                                ),
                                                "origin_z": Variable(
                                                    13,
                                                ),
                                                "right": Variable(
                                                    9,
                                                ),
                                                "top": Variable(
                                                    6,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    4,
                                                ),
                                                "z": Variable(
                                                    10,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: None,
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                600.0,
                                                600.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    600.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                },
                                                Rule {
                                                    value: Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    600.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                },
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:13",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:17",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:31",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:45",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            14,
                                        ),
                                        "align_y": Variable(
                                            15,
                                        ),
                                        "align_z": Variable(
                                            16,
                                        ),
                                        "bottom": Variable(
                                            8,
                                        ),
                                        "height": Variable(
                                            5,
                                        ),
                                        "left": Variable(
                                            7,
                                        ),
                                        "origin_x": Variable(
                                            11,
                                        ),
                                        "origin_y": Variable(
                                            12,
                                        ),
                                        "origin_z": Variable(
                                            13,
                                        ),
                                        "right": Variable(
                                            9,
                                        ),
                                        "top": Variable(
                                            6,
                                        ),
                                        "width": Variable(
                                            4,
                                        ),
                                        "z": Variable(
                                            10,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            4,
                                        ): "width",
                                        Variable(
                                            5,
                                        ): "height",
                                        Variable(
                                            6,
                                        ): "top",
                                        Variable(
                                            7,
                                        ): "left",
                                        Variable(
                                            8,
                                        ): "bottom",
                                        Variable(
                                            9,
                                        ): "right",
                                        Variable(
                                            10,
                                        ): "z",
                                        Variable(
                                            11,
                                        ): "origin_x",
                                        Variable(
                                            12,
                                        ): "origin_y",
                                        Variable(
                                            13,
                                        ): "origin_z",
                                        Variable(
                                            14,
                                        ): "align_x",
                                        Variable(
                                            15,
                                        ): "align_y",
                                        Variable(
                                            16,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {},
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            4,
                                        ): (
                                            NotNan(
                                                600.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[width] ",
                                        ),
                                        Variable(
                                            5,
                                        ): (
                                            NotNan(
                                                600.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[height] ",
                                        ),
                                        Variable(
                                            6,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[top] ",
                                        ),
                                        Variable(
                                            7,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[left] ",
                                        ),
                                        Variable(
                                            8,
                                        ): (
                                            NotNan(
                                                600.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            9,
                                        ): (
                                            NotNan(
                                                600.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[right] ",
                                        ),
                                        Variable(
                                            11,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            12,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            14,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            15,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[align_y] ",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            23,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[width]",
                                        ),
                                        Variable(
                                            24,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[height]",
                                        ),
                                        Variable(
                                            25,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[top]",
                                        ),
                                        Variable(
                                            26,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[left]",
                                        ),
                                        Variable(
                                            27,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[bottom]",
                                        ),
                                        Variable(
                                            28,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[right]",
                                        ),
                                        Variable(
                                            36,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[width]",
                                        ),
                                        Variable(
                                            37,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[height]",
                                        ),
                                        Variable(
                                            38,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[top]",
                                        ),
                                        Variable(
                                            39,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[left]",
                                        ),
                                        Variable(
                                            40,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[bottom]",
                                        ),
                                        Variable(
                                            41,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[right]",
                                        ),
                                        Variable(
                                            49,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[width]",
                                        ),
                                        Variable(
                                            50,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[height]",
                                        ),
                                        Variable(
                                            51,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[top]",
                                        ),
                                        Variable(
                                            52,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[left]",
                                        ),
                                        Variable(
                                            53,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[bottom]",
                                        ),
                                        Variable(
                                            54,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[right]",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            600.0,
                                        ),
                                        Some(
                                            600.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "width: 600px;\nheight: 600px;\ntransform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);\n width: 600px;\nheight: 600px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {},
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                            600.0,
                                            600.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            0.0,
                                                        ),
                                                        y0: NotNan(
                                                            0.0,
                                                        ),
                                                        x1: NotNan(
                                                            540.0,
                                                        ),
                                                        y1: NotNan(
                                                            540.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        0.0,
                                                    ),
                                                    y0: NotNan(
                                                        0.0,
                                                    ),
                                                    x1: NotNan(
                                                        540.0,
                                                    ),
                                                    y1: NotNan(
                                                        540.0,
                                                    ),
                                                },
                                            },
                                        ),
                                    ),
                                },
                                opt_p_calculated: None,
                            },
                        ),
                    },
                ),
            },
            source_nix: StateVar(
                None,
            ),
            target_nix: StateVar(
                Some(
                    NodeIndex("debug_layer"),
                ),
            ),
        },
        EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv")))->OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv|CLICK")))): Edge {
            item: EmgEdgeItem {
                id: StateVar(
                    StateAnchor(
                        EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv")))->OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv|CLICK")))),
                    ),
                ),
                paths: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))->OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {},
                                                v_v_suggest: {},
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {},
                                                top_v_v_suggest: {},
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    119,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    117,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    114,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    118,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    116,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    115,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    118,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    116,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    119,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    117,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    114,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    115,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    116,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    117,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    124,
                                                ),
                                                "align_y": Variable(
                                                    125,
                                                ),
                                                "align_z": Variable(
                                                    126,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    118,
                                                ),
                                                "height": Variable(
                                                    115,
                                                ),
                                                "hgap": Variable(
                                                    1,
                                                ),
                                                "left": Variable(
                                                    117,
                                                ),
                                                "my_other_gap": Variable(
                                                    3,
                                                ),
                                                "origin_x": Variable(
                                                    121,
                                                ),
                                                "origin_y": Variable(
                                                    122,
                                                ),
                                                "origin_z": Variable(
                                                    123,
                                                ),
                                                "right": Variable(
                                                    119,
                                                ),
                                                "top": Variable(
                                                    116,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    114,
                                                ),
                                                "z": Variable(
                                                    120,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    1,
                                                ): 120.0,
                                                Variable(
                                                    3,
                                                ): 28.0,
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "my_other_gap": Variable(
                                                    2,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    0,
                                                ): 120.0,
                                                Variable(
                                                    2,
                                                ): 28.0,
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: Some(
                                                CassowaryGeneralMap {
                                                    map: {
                                                        "align_x": Variable(
                                                            72,
                                                        ),
                                                        "align_y": Variable(
                                                            73,
                                                        ),
                                                        "align_z": Variable(
                                                            74,
                                                        ),
                                                        "baseline": Variable(
                                                            22,
                                                        ),
                                                        "bottom": Variable(
                                                            66,
                                                        ),
                                                        "height": Variable(
                                                            63,
                                                        ),
                                                        "hgap": Variable(
                                                            1,
                                                        ),
                                                        "left": Variable(
                                                            65,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            3,
                                                        ),
                                                        "origin_x": Variable(
                                                            69,
                                                        ),
                                                        "origin_y": Variable(
                                                            70,
                                                        ),
                                                        "origin_z": Variable(
                                                            71,
                                                        ),
                                                        "right": Variable(
                                                            67,
                                                        ),
                                                        "top": Variable(
                                                            64,
                                                        ),
                                                        "vgap": Variable(
                                                            20,
                                                        ),
                                                        "width": Variable(
                                                            62,
                                                        ),
                                                        "z": Variable(
                                                            68,
                                                        ),
                                                    },
                                                    v_v_suggest: {
                                                        Variable(
                                                            1,
                                                        ): 120.0,
                                                        Variable(
                                                            3,
                                                        ): 28.0,
                                                        Variable(
                                                            18,
                                                        ): 10.0,
                                                        Variable(
                                                            20,
                                                        ): 10.0,
                                                        Variable(
                                                            22,
                                                        ): 16.0,
                                                    },
                                                    virtual_constraints: {},
                                                    top_virtual_constraints: {},
                                                    top_map: {
                                                        "baseline": Variable(
                                                            21,
                                                        ),
                                                        "hgap": Variable(
                                                            17,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            2,
                                                        ),
                                                        "vgap": Variable(
                                                            19,
                                                        ),
                                                    },
                                                    top_v_v_suggest: {
                                                        Variable(
                                                            0,
                                                        ): 120.0,
                                                        Variable(
                                                            2,
                                                        ): 28.0,
                                                        Variable(
                                                            17,
                                                        ): 10.0,
                                                        Variable(
                                                            19,
                                                        ): 10.0,
                                                        Variable(
                                                            21,
                                                        ): 16.0,
                                                    },
                                                    parent: Some(
                                                        CassowaryGeneralMap {
                                                            map: {
                                                                "align_x": Variable(
                                                                    46,
                                                                ),
                                                                "align_y": Variable(
                                                                    47,
                                                                ),
                                                                "align_z": Variable(
                                                                    48,
                                                                ),
                                                                "baseline": Variable(
                                                                    22,
                                                                ),
                                                                "bottom": Variable(
                                                                    40,
                                                                ),
                                                                "height": Variable(
                                                                    37,
                                                                ),
                                                                "hgap": Variable(
                                                                    1,
                                                                ),
                                                                "left": Variable(
                                                                    39,
                                                                ),
                                                                "my_other_gap": Variable(
                                                                    3,
                                                                ),
                                                                "origin_x": Variable(
                                                                    43,
                                                                ),
                                                                "origin_y": Variable(
                                                                    44,
                                                                ),
                                                                "origin_z": Variable(
                                                                    45,
                                                                ),
                                                                "right": Variable(
                                                                    41,
                                                                ),
                                                                "top": Variable(
                                                                    38,
                                                                ),
                                                                "vgap": Variable(
                                                                    20,
                                                                ),
                                                                "width": Variable(
                                                                    36,
                                                                ),
                                                                "z": Variable(
                                                                    42,
                                                                ),
                                                            },
                                                            v_v_suggest: {
                                                                Variable(
                                                                    1,
                                                                ): 120.0,
                                                                Variable(
                                                                    3,
                                                                ): 28.0,
                                                                Variable(
                                                                    18,
                                                                ): 10.0,
                                                                Variable(
                                                                    20,
                                                                ): 10.0,
                                                                Variable(
                                                                    22,
                                                                ): 16.0,
                                                            },
                                                            virtual_constraints: {},
                                                            top_virtual_constraints: {},
                                                            top_map: {
                                                                "baseline": Variable(
                                                                    21,
                                                                ),
                                                                "hgap": Variable(
                                                                    17,
                                                                ),
                                                                "my_other_gap": Variable(
                                                                    2,
                                                                ),
                                                                "vgap": Variable(
                                                                    19,
                                                                ),
                                                            },
                                                            top_v_v_suggest: {
                                                                Variable(
                                                                    0,
                                                                ): 120.0,
                                                                Variable(
                                                                    2,
                                                                ): 28.0,
                                                                Variable(
                                                                    17,
                                                                ): 10.0,
                                                                Variable(
                                                                    19,
                                                                ): 10.0,
                                                                Variable(
                                                                    21,
                                                                ): 16.0,
                                                            },
                                                            parent: Some(
                                                                CassowaryGeneralMap {
                                                                    map: {
                                                                        "align_x": Variable(
                                                                            14,
                                                                        ),
                                                                        "align_y": Variable(
                                                                            15,
                                                                        ),
                                                                        "align_z": Variable(
                                                                            16,
                                                                        ),
                                                                        "baseline": Variable(
                                                                            22,
                                                                        ),
                                                                        "bottom": Variable(
                                                                            8,
                                                                        ),
                                                                        "height": Variable(
                                                                            5,
                                                                        ),
                                                                        "hgap": Variable(
                                                                            18,
                                                                        ),
                                                                        "left": Variable(
                                                                            7,
                                                                        ),
                                                                        "origin_x": Variable(
                                                                            11,
                                                                        ),
                                                                        "origin_y": Variable(
                                                                            12,
                                                                        ),
                                                                        "origin_z": Variable(
                                                                            13,
                                                                        ),
                                                                        "right": Variable(
                                                                            9,
                                                                        ),
                                                                        "top": Variable(
                                                                            6,
                                                                        ),
                                                                        "vgap": Variable(
                                                                            20,
                                                                        ),
                                                                        "width": Variable(
                                                                            4,
                                                                        ),
                                                                        "z": Variable(
                                                                            10,
                                                                        ),
                                                                    },
                                                                    v_v_suggest: {
                                                                        Variable(
                                                                            18,
                                                                        ): 10.0,
                                                                        Variable(
                                                                            20,
                                                                        ): 10.0,
                                                                        Variable(
                                                                            22,
                                                                        ): 16.0,
                                                                    },
                                                                    virtual_constraints: {},
                                                                    top_virtual_constraints: {},
                                                                    top_map: {
                                                                        "baseline": Variable(
                                                                            21,
                                                                        ),
                                                                        "hgap": Variable(
                                                                            17,
                                                                        ),
                                                                        "vgap": Variable(
                                                                            19,
                                                                        ),
                                                                    },
                                                                    top_v_v_suggest: {
                                                                        Variable(
                                                                            17,
                                                                        ): 10.0,
                                                                        Variable(
                                                                            19,
                                                                        ): 10.0,
                                                                        Variable(
                                                                            21,
                                                                        ): 16.0,
                                                                    },
                                                                    parent: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                0.0,
                                                0.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            124,
                                        ),
                                        "align_y": Variable(
                                            125,
                                        ),
                                        "align_z": Variable(
                                            126,
                                        ),
                                        "bottom": Variable(
                                            118,
                                        ),
                                        "height": Variable(
                                            115,
                                        ),
                                        "left": Variable(
                                            117,
                                        ),
                                        "origin_x": Variable(
                                            121,
                                        ),
                                        "origin_y": Variable(
                                            122,
                                        ),
                                        "origin_z": Variable(
                                            123,
                                        ),
                                        "right": Variable(
                                            119,
                                        ),
                                        "top": Variable(
                                            116,
                                        ),
                                        "width": Variable(
                                            114,
                                        ),
                                        "z": Variable(
                                            120,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            114,
                                        ): "width",
                                        Variable(
                                            115,
                                        ): "height",
                                        Variable(
                                            116,
                                        ): "top",
                                        Variable(
                                            117,
                                        ): "left",
                                        Variable(
                                            118,
                                        ): "bottom",
                                        Variable(
                                            119,
                                        ): "right",
                                        Variable(
                                            120,
                                        ): "z",
                                        Variable(
                                            121,
                                        ): "origin_x",
                                        Variable(
                                            122,
                                        ): "origin_y",
                                        Variable(
                                            123,
                                        ): "origin_z",
                                        Variable(
                                            124,
                                        ): "align_x",
                                        Variable(
                                            125,
                                        ): "align_y",
                                        Variable(
                                            126,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {},
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            0,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            1,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            2,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            3,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            114,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))])[width] ",
                                        ),
                                        Variable(
                                            115,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))])[height] ",
                                        ),
                                        Variable(
                                            116,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))])[top] ",
                                        ),
                                        Variable(
                                            117,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))])[left] ",
                                        ),
                                        Variable(
                                            118,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            119,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))])[right] ",
                                        ),
                                        Variable(
                                            121,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            122,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            124,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            125,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))])[align_y] ",
                                        ),
                                        Variable(
                                            140,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))]) |=> #\"GEl-e1LKf2dv|CLICK\"[width]",
                                        ),
                                        Variable(
                                            141,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))]) |=> #\"GEl-e1LKf2dv|CLICK\"[height]",
                                        ),
                                        Variable(
                                            142,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))]) |=> #\"GEl-e1LKf2dv|CLICK\"[top]",
                                        ),
                                        Variable(
                                            143,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))]) |=> #\"GEl-e1LKf2dv|CLICK\"[left]",
                                        ),
                                        Variable(
                                            144,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))]) |=> #\"GEl-e1LKf2dv|CLICK\"[bottom]",
                                        ),
                                        Variable(
                                            145,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))]) |=> #\"GEl-e1LKf2dv|CLICK\"[right]",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            -0.0,
                                        ),
                                        Some(
                                            -0.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);\n width: -0px;\nheight: -0px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {},
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                            -0.0,
                                            -0.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            250.0,
                                                        ),
                                                        y0: NotNan(
                                                            250.0,
                                                        ),
                                                        x1: NotNan(
                                                            250.0,
                                                        ),
                                                        y1: NotNan(
                                                            250.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        250.0,
                                                    ),
                                                    y0: NotNan(
                                                        250.0,
                                                    ),
                                                    x1: NotNan(
                                                        250.0,
                                                    ),
                                                    y1: NotNan(
                                                        250.0,
                                                    ),
                                                },
                                            },
                                        ),
                                    ),
                                },
                                opt_p_calculated: Some(
                                    LayoutCalculated {
                                        size_constraints: StateAnchor(
                                            [
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        62,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -30.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        63,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -30.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        67,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        65,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        62,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        66,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        64,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        63,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        66,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        64,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        67,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        65,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        62,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        63,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        64,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        65,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                            ],
                                        ),
                                        cassowary_inherited_generals_sa: StateAnchor(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "align_x": Variable(
                                                        72,
                                                    ),
                                                    "align_y": Variable(
                                                        73,
                                                    ),
                                                    "align_z": Variable(
                                                        74,
                                                    ),
                                                    "baseline": Variable(
                                                        22,
                                                    ),
                                                    "bottom": Variable(
                                                        66,
                                                    ),
                                                    "height": Variable(
                                                        63,
                                                    ),
                                                    "hgap": Variable(
                                                        1,
                                                    ),
                                                    "left": Variable(
                                                        65,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        3,
                                                    ),
                                                    "origin_x": Variable(
                                                        69,
                                                    ),
                                                    "origin_y": Variable(
                                                        70,
                                                    ),
                                                    "origin_z": Variable(
                                                        71,
                                                    ),
                                                    "right": Variable(
                                                        67,
                                                    ),
                                                    "top": Variable(
                                                        64,
                                                    ),
                                                    "vgap": Variable(
                                                        20,
                                                    ),
                                                    "width": Variable(
                                                        62,
                                                    ),
                                                    "z": Variable(
                                                        68,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        1,
                                                    ): 120.0,
                                                    Variable(
                                                        3,
                                                    ): 28.0,
                                                    Variable(
                                                        18,
                                                    ): 10.0,
                                                    Variable(
                                                        20,
                                                    ): 10.0,
                                                    Variable(
                                                        22,
                                                    ): 16.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "baseline": Variable(
                                                        21,
                                                    ),
                                                    "hgap": Variable(
                                                        17,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        2,
                                                    ),
                                                    "vgap": Variable(
                                                        19,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        0,
                                                    ): 120.0,
                                                    Variable(
                                                        2,
                                                    ): 28.0,
                                                    Variable(
                                                        17,
                                                    ): 10.0,
                                                    Variable(
                                                        19,
                                                    ): 10.0,
                                                    Variable(
                                                        21,
                                                    ): 16.0,
                                                },
                                                parent: Some(
                                                    CassowaryGeneralMap {
                                                        map: {
                                                            "align_x": Variable(
                                                                46,
                                                            ),
                                                            "align_y": Variable(
                                                                47,
                                                            ),
                                                            "align_z": Variable(
                                                                48,
                                                            ),
                                                            "baseline": Variable(
                                                                22,
                                                            ),
                                                            "bottom": Variable(
                                                                40,
                                                            ),
                                                            "height": Variable(
                                                                37,
                                                            ),
                                                            "hgap": Variable(
                                                                1,
                                                            ),
                                                            "left": Variable(
                                                                39,
                                                            ),
                                                            "my_other_gap": Variable(
                                                                3,
                                                            ),
                                                            "origin_x": Variable(
                                                                43,
                                                            ),
                                                            "origin_y": Variable(
                                                                44,
                                                            ),
                                                            "origin_z": Variable(
                                                                45,
                                                            ),
                                                            "right": Variable(
                                                                41,
                                                            ),
                                                            "top": Variable(
                                                                38,
                                                            ),
                                                            "vgap": Variable(
                                                                20,
                                                            ),
                                                            "width": Variable(
                                                                36,
                                                            ),
                                                            "z": Variable(
                                                                42,
                                                            ),
                                                        },
                                                        v_v_suggest: {
                                                            Variable(
                                                                1,
                                                            ): 120.0,
                                                            Variable(
                                                                3,
                                                            ): 28.0,
                                                            Variable(
                                                                18,
                                                            ): 10.0,
                                                            Variable(
                                                                20,
                                                            ): 10.0,
                                                            Variable(
                                                                22,
                                                            ): 16.0,
                                                        },
                                                        virtual_constraints: {},
                                                        top_virtual_constraints: {},
                                                        top_map: {
                                                            "baseline": Variable(
                                                                21,
                                                            ),
                                                            "hgap": Variable(
                                                                17,
                                                            ),
                                                            "my_other_gap": Variable(
                                                                2,
                                                            ),
                                                            "vgap": Variable(
                                                                19,
                                                            ),
                                                        },
                                                        top_v_v_suggest: {
                                                            Variable(
                                                                0,
                                                            ): 120.0,
                                                            Variable(
                                                                2,
                                                            ): 28.0,
                                                            Variable(
                                                                17,
                                                            ): 10.0,
                                                            Variable(
                                                                19,
                                                            ): 10.0,
                                                            Variable(
                                                                21,
                                                            ): 16.0,
                                                        },
                                                        parent: Some(
                                                            CassowaryGeneralMap {
                                                                map: {
                                                                    "align_x": Variable(
                                                                        14,
                                                                    ),
                                                                    "align_y": Variable(
                                                                        15,
                                                                    ),
                                                                    "align_z": Variable(
                                                                        16,
                                                                    ),
                                                                    "baseline": Variable(
                                                                        22,
                                                                    ),
                                                                    "bottom": Variable(
                                                                        8,
                                                                    ),
                                                                    "height": Variable(
                                                                        5,
                                                                    ),
                                                                    "hgap": Variable(
                                                                        18,
                                                                    ),
                                                                    "left": Variable(
                                                                        7,
                                                                    ),
                                                                    "origin_x": Variable(
                                                                        11,
                                                                    ),
                                                                    "origin_y": Variable(
                                                                        12,
                                                                    ),
                                                                    "origin_z": Variable(
                                                                        13,
                                                                    ),
                                                                    "right": Variable(
                                                                        9,
                                                                    ),
                                                                    "top": Variable(
                                                                        6,
                                                                    ),
                                                                    "vgap": Variable(
                                                                        20,
                                                                    ),
                                                                    "width": Variable(
                                                                        4,
                                                                    ),
                                                                    "z": Variable(
                                                                        10,
                                                                    ),
                                                                },
                                                                v_v_suggest: {
                                                                    Variable(
                                                                        18,
                                                                    ): 10.0,
                                                                    Variable(
                                                                        20,
                                                                    ): 10.0,
                                                                    Variable(
                                                                        22,
                                                                    ): 16.0,
                                                                },
                                                                virtual_constraints: {},
                                                                top_virtual_constraints: {},
                                                                top_map: {
                                                                    "baseline": Variable(
                                                                        21,
                                                                    ),
                                                                    "hgap": Variable(
                                                                        17,
                                                                    ),
                                                                    "vgap": Variable(
                                                                        19,
                                                                    ),
                                                                },
                                                                top_v_v_suggest: {
                                                                    Variable(
                                                                        17,
                                                                    ): 10.0,
                                                                    Variable(
                                                                        19,
                                                                    ): 10.0,
                                                                    Variable(
                                                                        21,
                                                                    ): 16.0,
                                                                },
                                                                parent: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        cass_or_calc_size: StateAnchor(
                                            [
                                                [
                                                    30.0,
                                                    30.0,
                                                ],
                                            ],
                                        ),
                                        origin: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        align: StateAnchor(
                                            [
                                                250.0,
                                                250.0,
                                                0.0,
                                            ],
                                        ),
                                        translation: StateAnchor(
                                            [
                                                250.0,
                                                250.0,
                                                0.0,
                                            ],
                                        ),
                                        coordinates_trans: StateAnchor(
                                            [
                                                250.0,
                                                250.0,
                                                0.0,
                                            ],
                                        ),
                                        cass_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        matrix: StateAnchor(
                                            Mat4(
                                                [
                                                    [
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        250.0,
                                                        250.0,
                                                        0.0,
                                                        1.0,
                                                    ],
                                                ],
                                            ),
                                        ),
                                        loc_styles: StateAnchor(
                                            Style {
                                                media_rules: {},
                                                rules: [
                                                    Rule {
                                                        value: StringValue(
                                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,250,250,0,1)",
                                                        ),
                                                    },
                                                ],
                                                updated_at: [
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                                ],
                                                pseudo: None,
                                                media: None,
                                                name: "",
                                                keyframes: Keyframes {
                                                    frames: [],
                                                },
                                                combinator: None,
                                                pre_combinators: [],
                                            },
                                        ),
                                        world: StateAnchor(
                                            [
                                                250.0,
                                                250.0,
                                                0.0,
                                            ],
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
                layout: Layout {
                    w: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    h: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    z: StateVar(
                        StateAnchor(
                            0,
                        ),
                    ),
                    origin_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    origin_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    origin_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    cassowary_constants: StateVar(
                        StateAnchor(
                            [],
                        ),
                    ),
                    cassowary_selectors: StateVar(
                        [],
                    ),
                    cassowary_generals: StateVar(
                        CassowaryGeneralMap {
                            map: {},
                            v_v_suggest: {},
                            virtual_constraints: {},
                            top_virtual_constraints: {},
                            top_map: {},
                            top_v_v_suggest: {},
                            parent: None,
                        },
                    ),
                },
                styles: StateVar(
                    {},
                ),
                path_styles: StateVar(
                    {},
                ),
                path_layouts: StateVar(
                    {},
                ),
                other_css_styles: StateVar(
                    Style {
                        media_rules: {},
                        rules: [],
                        updated_at: [
                            "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:942:45",
                        ],
                        pseudo: None,
                        media: None,
                        name: "",
                        keyframes: Keyframes {
                            frames: [],
                        },
                        combinator: None,
                        pre_combinators: [],
                    },
                ),
                edge_nodes: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))->OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv")))->OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv|CLICK")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {},
                                                v_v_suggest: {},
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {},
                                                top_v_v_suggest: {},
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    145,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    143,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    140,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    144,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    142,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    141,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    144,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    142,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    145,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    143,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    140,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    141,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    142,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    143,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    150,
                                                ),
                                                "align_y": Variable(
                                                    151,
                                                ),
                                                "align_z": Variable(
                                                    152,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    144,
                                                ),
                                                "height": Variable(
                                                    141,
                                                ),
                                                "hgap": Variable(
                                                    1,
                                                ),
                                                "left": Variable(
                                                    143,
                                                ),
                                                "my_other_gap": Variable(
                                                    3,
                                                ),
                                                "origin_x": Variable(
                                                    147,
                                                ),
                                                "origin_y": Variable(
                                                    148,
                                                ),
                                                "origin_z": Variable(
                                                    149,
                                                ),
                                                "right": Variable(
                                                    145,
                                                ),
                                                "top": Variable(
                                                    142,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    140,
                                                ),
                                                "z": Variable(
                                                    146,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    1,
                                                ): 120.0,
                                                Variable(
                                                    3,
                                                ): 28.0,
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "my_other_gap": Variable(
                                                    2,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    0,
                                                ): 120.0,
                                                Variable(
                                                    2,
                                                ): 28.0,
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: Some(
                                                CassowaryGeneralMap {
                                                    map: {
                                                        "align_x": Variable(
                                                            124,
                                                        ),
                                                        "align_y": Variable(
                                                            125,
                                                        ),
                                                        "align_z": Variable(
                                                            126,
                                                        ),
                                                        "baseline": Variable(
                                                            22,
                                                        ),
                                                        "bottom": Variable(
                                                            118,
                                                        ),
                                                        "height": Variable(
                                                            115,
                                                        ),
                                                        "hgap": Variable(
                                                            1,
                                                        ),
                                                        "left": Variable(
                                                            117,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            3,
                                                        ),
                                                        "origin_x": Variable(
                                                            121,
                                                        ),
                                                        "origin_y": Variable(
                                                            122,
                                                        ),
                                                        "origin_z": Variable(
                                                            123,
                                                        ),
                                                        "right": Variable(
                                                            119,
                                                        ),
                                                        "top": Variable(
                                                            116,
                                                        ),
                                                        "vgap": Variable(
                                                            20,
                                                        ),
                                                        "width": Variable(
                                                            114,
                                                        ),
                                                        "z": Variable(
                                                            120,
                                                        ),
                                                    },
                                                    v_v_suggest: {
                                                        Variable(
                                                            1,
                                                        ): 120.0,
                                                        Variable(
                                                            3,
                                                        ): 28.0,
                                                        Variable(
                                                            18,
                                                        ): 10.0,
                                                        Variable(
                                                            20,
                                                        ): 10.0,
                                                        Variable(
                                                            22,
                                                        ): 16.0,
                                                    },
                                                    virtual_constraints: {},
                                                    top_virtual_constraints: {},
                                                    top_map: {
                                                        "baseline": Variable(
                                                            21,
                                                        ),
                                                        "hgap": Variable(
                                                            17,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            2,
                                                        ),
                                                        "vgap": Variable(
                                                            19,
                                                        ),
                                                    },
                                                    top_v_v_suggest: {
                                                        Variable(
                                                            0,
                                                        ): 120.0,
                                                        Variable(
                                                            2,
                                                        ): 28.0,
                                                        Variable(
                                                            17,
                                                        ): 10.0,
                                                        Variable(
                                                            19,
                                                        ): 10.0,
                                                        Variable(
                                                            21,
                                                        ): 16.0,
                                                    },
                                                    parent: Some(
                                                        CassowaryGeneralMap {
                                                            map: {
                                                                "align_x": Variable(
                                                                    72,
                                                                ),
                                                                "align_y": Variable(
                                                                    73,
                                                                ),
                                                                "align_z": Variable(
                                                                    74,
                                                                ),
                                                                "baseline": Variable(
                                                                    22,
                                                                ),
                                                                "bottom": Variable(
                                                                    66,
                                                                ),
                                                                "height": Variable(
                                                                    63,
                                                                ),
                                                                "hgap": Variable(
                                                                    1,
                                                                ),
                                                                "left": Variable(
                                                                    65,
                                                                ),
                                                                "my_other_gap": Variable(
                                                                    3,
                                                                ),
                                                                "origin_x": Variable(
                                                                    69,
                                                                ),
                                                                "origin_y": Variable(
                                                                    70,
                                                                ),
                                                                "origin_z": Variable(
                                                                    71,
                                                                ),
                                                                "right": Variable(
                                                                    67,
                                                                ),
                                                                "top": Variable(
                                                                    64,
                                                                ),
                                                                "vgap": Variable(
                                                                    20,
                                                                ),
                                                                "width": Variable(
                                                                    62,
                                                                ),
                                                                "z": Variable(
                                                                    68,
                                                                ),
                                                            },
                                                            v_v_suggest: {
                                                                Variable(
                                                                    1,
                                                                ): 120.0,
                                                                Variable(
                                                                    3,
                                                                ): 28.0,
                                                                Variable(
                                                                    18,
                                                                ): 10.0,
                                                                Variable(
                                                                    20,
                                                                ): 10.0,
                                                                Variable(
                                                                    22,
                                                                ): 16.0,
                                                            },
                                                            virtual_constraints: {},
                                                            top_virtual_constraints: {},
                                                            top_map: {
                                                                "baseline": Variable(
                                                                    21,
                                                                ),
                                                                "hgap": Variable(
                                                                    17,
                                                                ),
                                                                "my_other_gap": Variable(
                                                                    2,
                                                                ),
                                                                "vgap": Variable(
                                                                    19,
                                                                ),
                                                            },
                                                            top_v_v_suggest: {
                                                                Variable(
                                                                    0,
                                                                ): 120.0,
                                                                Variable(
                                                                    2,
                                                                ): 28.0,
                                                                Variable(
                                                                    17,
                                                                ): 10.0,
                                                                Variable(
                                                                    19,
                                                                ): 10.0,
                                                                Variable(
                                                                    21,
                                                                ): 16.0,
                                                            },
                                                            parent: Some(
                                                                CassowaryGeneralMap {
                                                                    map: {
                                                                        "align_x": Variable(
                                                                            46,
                                                                        ),
                                                                        "align_y": Variable(
                                                                            47,
                                                                        ),
                                                                        "align_z": Variable(
                                                                            48,
                                                                        ),
                                                                        "baseline": Variable(
                                                                            22,
                                                                        ),
                                                                        "bottom": Variable(
                                                                            40,
                                                                        ),
                                                                        "height": Variable(
                                                                            37,
                                                                        ),
                                                                        "hgap": Variable(
                                                                            1,
                                                                        ),
                                                                        "left": Variable(
                                                                            39,
                                                                        ),
                                                                        "my_other_gap": Variable(
                                                                            3,
                                                                        ),
                                                                        "origin_x": Variable(
                                                                            43,
                                                                        ),
                                                                        "origin_y": Variable(
                                                                            44,
                                                                        ),
                                                                        "origin_z": Variable(
                                                                            45,
                                                                        ),
                                                                        "right": Variable(
                                                                            41,
                                                                        ),
                                                                        "top": Variable(
                                                                            38,
                                                                        ),
                                                                        "vgap": Variable(
                                                                            20,
                                                                        ),
                                                                        "width": Variable(
                                                                            36,
                                                                        ),
                                                                        "z": Variable(
                                                                            42,
                                                                        ),
                                                                    },
                                                                    v_v_suggest: {
                                                                        Variable(
                                                                            1,
                                                                        ): 120.0,
                                                                        Variable(
                                                                            3,
                                                                        ): 28.0,
                                                                        Variable(
                                                                            18,
                                                                        ): 10.0,
                                                                        Variable(
                                                                            20,
                                                                        ): 10.0,
                                                                        Variable(
                                                                            22,
                                                                        ): 16.0,
                                                                    },
                                                                    virtual_constraints: {},
                                                                    top_virtual_constraints: {},
                                                                    top_map: {
                                                                        "baseline": Variable(
                                                                            21,
                                                                        ),
                                                                        "hgap": Variable(
                                                                            17,
                                                                        ),
                                                                        "my_other_gap": Variable(
                                                                            2,
                                                                        ),
                                                                        "vgap": Variable(
                                                                            19,
                                                                        ),
                                                                    },
                                                                    top_v_v_suggest: {
                                                                        Variable(
                                                                            0,
                                                                        ): 120.0,
                                                                        Variable(
                                                                            2,
                                                                        ): 28.0,
                                                                        Variable(
                                                                            17,
                                                                        ): 10.0,
                                                                        Variable(
                                                                            19,
                                                                        ): 10.0,
                                                                        Variable(
                                                                            21,
                                                                        ): 16.0,
                                                                    },
                                                                    parent: Some(
                                                                        CassowaryGeneralMap {
                                                                            map: {
                                                                                "align_x": Variable(
                                                                                    14,
                                                                                ),
                                                                                "align_y": Variable(
                                                                                    15,
                                                                                ),
                                                                                "align_z": Variable(
                                                                                    16,
                                                                                ),
                                                                                "baseline": Variable(
                                                                                    22,
                                                                                ),
                                                                                "bottom": Variable(
                                                                                    8,
                                                                                ),
                                                                                "height": Variable(
                                                                                    5,
                                                                                ),
                                                                                "hgap": Variable(
                                                                                    18,
                                                                                ),
                                                                                "left": Variable(
                                                                                    7,
                                                                                ),
                                                                                "origin_x": Variable(
                                                                                    11,
                                                                                ),
                                                                                "origin_y": Variable(
                                                                                    12,
                                                                                ),
                                                                                "origin_z": Variable(
                                                                                    13,
                                                                                ),
                                                                                "right": Variable(
                                                                                    9,
                                                                                ),
                                                                                "top": Variable(
                                                                                    6,
                                                                                ),
                                                                                "vgap": Variable(
                                                                                    20,
                                                                                ),
                                                                                "width": Variable(
                                                                                    4,
                                                                                ),
                                                                                "z": Variable(
                                                                                    10,
                                                                                ),
                                                                            },
                                                                            v_v_suggest: {
                                                                                Variable(
                                                                                    18,
                                                                                ): 10.0,
                                                                                Variable(
                                                                                    20,
                                                                                ): 10.0,
                                                                                Variable(
                                                                                    22,
                                                                                ): 16.0,
                                                                            },
                                                                            virtual_constraints: {},
                                                                            top_virtual_constraints: {},
                                                                            top_map: {
                                                                                "baseline": Variable(
                                                                                    21,
                                                                                ),
                                                                                "hgap": Variable(
                                                                                    17,
                                                                                ),
                                                                                "vgap": Variable(
                                                                                    19,
                                                                                ),
                                                                            },
                                                                            top_v_v_suggest: {
                                                                                Variable(
                                                                                    17,
                                                                                ): 10.0,
                                                                                Variable(
                                                                                    19,
                                                                                ): 10.0,
                                                                                Variable(
                                                                                    21,
                                                                                ): 16.0,
                                                                            },
                                                                            parent: None,
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                0.0,
                                                0.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            150,
                                        ),
                                        "align_y": Variable(
                                            151,
                                        ),
                                        "align_z": Variable(
                                            152,
                                        ),
                                        "bottom": Variable(
                                            144,
                                        ),
                                        "height": Variable(
                                            141,
                                        ),
                                        "left": Variable(
                                            143,
                                        ),
                                        "origin_x": Variable(
                                            147,
                                        ),
                                        "origin_y": Variable(
                                            148,
                                        ),
                                        "origin_z": Variable(
                                            149,
                                        ),
                                        "right": Variable(
                                            145,
                                        ),
                                        "top": Variable(
                                            142,
                                        ),
                                        "width": Variable(
                                            140,
                                        ),
                                        "z": Variable(
                                            146,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            140,
                                        ): "width",
                                        Variable(
                                            141,
                                        ): "height",
                                        Variable(
                                            142,
                                        ): "top",
                                        Variable(
                                            143,
                                        ): "left",
                                        Variable(
                                            144,
                                        ): "bottom",
                                        Variable(
                                            145,
                                        ): "right",
                                        Variable(
                                            146,
                                        ): "z",
                                        Variable(
                                            147,
                                        ): "origin_x",
                                        Variable(
                                            148,
                                        ): "origin_y",
                                        Variable(
                                            149,
                                        ): "origin_z",
                                        Variable(
                                            150,
                                        ): "align_x",
                                        Variable(
                                            151,
                                        ): "align_y",
                                        Variable(
                                            152,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {},
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            0,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            1,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            2,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            3,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            140,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv|CLICK\"))))])[width] ",
                                        ),
                                        Variable(
                                            141,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv|CLICK\"))))])[height] ",
                                        ),
                                        Variable(
                                            142,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv|CLICK\"))))])[top] ",
                                        ),
                                        Variable(
                                            143,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv|CLICK\"))))])[left] ",
                                        ),
                                        Variable(
                                            144,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv|CLICK\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            145,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv|CLICK\"))))])[right] ",
                                        ),
                                        Variable(
                                            147,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv|CLICK\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            148,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv|CLICK\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            150,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv|CLICK\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            151,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv|CLICK\"))))])[align_y] ",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            -0.0,
                                        ),
                                        Some(
                                            -0.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);\n width: -0px;\nheight: -0px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {},
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                            -0.0,
                                            -0.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        None,
                                    ),
                                },
                                opt_p_calculated: Some(
                                    LayoutCalculated {
                                        size_constraints: StateAnchor(
                                            [
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        119,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        117,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        114,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        118,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        116,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        115,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        118,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        116,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        119,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        117,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        114,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        115,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        116,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        117,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                            ],
                                        ),
                                        cassowary_inherited_generals_sa: StateAnchor(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "align_x": Variable(
                                                        124,
                                                    ),
                                                    "align_y": Variable(
                                                        125,
                                                    ),
                                                    "align_z": Variable(
                                                        126,
                                                    ),
                                                    "baseline": Variable(
                                                        22,
                                                    ),
                                                    "bottom": Variable(
                                                        118,
                                                    ),
                                                    "height": Variable(
                                                        115,
                                                    ),
                                                    "hgap": Variable(
                                                        1,
                                                    ),
                                                    "left": Variable(
                                                        117,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        3,
                                                    ),
                                                    "origin_x": Variable(
                                                        121,
                                                    ),
                                                    "origin_y": Variable(
                                                        122,
                                                    ),
                                                    "origin_z": Variable(
                                                        123,
                                                    ),
                                                    "right": Variable(
                                                        119,
                                                    ),
                                                    "top": Variable(
                                                        116,
                                                    ),
                                                    "vgap": Variable(
                                                        20,
                                                    ),
                                                    "width": Variable(
                                                        114,
                                                    ),
                                                    "z": Variable(
                                                        120,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        1,
                                                    ): 120.0,
                                                    Variable(
                                                        3,
                                                    ): 28.0,
                                                    Variable(
                                                        18,
                                                    ): 10.0,
                                                    Variable(
                                                        20,
                                                    ): 10.0,
                                                    Variable(
                                                        22,
                                                    ): 16.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "baseline": Variable(
                                                        21,
                                                    ),
                                                    "hgap": Variable(
                                                        17,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        2,
                                                    ),
                                                    "vgap": Variable(
                                                        19,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        0,
                                                    ): 120.0,
                                                    Variable(
                                                        2,
                                                    ): 28.0,
                                                    Variable(
                                                        17,
                                                    ): 10.0,
                                                    Variable(
                                                        19,
                                                    ): 10.0,
                                                    Variable(
                                                        21,
                                                    ): 16.0,
                                                },
                                                parent: Some(
                                                    CassowaryGeneralMap {
                                                        map: {
                                                            "align_x": Variable(
                                                                72,
                                                            ),
                                                            "align_y": Variable(
                                                                73,
                                                            ),
                                                            "align_z": Variable(
                                                                74,
                                                            ),
                                                            "baseline": Variable(
                                                                22,
                                                            ),
                                                            "bottom": Variable(
                                                                66,
                                                            ),
                                                            "height": Variable(
                                                                63,
                                                            ),
                                                            "hgap": Variable(
                                                                1,
                                                            ),
                                                            "left": Variable(
                                                                65,
                                                            ),
                                                            "my_other_gap": Variable(
                                                                3,
                                                            ),
                                                            "origin_x": Variable(
                                                                69,
                                                            ),
                                                            "origin_y": Variable(
                                                                70,
                                                            ),
                                                            "origin_z": Variable(
                                                                71,
                                                            ),
                                                            "right": Variable(
                                                                67,
                                                            ),
                                                            "top": Variable(
                                                                64,
                                                            ),
                                                            "vgap": Variable(
                                                                20,
                                                            ),
                                                            "width": Variable(
                                                                62,
                                                            ),
                                                            "z": Variable(
                                                                68,
                                                            ),
                                                        },
                                                        v_v_suggest: {
                                                            Variable(
                                                                1,
                                                            ): 120.0,
                                                            Variable(
                                                                3,
                                                            ): 28.0,
                                                            Variable(
                                                                18,
                                                            ): 10.0,
                                                            Variable(
                                                                20,
                                                            ): 10.0,
                                                            Variable(
                                                                22,
                                                            ): 16.0,
                                                        },
                                                        virtual_constraints: {},
                                                        top_virtual_constraints: {},
                                                        top_map: {
                                                            "baseline": Variable(
                                                                21,
                                                            ),
                                                            "hgap": Variable(
                                                                17,
                                                            ),
                                                            "my_other_gap": Variable(
                                                                2,
                                                            ),
                                                            "vgap": Variable(
                                                                19,
                                                            ),
                                                        },
                                                        top_v_v_suggest: {
                                                            Variable(
                                                                0,
                                                            ): 120.0,
                                                            Variable(
                                                                2,
                                                            ): 28.0,
                                                            Variable(
                                                                17,
                                                            ): 10.0,
                                                            Variable(
                                                                19,
                                                            ): 10.0,
                                                            Variable(
                                                                21,
                                                            ): 16.0,
                                                        },
                                                        parent: Some(
                                                            CassowaryGeneralMap {
                                                                map: {
                                                                    "align_x": Variable(
                                                                        46,
                                                                    ),
                                                                    "align_y": Variable(
                                                                        47,
                                                                    ),
                                                                    "align_z": Variable(
                                                                        48,
                                                                    ),
                                                                    "baseline": Variable(
                                                                        22,
                                                                    ),
                                                                    "bottom": Variable(
                                                                        40,
                                                                    ),
                                                                    "height": Variable(
                                                                        37,
                                                                    ),
                                                                    "hgap": Variable(
                                                                        1,
                                                                    ),
                                                                    "left": Variable(
                                                                        39,
                                                                    ),
                                                                    "my_other_gap": Variable(
                                                                        3,
                                                                    ),
                                                                    "origin_x": Variable(
                                                                        43,
                                                                    ),
                                                                    "origin_y": Variable(
                                                                        44,
                                                                    ),
                                                                    "origin_z": Variable(
                                                                        45,
                                                                    ),
                                                                    "right": Variable(
                                                                        41,
                                                                    ),
                                                                    "top": Variable(
                                                                        38,
                                                                    ),
                                                                    "vgap": Variable(
                                                                        20,
                                                                    ),
                                                                    "width": Variable(
                                                                        36,
                                                                    ),
                                                                    "z": Variable(
                                                                        42,
                                                                    ),
                                                                },
                                                                v_v_suggest: {
                                                                    Variable(
                                                                        1,
                                                                    ): 120.0,
                                                                    Variable(
                                                                        3,
                                                                    ): 28.0,
                                                                    Variable(
                                                                        18,
                                                                    ): 10.0,
                                                                    Variable(
                                                                        20,
                                                                    ): 10.0,
                                                                    Variable(
                                                                        22,
                                                                    ): 16.0,
                                                                },
                                                                virtual_constraints: {},
                                                                top_virtual_constraints: {},
                                                                top_map: {
                                                                    "baseline": Variable(
                                                                        21,
                                                                    ),
                                                                    "hgap": Variable(
                                                                        17,
                                                                    ),
                                                                    "my_other_gap": Variable(
                                                                        2,
                                                                    ),
                                                                    "vgap": Variable(
                                                                        19,
                                                                    ),
                                                                },
                                                                top_v_v_suggest: {
                                                                    Variable(
                                                                        0,
                                                                    ): 120.0,
                                                                    Variable(
                                                                        2,
                                                                    ): 28.0,
                                                                    Variable(
                                                                        17,
                                                                    ): 10.0,
                                                                    Variable(
                                                                        19,
                                                                    ): 10.0,
                                                                    Variable(
                                                                        21,
                                                                    ): 16.0,
                                                                },
                                                                parent: Some(
                                                                    CassowaryGeneralMap {
                                                                        map: {
                                                                            "align_x": Variable(
                                                                                14,
                                                                            ),
                                                                            "align_y": Variable(
                                                                                15,
                                                                            ),
                                                                            "align_z": Variable(
                                                                                16,
                                                                            ),
                                                                            "baseline": Variable(
                                                                                22,
                                                                            ),
                                                                            "bottom": Variable(
                                                                                8,
                                                                            ),
                                                                            "height": Variable(
                                                                                5,
                                                                            ),
                                                                            "hgap": Variable(
                                                                                18,
                                                                            ),
                                                                            "left": Variable(
                                                                                7,
                                                                            ),
                                                                            "origin_x": Variable(
                                                                                11,
                                                                            ),
                                                                            "origin_y": Variable(
                                                                                12,
                                                                            ),
                                                                            "origin_z": Variable(
                                                                                13,
                                                                            ),
                                                                            "right": Variable(
                                                                                9,
                                                                            ),
                                                                            "top": Variable(
                                                                                6,
                                                                            ),
                                                                            "vgap": Variable(
                                                                                20,
                                                                            ),
                                                                            "width": Variable(
                                                                                4,
                                                                            ),
                                                                            "z": Variable(
                                                                                10,
                                                                            ),
                                                                        },
                                                                        v_v_suggest: {
                                                                            Variable(
                                                                                18,
                                                                            ): 10.0,
                                                                            Variable(
                                                                                20,
                                                                            ): 10.0,
                                                                            Variable(
                                                                                22,
                                                                            ): 16.0,
                                                                        },
                                                                        virtual_constraints: {},
                                                                        top_virtual_constraints: {},
                                                                        top_map: {
                                                                            "baseline": Variable(
                                                                                21,
                                                                            ),
                                                                            "hgap": Variable(
                                                                                17,
                                                                            ),
                                                                            "vgap": Variable(
                                                                                19,
                                                                            ),
                                                                        },
                                                                        top_v_v_suggest: {
                                                                            Variable(
                                                                                17,
                                                                            ): 10.0,
                                                                            Variable(
                                                                                19,
                                                                            ): 10.0,
                                                                            Variable(
                                                                                21,
                                                                            ): 16.0,
                                                                        },
                                                                        parent: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        cass_or_calc_size: StateAnchor(
                                            [
                                                [
                                                    0.0,
                                                    0.0,
                                                ],
                                            ],
                                        ),
                                        origin: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        align: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        translation: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        coordinates_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        cass_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        matrix: StateAnchor(
                                            Mat4(
                                                [
                                                    [
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                    ],
                                                ],
                                            ),
                                        ),
                                        loc_styles: StateAnchor(
                                            Style {
                                                media_rules: {},
                                                rules: [
                                                    Rule {
                                                        value: StringValue(
                                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                        ),
                                                    },
                                                ],
                                                updated_at: [
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                                ],
                                                pseudo: None,
                                                media: None,
                                                name: "",
                                                keyframes: Keyframes {
                                                    frames: [],
                                                },
                                                combinator: None,
                                                pre_combinators: [],
                                            },
                                        ),
                                        world: StateAnchor(
                                            [
                                                250.0,
                                                250.0,
                                                0.0,
                                            ],
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            source_nix: StateVar(
                Some(
                    NodeIndex("GEl-e1LKf2dv"),
                ),
            ),
            target_nix: StateVar(
                Some(
                    NodeIndex("GEl-e1LKf2dv|CLICK"),
                ),
            ),
        },
        EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))->OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv")))): Edge {
            item: EmgEdgeItem {
                id: StateVar(
                    StateAnchor(
                        EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))->OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv")))),
                    ),
                ),
                paths: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    30.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    30.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    250.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    250.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {},
                                                v_v_suggest: {},
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {},
                                                top_v_v_suggest: {},
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    62,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            -30.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    63,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            -30.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    67,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    65,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    62,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    66,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    64,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    63,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    66,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    64,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    67,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    65,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    62,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    63,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    64,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    65,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    72,
                                                ),
                                                "align_y": Variable(
                                                    73,
                                                ),
                                                "align_z": Variable(
                                                    74,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    66,
                                                ),
                                                "height": Variable(
                                                    63,
                                                ),
                                                "hgap": Variable(
                                                    1,
                                                ),
                                                "left": Variable(
                                                    65,
                                                ),
                                                "my_other_gap": Variable(
                                                    3,
                                                ),
                                                "origin_x": Variable(
                                                    69,
                                                ),
                                                "origin_y": Variable(
                                                    70,
                                                ),
                                                "origin_z": Variable(
                                                    71,
                                                ),
                                                "right": Variable(
                                                    67,
                                                ),
                                                "top": Variable(
                                                    64,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    62,
                                                ),
                                                "z": Variable(
                                                    68,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    1,
                                                ): 120.0,
                                                Variable(
                                                    3,
                                                ): 28.0,
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "my_other_gap": Variable(
                                                    2,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    0,
                                                ): 120.0,
                                                Variable(
                                                    2,
                                                ): 28.0,
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: Some(
                                                CassowaryGeneralMap {
                                                    map: {
                                                        "align_x": Variable(
                                                            46,
                                                        ),
                                                        "align_y": Variable(
                                                            47,
                                                        ),
                                                        "align_z": Variable(
                                                            48,
                                                        ),
                                                        "baseline": Variable(
                                                            22,
                                                        ),
                                                        "bottom": Variable(
                                                            40,
                                                        ),
                                                        "height": Variable(
                                                            37,
                                                        ),
                                                        "hgap": Variable(
                                                            1,
                                                        ),
                                                        "left": Variable(
                                                            39,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            3,
                                                        ),
                                                        "origin_x": Variable(
                                                            43,
                                                        ),
                                                        "origin_y": Variable(
                                                            44,
                                                        ),
                                                        "origin_z": Variable(
                                                            45,
                                                        ),
                                                        "right": Variable(
                                                            41,
                                                        ),
                                                        "top": Variable(
                                                            38,
                                                        ),
                                                        "vgap": Variable(
                                                            20,
                                                        ),
                                                        "width": Variable(
                                                            36,
                                                        ),
                                                        "z": Variable(
                                                            42,
                                                        ),
                                                    },
                                                    v_v_suggest: {
                                                        Variable(
                                                            1,
                                                        ): 120.0,
                                                        Variable(
                                                            3,
                                                        ): 28.0,
                                                        Variable(
                                                            18,
                                                        ): 10.0,
                                                        Variable(
                                                            20,
                                                        ): 10.0,
                                                        Variable(
                                                            22,
                                                        ): 16.0,
                                                    },
                                                    virtual_constraints: {},
                                                    top_virtual_constraints: {},
                                                    top_map: {
                                                        "baseline": Variable(
                                                            21,
                                                        ),
                                                        "hgap": Variable(
                                                            17,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            2,
                                                        ),
                                                        "vgap": Variable(
                                                            19,
                                                        ),
                                                    },
                                                    top_v_v_suggest: {
                                                        Variable(
                                                            0,
                                                        ): 120.0,
                                                        Variable(
                                                            2,
                                                        ): 28.0,
                                                        Variable(
                                                            17,
                                                        ): 10.0,
                                                        Variable(
                                                            19,
                                                        ): 10.0,
                                                        Variable(
                                                            21,
                                                        ): 16.0,
                                                    },
                                                    parent: Some(
                                                        CassowaryGeneralMap {
                                                            map: {
                                                                "align_x": Variable(
                                                                    14,
                                                                ),
                                                                "align_y": Variable(
                                                                    15,
                                                                ),
                                                                "align_z": Variable(
                                                                    16,
                                                                ),
                                                                "baseline": Variable(
                                                                    22,
                                                                ),
                                                                "bottom": Variable(
                                                                    8,
                                                                ),
                                                                "height": Variable(
                                                                    5,
                                                                ),
                                                                "hgap": Variable(
                                                                    18,
                                                                ),
                                                                "left": Variable(
                                                                    7,
                                                                ),
                                                                "origin_x": Variable(
                                                                    11,
                                                                ),
                                                                "origin_y": Variable(
                                                                    12,
                                                                ),
                                                                "origin_z": Variable(
                                                                    13,
                                                                ),
                                                                "right": Variable(
                                                                    9,
                                                                ),
                                                                "top": Variable(
                                                                    6,
                                                                ),
                                                                "vgap": Variable(
                                                                    20,
                                                                ),
                                                                "width": Variable(
                                                                    4,
                                                                ),
                                                                "z": Variable(
                                                                    10,
                                                                ),
                                                            },
                                                            v_v_suggest: {
                                                                Variable(
                                                                    18,
                                                                ): 10.0,
                                                                Variable(
                                                                    20,
                                                                ): 10.0,
                                                                Variable(
                                                                    22,
                                                                ): 16.0,
                                                            },
                                                            virtual_constraints: {},
                                                            top_virtual_constraints: {},
                                                            top_map: {
                                                                "baseline": Variable(
                                                                    21,
                                                                ),
                                                                "hgap": Variable(
                                                                    17,
                                                                ),
                                                                "vgap": Variable(
                                                                    19,
                                                                ),
                                                            },
                                                            top_v_v_suggest: {
                                                                Variable(
                                                                    17,
                                                                ): 10.0,
                                                                Variable(
                                                                    19,
                                                                ): 10.0,
                                                                Variable(
                                                                    21,
                                                                ): 16.0,
                                                            },
                                                            parent: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                30.0,
                                                30.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    250.0,
                                                    250.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,250,250,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            72,
                                        ),
                                        "align_y": Variable(
                                            73,
                                        ),
                                        "align_z": Variable(
                                            74,
                                        ),
                                        "bottom": Variable(
                                            66,
                                        ),
                                        "height": Variable(
                                            63,
                                        ),
                                        "left": Variable(
                                            65,
                                        ),
                                        "origin_x": Variable(
                                            69,
                                        ),
                                        "origin_y": Variable(
                                            70,
                                        ),
                                        "origin_z": Variable(
                                            71,
                                        ),
                                        "right": Variable(
                                            67,
                                        ),
                                        "top": Variable(
                                            64,
                                        ),
                                        "width": Variable(
                                            62,
                                        ),
                                        "z": Variable(
                                            68,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            62,
                                        ): "width",
                                        Variable(
                                            63,
                                        ): "height",
                                        Variable(
                                            64,
                                        ): "top",
                                        Variable(
                                            65,
                                        ): "left",
                                        Variable(
                                            66,
                                        ): "bottom",
                                        Variable(
                                            67,
                                        ): "right",
                                        Variable(
                                            68,
                                        ): "z",
                                        Variable(
                                            69,
                                        ): "origin_x",
                                        Variable(
                                            70,
                                        ): "origin_y",
                                        Variable(
                                            71,
                                        ): "origin_z",
                                        Variable(
                                            72,
                                        ): "align_x",
                                        Variable(
                                            73,
                                        ): "align_y",
                                        Variable(
                                            74,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {},
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            0,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            1,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            2,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            3,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            62,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[width] ",
                                        ),
                                        Variable(
                                            63,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[height] ",
                                        ),
                                        Variable(
                                            64,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[top] ",
                                        ),
                                        Variable(
                                            65,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[left] ",
                                        ),
                                        Variable(
                                            66,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            67,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[right] ",
                                        ),
                                        Variable(
                                            69,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            70,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            72,
                                        ): (
                                            NotNan(
                                                250.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            73,
                                        ): (
                                            NotNan(
                                                250.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[align_y] ",
                                        ),
                                        Variable(
                                            114,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-e1LKf2dv\"[width]",
                                        ),
                                        Variable(
                                            115,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-e1LKf2dv\"[height]",
                                        ),
                                        Variable(
                                            116,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-e1LKf2dv\"[top]",
                                        ),
                                        Variable(
                                            117,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-e1LKf2dv\"[left]",
                                        ),
                                        Variable(
                                            118,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-e1LKf2dv\"[bottom]",
                                        ),
                                        Variable(
                                            119,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-e1LKf2dv\"[right]",
                                        ),
                                        Variable(
                                            127,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-fPY-hr04|CLICK\"[width]",
                                        ),
                                        Variable(
                                            128,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-fPY-hr04|CLICK\"[height]",
                                        ),
                                        Variable(
                                            129,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-fPY-hr04|CLICK\"[top]",
                                        ),
                                        Variable(
                                            130,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-fPY-hr04|CLICK\"[left]",
                                        ),
                                        Variable(
                                            131,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-fPY-hr04|CLICK\"[bottom]",
                                        ),
                                        Variable(
                                            132,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-fPY-hr04|CLICK\"[right]",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            30.0,
                                        ),
                                        Some(
                                            30.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,250,250,0,1);\n width: 30px;\nheight: 30px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {
                                            TypeName(
                                                "CssFill",
                                            ): StateAnchor(
                                                Rgba(
                                                    1.0,
                                                    1.0,
                                                    1.0,
                                                    1.0,
                                                ),
                                            ),
                                        },
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                250.0,
                                                250.0,
                                                0.0,
                                            ],
                                            30.0,
                                            30.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            250.0,
                                                        ),
                                                        y0: NotNan(
                                                            250.0,
                                                        ),
                                                        x1: NotNan(
                                                            250.0,
                                                        ),
                                                        y1: NotNan(
                                                            250.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        250.0,
                                                    ),
                                                    y0: NotNan(
                                                        250.0,
                                                    ),
                                                    x1: NotNan(
                                                        250.0,
                                                    ),
                                                    y1: NotNan(
                                                        250.0,
                                                    ),
                                                },
                                            },
                                        ),
                                    ),
                                },
                                opt_p_calculated: Some(
                                    LayoutCalculated {
                                        size_constraints: StateAnchor(
                                            [
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -0.9,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -0.9,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        41,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        40,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        40,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        41,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                            ],
                                        ),
                                        cassowary_inherited_generals_sa: StateAnchor(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "align_x": Variable(
                                                        46,
                                                    ),
                                                    "align_y": Variable(
                                                        47,
                                                    ),
                                                    "align_z": Variable(
                                                        48,
                                                    ),
                                                    "baseline": Variable(
                                                        22,
                                                    ),
                                                    "bottom": Variable(
                                                        40,
                                                    ),
                                                    "height": Variable(
                                                        37,
                                                    ),
                                                    "hgap": Variable(
                                                        1,
                                                    ),
                                                    "left": Variable(
                                                        39,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        3,
                                                    ),
                                                    "origin_x": Variable(
                                                        43,
                                                    ),
                                                    "origin_y": Variable(
                                                        44,
                                                    ),
                                                    "origin_z": Variable(
                                                        45,
                                                    ),
                                                    "right": Variable(
                                                        41,
                                                    ),
                                                    "top": Variable(
                                                        38,
                                                    ),
                                                    "vgap": Variable(
                                                        20,
                                                    ),
                                                    "width": Variable(
                                                        36,
                                                    ),
                                                    "z": Variable(
                                                        42,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        1,
                                                    ): 120.0,
                                                    Variable(
                                                        3,
                                                    ): 28.0,
                                                    Variable(
                                                        18,
                                                    ): 10.0,
                                                    Variable(
                                                        20,
                                                    ): 10.0,
                                                    Variable(
                                                        22,
                                                    ): 16.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "baseline": Variable(
                                                        21,
                                                    ),
                                                    "hgap": Variable(
                                                        17,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        2,
                                                    ),
                                                    "vgap": Variable(
                                                        19,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        0,
                                                    ): 120.0,
                                                    Variable(
                                                        2,
                                                    ): 28.0,
                                                    Variable(
                                                        17,
                                                    ): 10.0,
                                                    Variable(
                                                        19,
                                                    ): 10.0,
                                                    Variable(
                                                        21,
                                                    ): 16.0,
                                                },
                                                parent: Some(
                                                    CassowaryGeneralMap {
                                                        map: {
                                                            "align_x": Variable(
                                                                14,
                                                            ),
                                                            "align_y": Variable(
                                                                15,
                                                            ),
                                                            "align_z": Variable(
                                                                16,
                                                            ),
                                                            "baseline": Variable(
                                                                22,
                                                            ),
                                                            "bottom": Variable(
                                                                8,
                                                            ),
                                                            "height": Variable(
                                                                5,
                                                            ),
                                                            "hgap": Variable(
                                                                18,
                                                            ),
                                                            "left": Variable(
                                                                7,
                                                            ),
                                                            "origin_x": Variable(
                                                                11,
                                                            ),
                                                            "origin_y": Variable(
                                                                12,
                                                            ),
                                                            "origin_z": Variable(
                                                                13,
                                                            ),
                                                            "right": Variable(
                                                                9,
                                                            ),
                                                            "top": Variable(
                                                                6,
                                                            ),
                                                            "vgap": Variable(
                                                                20,
                                                            ),
                                                            "width": Variable(
                                                                4,
                                                            ),
                                                            "z": Variable(
                                                                10,
                                                            ),
                                                        },
                                                        v_v_suggest: {
                                                            Variable(
                                                                18,
                                                            ): 10.0,
                                                            Variable(
                                                                20,
                                                            ): 10.0,
                                                            Variable(
                                                                22,
                                                            ): 16.0,
                                                        },
                                                        virtual_constraints: {},
                                                        top_virtual_constraints: {},
                                                        top_map: {
                                                            "baseline": Variable(
                                                                21,
                                                            ),
                                                            "hgap": Variable(
                                                                17,
                                                            ),
                                                            "vgap": Variable(
                                                                19,
                                                            ),
                                                        },
                                                        top_v_v_suggest: {
                                                            Variable(
                                                                17,
                                                            ): 10.0,
                                                            Variable(
                                                                19,
                                                            ): 10.0,
                                                            Variable(
                                                                21,
                                                            ): 16.0,
                                                        },
                                                        parent: None,
                                                    },
                                                ),
                                            },
                                        ),
                                        cass_or_calc_size: StateAnchor(
                                            [
                                                [
                                                    540.0,
                                                    540.0,
                                                ],
                                            ],
                                        ),
                                        origin: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        align: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        translation: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        coordinates_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        cass_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        matrix: StateAnchor(
                                            Mat4(
                                                [
                                                    [
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                    ],
                                                ],
                                            ),
                                        ),
                                        loc_styles: StateAnchor(
                                            Style {
                                                media_rules: {},
                                                rules: [
                                                    Rule {
                                                        value: StringValue(
                                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                        ),
                                                    },
                                                ],
                                                updated_at: [
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                                ],
                                                pseudo: None,
                                                media: None,
                                                name: "",
                                                keyframes: Keyframes {
                                                    frames: [],
                                                },
                                                combinator: None,
                                                pre_combinators: [],
                                            },
                                        ),
                                        world: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
                layout: Layout {
                    w: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    h: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    z: StateVar(
                        StateAnchor(
                            0,
                        ),
                    ),
                    origin_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    origin_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    origin_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    cassowary_constants: StateVar(
                        StateAnchor(
                            [],
                        ),
                    ),
                    cassowary_selectors: StateVar(
                        [],
                    ),
                    cassowary_generals: StateVar(
                        CassowaryGeneralMap {
                            map: {},
                            v_v_suggest: {},
                            virtual_constraints: {},
                            top_virtual_constraints: {},
                            top_map: {},
                            top_v_v_suggest: {},
                            parent: None,
                        },
                    ),
                },
                styles: StateVar(
                    {},
                ),
                path_styles: StateVar(
                    {},
                ),
                path_layouts: StateVar(
                    {},
                ),
                other_css_styles: StateVar(
                    Style {
                        media_rules: {},
                        rules: [],
                        updated_at: [
                            "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:942:45",
                        ],
                        pseudo: None,
                        media: None,
                        name: "",
                        keyframes: Keyframes {
                            frames: [],
                        },
                        combinator: None,
                        pre_combinators: [],
                    },
                ),
                edge_nodes: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))->OptionNodeIndex(Some(NodeIndex("GEl-e1LKf2dv")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {},
                                                v_v_suggest: {},
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {},
                                                top_v_v_suggest: {},
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    119,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    117,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    114,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    118,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    116,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    115,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    118,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    116,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    119,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    117,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    114,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    115,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    116,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    117,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    124,
                                                ),
                                                "align_y": Variable(
                                                    125,
                                                ),
                                                "align_z": Variable(
                                                    126,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    118,
                                                ),
                                                "height": Variable(
                                                    115,
                                                ),
                                                "hgap": Variable(
                                                    1,
                                                ),
                                                "left": Variable(
                                                    117,
                                                ),
                                                "my_other_gap": Variable(
                                                    3,
                                                ),
                                                "origin_x": Variable(
                                                    121,
                                                ),
                                                "origin_y": Variable(
                                                    122,
                                                ),
                                                "origin_z": Variable(
                                                    123,
                                                ),
                                                "right": Variable(
                                                    119,
                                                ),
                                                "top": Variable(
                                                    116,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    114,
                                                ),
                                                "z": Variable(
                                                    120,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    1,
                                                ): 120.0,
                                                Variable(
                                                    3,
                                                ): 28.0,
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "my_other_gap": Variable(
                                                    2,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    0,
                                                ): 120.0,
                                                Variable(
                                                    2,
                                                ): 28.0,
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: Some(
                                                CassowaryGeneralMap {
                                                    map: {
                                                        "align_x": Variable(
                                                            72,
                                                        ),
                                                        "align_y": Variable(
                                                            73,
                                                        ),
                                                        "align_z": Variable(
                                                            74,
                                                        ),
                                                        "baseline": Variable(
                                                            22,
                                                        ),
                                                        "bottom": Variable(
                                                            66,
                                                        ),
                                                        "height": Variable(
                                                            63,
                                                        ),
                                                        "hgap": Variable(
                                                            1,
                                                        ),
                                                        "left": Variable(
                                                            65,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            3,
                                                        ),
                                                        "origin_x": Variable(
                                                            69,
                                                        ),
                                                        "origin_y": Variable(
                                                            70,
                                                        ),
                                                        "origin_z": Variable(
                                                            71,
                                                        ),
                                                        "right": Variable(
                                                            67,
                                                        ),
                                                        "top": Variable(
                                                            64,
                                                        ),
                                                        "vgap": Variable(
                                                            20,
                                                        ),
                                                        "width": Variable(
                                                            62,
                                                        ),
                                                        "z": Variable(
                                                            68,
                                                        ),
                                                    },
                                                    v_v_suggest: {
                                                        Variable(
                                                            1,
                                                        ): 120.0,
                                                        Variable(
                                                            3,
                                                        ): 28.0,
                                                        Variable(
                                                            18,
                                                        ): 10.0,
                                                        Variable(
                                                            20,
                                                        ): 10.0,
                                                        Variable(
                                                            22,
                                                        ): 16.0,
                                                    },
                                                    virtual_constraints: {},
                                                    top_virtual_constraints: {},
                                                    top_map: {
                                                        "baseline": Variable(
                                                            21,
                                                        ),
                                                        "hgap": Variable(
                                                            17,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            2,
                                                        ),
                                                        "vgap": Variable(
                                                            19,
                                                        ),
                                                    },
                                                    top_v_v_suggest: {
                                                        Variable(
                                                            0,
                                                        ): 120.0,
                                                        Variable(
                                                            2,
                                                        ): 28.0,
                                                        Variable(
                                                            17,
                                                        ): 10.0,
                                                        Variable(
                                                            19,
                                                        ): 10.0,
                                                        Variable(
                                                            21,
                                                        ): 16.0,
                                                    },
                                                    parent: Some(
                                                        CassowaryGeneralMap {
                                                            map: {
                                                                "align_x": Variable(
                                                                    46,
                                                                ),
                                                                "align_y": Variable(
                                                                    47,
                                                                ),
                                                                "align_z": Variable(
                                                                    48,
                                                                ),
                                                                "baseline": Variable(
                                                                    22,
                                                                ),
                                                                "bottom": Variable(
                                                                    40,
                                                                ),
                                                                "height": Variable(
                                                                    37,
                                                                ),
                                                                "hgap": Variable(
                                                                    1,
                                                                ),
                                                                "left": Variable(
                                                                    39,
                                                                ),
                                                                "my_other_gap": Variable(
                                                                    3,
                                                                ),
                                                                "origin_x": Variable(
                                                                    43,
                                                                ),
                                                                "origin_y": Variable(
                                                                    44,
                                                                ),
                                                                "origin_z": Variable(
                                                                    45,
                                                                ),
                                                                "right": Variable(
                                                                    41,
                                                                ),
                                                                "top": Variable(
                                                                    38,
                                                                ),
                                                                "vgap": Variable(
                                                                    20,
                                                                ),
                                                                "width": Variable(
                                                                    36,
                                                                ),
                                                                "z": Variable(
                                                                    42,
                                                                ),
                                                            },
                                                            v_v_suggest: {
                                                                Variable(
                                                                    1,
                                                                ): 120.0,
                                                                Variable(
                                                                    3,
                                                                ): 28.0,
                                                                Variable(
                                                                    18,
                                                                ): 10.0,
                                                                Variable(
                                                                    20,
                                                                ): 10.0,
                                                                Variable(
                                                                    22,
                                                                ): 16.0,
                                                            },
                                                            virtual_constraints: {},
                                                            top_virtual_constraints: {},
                                                            top_map: {
                                                                "baseline": Variable(
                                                                    21,
                                                                ),
                                                                "hgap": Variable(
                                                                    17,
                                                                ),
                                                                "my_other_gap": Variable(
                                                                    2,
                                                                ),
                                                                "vgap": Variable(
                                                                    19,
                                                                ),
                                                            },
                                                            top_v_v_suggest: {
                                                                Variable(
                                                                    0,
                                                                ): 120.0,
                                                                Variable(
                                                                    2,
                                                                ): 28.0,
                                                                Variable(
                                                                    17,
                                                                ): 10.0,
                                                                Variable(
                                                                    19,
                                                                ): 10.0,
                                                                Variable(
                                                                    21,
                                                                ): 16.0,
                                                            },
                                                            parent: Some(
                                                                CassowaryGeneralMap {
                                                                    map: {
                                                                        "align_x": Variable(
                                                                            14,
                                                                        ),
                                                                        "align_y": Variable(
                                                                            15,
                                                                        ),
                                                                        "align_z": Variable(
                                                                            16,
                                                                        ),
                                                                        "baseline": Variable(
                                                                            22,
                                                                        ),
                                                                        "bottom": Variable(
                                                                            8,
                                                                        ),
                                                                        "height": Variable(
                                                                            5,
                                                                        ),
                                                                        "hgap": Variable(
                                                                            18,
                                                                        ),
                                                                        "left": Variable(
                                                                            7,
                                                                        ),
                                                                        "origin_x": Variable(
                                                                            11,
                                                                        ),
                                                                        "origin_y": Variable(
                                                                            12,
                                                                        ),
                                                                        "origin_z": Variable(
                                                                            13,
                                                                        ),
                                                                        "right": Variable(
                                                                            9,
                                                                        ),
                                                                        "top": Variable(
                                                                            6,
                                                                        ),
                                                                        "vgap": Variable(
                                                                            20,
                                                                        ),
                                                                        "width": Variable(
                                                                            4,
                                                                        ),
                                                                        "z": Variable(
                                                                            10,
                                                                        ),
                                                                    },
                                                                    v_v_suggest: {
                                                                        Variable(
                                                                            18,
                                                                        ): 10.0,
                                                                        Variable(
                                                                            20,
                                                                        ): 10.0,
                                                                        Variable(
                                                                            22,
                                                                        ): 16.0,
                                                                    },
                                                                    virtual_constraints: {},
                                                                    top_virtual_constraints: {},
                                                                    top_map: {
                                                                        "baseline": Variable(
                                                                            21,
                                                                        ),
                                                                        "hgap": Variable(
                                                                            17,
                                                                        ),
                                                                        "vgap": Variable(
                                                                            19,
                                                                        ),
                                                                    },
                                                                    top_v_v_suggest: {
                                                                        Variable(
                                                                            17,
                                                                        ): 10.0,
                                                                        Variable(
                                                                            19,
                                                                        ): 10.0,
                                                                        Variable(
                                                                            21,
                                                                        ): 16.0,
                                                                    },
                                                                    parent: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                0.0,
                                                0.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            124,
                                        ),
                                        "align_y": Variable(
                                            125,
                                        ),
                                        "align_z": Variable(
                                            126,
                                        ),
                                        "bottom": Variable(
                                            118,
                                        ),
                                        "height": Variable(
                                            115,
                                        ),
                                        "left": Variable(
                                            117,
                                        ),
                                        "origin_x": Variable(
                                            121,
                                        ),
                                        "origin_y": Variable(
                                            122,
                                        ),
                                        "origin_z": Variable(
                                            123,
                                        ),
                                        "right": Variable(
                                            119,
                                        ),
                                        "top": Variable(
                                            116,
                                        ),
                                        "width": Variable(
                                            114,
                                        ),
                                        "z": Variable(
                                            120,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            114,
                                        ): "width",
                                        Variable(
                                            115,
                                        ): "height",
                                        Variable(
                                            116,
                                        ): "top",
                                        Variable(
                                            117,
                                        ): "left",
                                        Variable(
                                            118,
                                        ): "bottom",
                                        Variable(
                                            119,
                                        ): "right",
                                        Variable(
                                            120,
                                        ): "z",
                                        Variable(
                                            121,
                                        ): "origin_x",
                                        Variable(
                                            122,
                                        ): "origin_y",
                                        Variable(
                                            123,
                                        ): "origin_z",
                                        Variable(
                                            124,
                                        ): "align_x",
                                        Variable(
                                            125,
                                        ): "align_y",
                                        Variable(
                                            126,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {},
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            0,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            1,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            2,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            3,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            114,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))])[width] ",
                                        ),
                                        Variable(
                                            115,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))])[height] ",
                                        ),
                                        Variable(
                                            116,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))])[top] ",
                                        ),
                                        Variable(
                                            117,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))])[left] ",
                                        ),
                                        Variable(
                                            118,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            119,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))])[right] ",
                                        ),
                                        Variable(
                                            121,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            122,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            124,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            125,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))])[align_y] ",
                                        ),
                                        Variable(
                                            140,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))]) |=> #\"GEl-e1LKf2dv|CLICK\"[width]",
                                        ),
                                        Variable(
                                            141,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))]) |=> #\"GEl-e1LKf2dv|CLICK\"[height]",
                                        ),
                                        Variable(
                                            142,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))]) |=> #\"GEl-e1LKf2dv|CLICK\"[top]",
                                        ),
                                        Variable(
                                            143,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))]) |=> #\"GEl-e1LKf2dv|CLICK\"[left]",
                                        ),
                                        Variable(
                                            144,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))]) |=> #\"GEl-e1LKf2dv|CLICK\"[bottom]",
                                        ),
                                        Variable(
                                            145,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-e1LKf2dv\"))))]) |=> #\"GEl-e1LKf2dv|CLICK\"[right]",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            -0.0,
                                        ),
                                        Some(
                                            -0.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);\n width: -0px;\nheight: -0px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {},
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                            -0.0,
                                            -0.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            250.0,
                                                        ),
                                                        y0: NotNan(
                                                            250.0,
                                                        ),
                                                        x1: NotNan(
                                                            250.0,
                                                        ),
                                                        y1: NotNan(
                                                            250.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        250.0,
                                                    ),
                                                    y0: NotNan(
                                                        250.0,
                                                    ),
                                                    x1: NotNan(
                                                        250.0,
                                                    ),
                                                    y1: NotNan(
                                                        250.0,
                                                    ),
                                                },
                                            },
                                        ),
                                    ),
                                },
                                opt_p_calculated: Some(
                                    LayoutCalculated {
                                        size_constraints: StateAnchor(
                                            [
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        62,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -30.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        63,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -30.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        67,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        65,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        62,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        66,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        64,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        63,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        66,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        64,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        67,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        65,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        62,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        63,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        64,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        65,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                            ],
                                        ),
                                        cassowary_inherited_generals_sa: StateAnchor(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "align_x": Variable(
                                                        72,
                                                    ),
                                                    "align_y": Variable(
                                                        73,
                                                    ),
                                                    "align_z": Variable(
                                                        74,
                                                    ),
                                                    "baseline": Variable(
                                                        22,
                                                    ),
                                                    "bottom": Variable(
                                                        66,
                                                    ),
                                                    "height": Variable(
                                                        63,
                                                    ),
                                                    "hgap": Variable(
                                                        1,
                                                    ),
                                                    "left": Variable(
                                                        65,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        3,
                                                    ),
                                                    "origin_x": Variable(
                                                        69,
                                                    ),
                                                    "origin_y": Variable(
                                                        70,
                                                    ),
                                                    "origin_z": Variable(
                                                        71,
                                                    ),
                                                    "right": Variable(
                                                        67,
                                                    ),
                                                    "top": Variable(
                                                        64,
                                                    ),
                                                    "vgap": Variable(
                                                        20,
                                                    ),
                                                    "width": Variable(
                                                        62,
                                                    ),
                                                    "z": Variable(
                                                        68,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        1,
                                                    ): 120.0,
                                                    Variable(
                                                        3,
                                                    ): 28.0,
                                                    Variable(
                                                        18,
                                                    ): 10.0,
                                                    Variable(
                                                        20,
                                                    ): 10.0,
                                                    Variable(
                                                        22,
                                                    ): 16.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "baseline": Variable(
                                                        21,
                                                    ),
                                                    "hgap": Variable(
                                                        17,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        2,
                                                    ),
                                                    "vgap": Variable(
                                                        19,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        0,
                                                    ): 120.0,
                                                    Variable(
                                                        2,
                                                    ): 28.0,
                                                    Variable(
                                                        17,
                                                    ): 10.0,
                                                    Variable(
                                                        19,
                                                    ): 10.0,
                                                    Variable(
                                                        21,
                                                    ): 16.0,
                                                },
                                                parent: Some(
                                                    CassowaryGeneralMap {
                                                        map: {
                                                            "align_x": Variable(
                                                                46,
                                                            ),
                                                            "align_y": Variable(
                                                                47,
                                                            ),
                                                            "align_z": Variable(
                                                                48,
                                                            ),
                                                            "baseline": Variable(
                                                                22,
                                                            ),
                                                            "bottom": Variable(
                                                                40,
                                                            ),
                                                            "height": Variable(
                                                                37,
                                                            ),
                                                            "hgap": Variable(
                                                                1,
                                                            ),
                                                            "left": Variable(
                                                                39,
                                                            ),
                                                            "my_other_gap": Variable(
                                                                3,
                                                            ),
                                                            "origin_x": Variable(
                                                                43,
                                                            ),
                                                            "origin_y": Variable(
                                                                44,
                                                            ),
                                                            "origin_z": Variable(
                                                                45,
                                                            ),
                                                            "right": Variable(
                                                                41,
                                                            ),
                                                            "top": Variable(
                                                                38,
                                                            ),
                                                            "vgap": Variable(
                                                                20,
                                                            ),
                                                            "width": Variable(
                                                                36,
                                                            ),
                                                            "z": Variable(
                                                                42,
                                                            ),
                                                        },
                                                        v_v_suggest: {
                                                            Variable(
                                                                1,
                                                            ): 120.0,
                                                            Variable(
                                                                3,
                                                            ): 28.0,
                                                            Variable(
                                                                18,
                                                            ): 10.0,
                                                            Variable(
                                                                20,
                                                            ): 10.0,
                                                            Variable(
                                                                22,
                                                            ): 16.0,
                                                        },
                                                        virtual_constraints: {},
                                                        top_virtual_constraints: {},
                                                        top_map: {
                                                            "baseline": Variable(
                                                                21,
                                                            ),
                                                            "hgap": Variable(
                                                                17,
                                                            ),
                                                            "my_other_gap": Variable(
                                                                2,
                                                            ),
                                                            "vgap": Variable(
                                                                19,
                                                            ),
                                                        },
                                                        top_v_v_suggest: {
                                                            Variable(
                                                                0,
                                                            ): 120.0,
                                                            Variable(
                                                                2,
                                                            ): 28.0,
                                                            Variable(
                                                                17,
                                                            ): 10.0,
                                                            Variable(
                                                                19,
                                                            ): 10.0,
                                                            Variable(
                                                                21,
                                                            ): 16.0,
                                                        },
                                                        parent: Some(
                                                            CassowaryGeneralMap {
                                                                map: {
                                                                    "align_x": Variable(
                                                                        14,
                                                                    ),
                                                                    "align_y": Variable(
                                                                        15,
                                                                    ),
                                                                    "align_z": Variable(
                                                                        16,
                                                                    ),
                                                                    "baseline": Variable(
                                                                        22,
                                                                    ),
                                                                    "bottom": Variable(
                                                                        8,
                                                                    ),
                                                                    "height": Variable(
                                                                        5,
                                                                    ),
                                                                    "hgap": Variable(
                                                                        18,
                                                                    ),
                                                                    "left": Variable(
                                                                        7,
                                                                    ),
                                                                    "origin_x": Variable(
                                                                        11,
                                                                    ),
                                                                    "origin_y": Variable(
                                                                        12,
                                                                    ),
                                                                    "origin_z": Variable(
                                                                        13,
                                                                    ),
                                                                    "right": Variable(
                                                                        9,
                                                                    ),
                                                                    "top": Variable(
                                                                        6,
                                                                    ),
                                                                    "vgap": Variable(
                                                                        20,
                                                                    ),
                                                                    "width": Variable(
                                                                        4,
                                                                    ),
                                                                    "z": Variable(
                                                                        10,
                                                                    ),
                                                                },
                                                                v_v_suggest: {
                                                                    Variable(
                                                                        18,
                                                                    ): 10.0,
                                                                    Variable(
                                                                        20,
                                                                    ): 10.0,
                                                                    Variable(
                                                                        22,
                                                                    ): 16.0,
                                                                },
                                                                virtual_constraints: {},
                                                                top_virtual_constraints: {},
                                                                top_map: {
                                                                    "baseline": Variable(
                                                                        21,
                                                                    ),
                                                                    "hgap": Variable(
                                                                        17,
                                                                    ),
                                                                    "vgap": Variable(
                                                                        19,
                                                                    ),
                                                                },
                                                                top_v_v_suggest: {
                                                                    Variable(
                                                                        17,
                                                                    ): 10.0,
                                                                    Variable(
                                                                        19,
                                                                    ): 10.0,
                                                                    Variable(
                                                                        21,
                                                                    ): 16.0,
                                                                },
                                                                parent: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        cass_or_calc_size: StateAnchor(
                                            [
                                                [
                                                    30.0,
                                                    30.0,
                                                ],
                                            ],
                                        ),
                                        origin: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        align: StateAnchor(
                                            [
                                                250.0,
                                                250.0,
                                                0.0,
                                            ],
                                        ),
                                        translation: StateAnchor(
                                            [
                                                250.0,
                                                250.0,
                                                0.0,
                                            ],
                                        ),
                                        coordinates_trans: StateAnchor(
                                            [
                                                250.0,
                                                250.0,
                                                0.0,
                                            ],
                                        ),
                                        cass_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        matrix: StateAnchor(
                                            Mat4(
                                                [
                                                    [
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        250.0,
                                                        250.0,
                                                        0.0,
                                                        1.0,
                                                    ],
                                                ],
                                            ),
                                        ),
                                        loc_styles: StateAnchor(
                                            Style {
                                                media_rules: {},
                                                rules: [
                                                    Rule {
                                                        value: StringValue(
                                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,250,250,0,1)",
                                                        ),
                                                    },
                                                ],
                                                updated_at: [
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                                ],
                                                pseudo: None,
                                                media: None,
                                                name: "",
                                                keyframes: Keyframes {
                                                    frames: [],
                                                },
                                                combinator: None,
                                                pre_combinators: [],
                                            },
                                        ),
                                        world: StateAnchor(
                                            [
                                                250.0,
                                                250.0,
                                                0.0,
                                            ],
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            source_nix: StateVar(
                Some(
                    NodeIndex("GEl-fPY-hr04"),
                ),
            ),
            target_nix: StateVar(
                Some(
                    NodeIndex("GEl-e1LKf2dv"),
                ),
            ),
        },
        EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04|CLICK")))): Edge {
            item: EmgEdgeItem {
                id: StateVar(
                    StateAnchor(
                        EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04|CLICK")))),
                    ),
                ),
                paths: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    30.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    30.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    250.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    250.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {},
                                                v_v_suggest: {},
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {},
                                                top_v_v_suggest: {},
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    62,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            -30.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    63,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            -30.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    67,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    65,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    62,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    66,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    64,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    63,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    66,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    64,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    67,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    65,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    62,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    63,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    64,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    65,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    72,
                                                ),
                                                "align_y": Variable(
                                                    73,
                                                ),
                                                "align_z": Variable(
                                                    74,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    66,
                                                ),
                                                "height": Variable(
                                                    63,
                                                ),
                                                "hgap": Variable(
                                                    1,
                                                ),
                                                "left": Variable(
                                                    65,
                                                ),
                                                "my_other_gap": Variable(
                                                    3,
                                                ),
                                                "origin_x": Variable(
                                                    69,
                                                ),
                                                "origin_y": Variable(
                                                    70,
                                                ),
                                                "origin_z": Variable(
                                                    71,
                                                ),
                                                "right": Variable(
                                                    67,
                                                ),
                                                "top": Variable(
                                                    64,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    62,
                                                ),
                                                "z": Variable(
                                                    68,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    1,
                                                ): 120.0,
                                                Variable(
                                                    3,
                                                ): 28.0,
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "my_other_gap": Variable(
                                                    2,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    0,
                                                ): 120.0,
                                                Variable(
                                                    2,
                                                ): 28.0,
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: Some(
                                                CassowaryGeneralMap {
                                                    map: {
                                                        "align_x": Variable(
                                                            46,
                                                        ),
                                                        "align_y": Variable(
                                                            47,
                                                        ),
                                                        "align_z": Variable(
                                                            48,
                                                        ),
                                                        "baseline": Variable(
                                                            22,
                                                        ),
                                                        "bottom": Variable(
                                                            40,
                                                        ),
                                                        "height": Variable(
                                                            37,
                                                        ),
                                                        "hgap": Variable(
                                                            1,
                                                        ),
                                                        "left": Variable(
                                                            39,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            3,
                                                        ),
                                                        "origin_x": Variable(
                                                            43,
                                                        ),
                                                        "origin_y": Variable(
                                                            44,
                                                        ),
                                                        "origin_z": Variable(
                                                            45,
                                                        ),
                                                        "right": Variable(
                                                            41,
                                                        ),
                                                        "top": Variable(
                                                            38,
                                                        ),
                                                        "vgap": Variable(
                                                            20,
                                                        ),
                                                        "width": Variable(
                                                            36,
                                                        ),
                                                        "z": Variable(
                                                            42,
                                                        ),
                                                    },
                                                    v_v_suggest: {
                                                        Variable(
                                                            1,
                                                        ): 120.0,
                                                        Variable(
                                                            3,
                                                        ): 28.0,
                                                        Variable(
                                                            18,
                                                        ): 10.0,
                                                        Variable(
                                                            20,
                                                        ): 10.0,
                                                        Variable(
                                                            22,
                                                        ): 16.0,
                                                    },
                                                    virtual_constraints: {},
                                                    top_virtual_constraints: {},
                                                    top_map: {
                                                        "baseline": Variable(
                                                            21,
                                                        ),
                                                        "hgap": Variable(
                                                            17,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            2,
                                                        ),
                                                        "vgap": Variable(
                                                            19,
                                                        ),
                                                    },
                                                    top_v_v_suggest: {
                                                        Variable(
                                                            0,
                                                        ): 120.0,
                                                        Variable(
                                                            2,
                                                        ): 28.0,
                                                        Variable(
                                                            17,
                                                        ): 10.0,
                                                        Variable(
                                                            19,
                                                        ): 10.0,
                                                        Variable(
                                                            21,
                                                        ): 16.0,
                                                    },
                                                    parent: Some(
                                                        CassowaryGeneralMap {
                                                            map: {
                                                                "align_x": Variable(
                                                                    14,
                                                                ),
                                                                "align_y": Variable(
                                                                    15,
                                                                ),
                                                                "align_z": Variable(
                                                                    16,
                                                                ),
                                                                "baseline": Variable(
                                                                    22,
                                                                ),
                                                                "bottom": Variable(
                                                                    8,
                                                                ),
                                                                "height": Variable(
                                                                    5,
                                                                ),
                                                                "hgap": Variable(
                                                                    18,
                                                                ),
                                                                "left": Variable(
                                                                    7,
                                                                ),
                                                                "origin_x": Variable(
                                                                    11,
                                                                ),
                                                                "origin_y": Variable(
                                                                    12,
                                                                ),
                                                                "origin_z": Variable(
                                                                    13,
                                                                ),
                                                                "right": Variable(
                                                                    9,
                                                                ),
                                                                "top": Variable(
                                                                    6,
                                                                ),
                                                                "vgap": Variable(
                                                                    20,
                                                                ),
                                                                "width": Variable(
                                                                    4,
                                                                ),
                                                                "z": Variable(
                                                                    10,
                                                                ),
                                                            },
                                                            v_v_suggest: {
                                                                Variable(
                                                                    18,
                                                                ): 10.0,
                                                                Variable(
                                                                    20,
                                                                ): 10.0,
                                                                Variable(
                                                                    22,
                                                                ): 16.0,
                                                            },
                                                            virtual_constraints: {},
                                                            top_virtual_constraints: {},
                                                            top_map: {
                                                                "baseline": Variable(
                                                                    21,
                                                                ),
                                                                "hgap": Variable(
                                                                    17,
                                                                ),
                                                                "vgap": Variable(
                                                                    19,
                                                                ),
                                                            },
                                                            top_v_v_suggest: {
                                                                Variable(
                                                                    17,
                                                                ): 10.0,
                                                                Variable(
                                                                    19,
                                                                ): 10.0,
                                                                Variable(
                                                                    21,
                                                                ): 16.0,
                                                            },
                                                            parent: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                30.0,
                                                30.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    250.0,
                                                    250.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,250,250,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            72,
                                        ),
                                        "align_y": Variable(
                                            73,
                                        ),
                                        "align_z": Variable(
                                            74,
                                        ),
                                        "bottom": Variable(
                                            66,
                                        ),
                                        "height": Variable(
                                            63,
                                        ),
                                        "left": Variable(
                                            65,
                                        ),
                                        "origin_x": Variable(
                                            69,
                                        ),
                                        "origin_y": Variable(
                                            70,
                                        ),
                                        "origin_z": Variable(
                                            71,
                                        ),
                                        "right": Variable(
                                            67,
                                        ),
                                        "top": Variable(
                                            64,
                                        ),
                                        "width": Variable(
                                            62,
                                        ),
                                        "z": Variable(
                                            68,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            62,
                                        ): "width",
                                        Variable(
                                            63,
                                        ): "height",
                                        Variable(
                                            64,
                                        ): "top",
                                        Variable(
                                            65,
                                        ): "left",
                                        Variable(
                                            66,
                                        ): "bottom",
                                        Variable(
                                            67,
                                        ): "right",
                                        Variable(
                                            68,
                                        ): "z",
                                        Variable(
                                            69,
                                        ): "origin_x",
                                        Variable(
                                            70,
                                        ): "origin_y",
                                        Variable(
                                            71,
                                        ): "origin_z",
                                        Variable(
                                            72,
                                        ): "align_x",
                                        Variable(
                                            73,
                                        ): "align_y",
                                        Variable(
                                            74,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {},
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            0,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            1,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            2,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            3,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            62,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[width] ",
                                        ),
                                        Variable(
                                            63,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[height] ",
                                        ),
                                        Variable(
                                            64,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[top] ",
                                        ),
                                        Variable(
                                            65,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[left] ",
                                        ),
                                        Variable(
                                            66,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            67,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[right] ",
                                        ),
                                        Variable(
                                            69,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            70,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            72,
                                        ): (
                                            NotNan(
                                                250.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            73,
                                        ): (
                                            NotNan(
                                                250.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[align_y] ",
                                        ),
                                        Variable(
                                            114,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-e1LKf2dv\"[width]",
                                        ),
                                        Variable(
                                            115,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-e1LKf2dv\"[height]",
                                        ),
                                        Variable(
                                            116,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-e1LKf2dv\"[top]",
                                        ),
                                        Variable(
                                            117,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-e1LKf2dv\"[left]",
                                        ),
                                        Variable(
                                            118,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-e1LKf2dv\"[bottom]",
                                        ),
                                        Variable(
                                            119,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-e1LKf2dv\"[right]",
                                        ),
                                        Variable(
                                            127,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-fPY-hr04|CLICK\"[width]",
                                        ),
                                        Variable(
                                            128,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-fPY-hr04|CLICK\"[height]",
                                        ),
                                        Variable(
                                            129,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-fPY-hr04|CLICK\"[top]",
                                        ),
                                        Variable(
                                            130,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-fPY-hr04|CLICK\"[left]",
                                        ),
                                        Variable(
                                            131,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-fPY-hr04|CLICK\"[bottom]",
                                        ),
                                        Variable(
                                            132,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-fPY-hr04|CLICK\"[right]",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            30.0,
                                        ),
                                        Some(
                                            30.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,250,250,0,1);\n width: 30px;\nheight: 30px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {
                                            TypeName(
                                                "CssFill",
                                            ): StateAnchor(
                                                Rgba(
                                                    1.0,
                                                    1.0,
                                                    1.0,
                                                    1.0,
                                                ),
                                            ),
                                        },
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                250.0,
                                                250.0,
                                                0.0,
                                            ],
                                            30.0,
                                            30.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            250.0,
                                                        ),
                                                        y0: NotNan(
                                                            250.0,
                                                        ),
                                                        x1: NotNan(
                                                            250.0,
                                                        ),
                                                        y1: NotNan(
                                                            250.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        250.0,
                                                    ),
                                                    y0: NotNan(
                                                        250.0,
                                                    ),
                                                    x1: NotNan(
                                                        250.0,
                                                    ),
                                                    y1: NotNan(
                                                        250.0,
                                                    ),
                                                },
                                            },
                                        ),
                                    ),
                                },
                                opt_p_calculated: Some(
                                    LayoutCalculated {
                                        size_constraints: StateAnchor(
                                            [
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -0.9,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -0.9,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        41,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        40,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        40,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        41,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                            ],
                                        ),
                                        cassowary_inherited_generals_sa: StateAnchor(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "align_x": Variable(
                                                        46,
                                                    ),
                                                    "align_y": Variable(
                                                        47,
                                                    ),
                                                    "align_z": Variable(
                                                        48,
                                                    ),
                                                    "baseline": Variable(
                                                        22,
                                                    ),
                                                    "bottom": Variable(
                                                        40,
                                                    ),
                                                    "height": Variable(
                                                        37,
                                                    ),
                                                    "hgap": Variable(
                                                        1,
                                                    ),
                                                    "left": Variable(
                                                        39,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        3,
                                                    ),
                                                    "origin_x": Variable(
                                                        43,
                                                    ),
                                                    "origin_y": Variable(
                                                        44,
                                                    ),
                                                    "origin_z": Variable(
                                                        45,
                                                    ),
                                                    "right": Variable(
                                                        41,
                                                    ),
                                                    "top": Variable(
                                                        38,
                                                    ),
                                                    "vgap": Variable(
                                                        20,
                                                    ),
                                                    "width": Variable(
                                                        36,
                                                    ),
                                                    "z": Variable(
                                                        42,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        1,
                                                    ): 120.0,
                                                    Variable(
                                                        3,
                                                    ): 28.0,
                                                    Variable(
                                                        18,
                                                    ): 10.0,
                                                    Variable(
                                                        20,
                                                    ): 10.0,
                                                    Variable(
                                                        22,
                                                    ): 16.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "baseline": Variable(
                                                        21,
                                                    ),
                                                    "hgap": Variable(
                                                        17,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        2,
                                                    ),
                                                    "vgap": Variable(
                                                        19,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        0,
                                                    ): 120.0,
                                                    Variable(
                                                        2,
                                                    ): 28.0,
                                                    Variable(
                                                        17,
                                                    ): 10.0,
                                                    Variable(
                                                        19,
                                                    ): 10.0,
                                                    Variable(
                                                        21,
                                                    ): 16.0,
                                                },
                                                parent: Some(
                                                    CassowaryGeneralMap {
                                                        map: {
                                                            "align_x": Variable(
                                                                14,
                                                            ),
                                                            "align_y": Variable(
                                                                15,
                                                            ),
                                                            "align_z": Variable(
                                                                16,
                                                            ),
                                                            "baseline": Variable(
                                                                22,
                                                            ),
                                                            "bottom": Variable(
                                                                8,
                                                            ),
                                                            "height": Variable(
                                                                5,
                                                            ),
                                                            "hgap": Variable(
                                                                18,
                                                            ),
                                                            "left": Variable(
                                                                7,
                                                            ),
                                                            "origin_x": Variable(
                                                                11,
                                                            ),
                                                            "origin_y": Variable(
                                                                12,
                                                            ),
                                                            "origin_z": Variable(
                                                                13,
                                                            ),
                                                            "right": Variable(
                                                                9,
                                                            ),
                                                            "top": Variable(
                                                                6,
                                                            ),
                                                            "vgap": Variable(
                                                                20,
                                                            ),
                                                            "width": Variable(
                                                                4,
                                                            ),
                                                            "z": Variable(
                                                                10,
                                                            ),
                                                        },
                                                        v_v_suggest: {
                                                            Variable(
                                                                18,
                                                            ): 10.0,
                                                            Variable(
                                                                20,
                                                            ): 10.0,
                                                            Variable(
                                                                22,
                                                            ): 16.0,
                                                        },
                                                        virtual_constraints: {},
                                                        top_virtual_constraints: {},
                                                        top_map: {
                                                            "baseline": Variable(
                                                                21,
                                                            ),
                                                            "hgap": Variable(
                                                                17,
                                                            ),
                                                            "vgap": Variable(
                                                                19,
                                                            ),
                                                        },
                                                        top_v_v_suggest: {
                                                            Variable(
                                                                17,
                                                            ): 10.0,
                                                            Variable(
                                                                19,
                                                            ): 10.0,
                                                            Variable(
                                                                21,
                                                            ): 16.0,
                                                        },
                                                        parent: None,
                                                    },
                                                ),
                                            },
                                        ),
                                        cass_or_calc_size: StateAnchor(
                                            [
                                                [
                                                    540.0,
                                                    540.0,
                                                ],
                                            ],
                                        ),
                                        origin: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        align: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        translation: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        coordinates_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        cass_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        matrix: StateAnchor(
                                            Mat4(
                                                [
                                                    [
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                    ],
                                                ],
                                            ),
                                        ),
                                        loc_styles: StateAnchor(
                                            Style {
                                                media_rules: {},
                                                rules: [
                                                    Rule {
                                                        value: StringValue(
                                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                        ),
                                                    },
                                                ],
                                                updated_at: [
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                                ],
                                                pseudo: None,
                                                media: None,
                                                name: "",
                                                keyframes: Keyframes {
                                                    frames: [],
                                                },
                                                combinator: None,
                                                pre_combinators: [],
                                            },
                                        ),
                                        world: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
                layout: Layout {
                    w: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    h: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    z: StateVar(
                        StateAnchor(
                            0,
                        ),
                    ),
                    origin_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    origin_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    origin_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    cassowary_constants: StateVar(
                        StateAnchor(
                            [],
                        ),
                    ),
                    cassowary_selectors: StateVar(
                        [],
                    ),
                    cassowary_generals: StateVar(
                        CassowaryGeneralMap {
                            map: {},
                            v_v_suggest: {},
                            virtual_constraints: {},
                            top_virtual_constraints: {},
                            top_map: {},
                            top_v_v_suggest: {},
                            parent: None,
                        },
                    ),
                },
                styles: StateVar(
                    {},
                ),
                path_styles: StateVar(
                    {},
                ),
                path_layouts: StateVar(
                    {},
                ),
                other_css_styles: StateVar(
                    Style {
                        media_rules: {},
                        rules: [],
                        updated_at: [
                            "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:942:45",
                        ],
                        pseudo: None,
                        media: None,
                        name: "",
                        keyframes: Keyframes {
                            frames: [],
                        },
                        combinator: None,
                        pre_combinators: [],
                    },
                ),
                edge_nodes: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04|CLICK")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {},
                                                v_v_suggest: {},
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {},
                                                top_v_v_suggest: {},
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    132,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    130,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    127,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    131,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    129,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    128,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    131,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    129,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    132,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    130,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    127,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    128,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    129,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    130,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    137,
                                                ),
                                                "align_y": Variable(
                                                    138,
                                                ),
                                                "align_z": Variable(
                                                    139,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    131,
                                                ),
                                                "height": Variable(
                                                    128,
                                                ),
                                                "hgap": Variable(
                                                    1,
                                                ),
                                                "left": Variable(
                                                    130,
                                                ),
                                                "my_other_gap": Variable(
                                                    3,
                                                ),
                                                "origin_x": Variable(
                                                    134,
                                                ),
                                                "origin_y": Variable(
                                                    135,
                                                ),
                                                "origin_z": Variable(
                                                    136,
                                                ),
                                                "right": Variable(
                                                    132,
                                                ),
                                                "top": Variable(
                                                    129,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    127,
                                                ),
                                                "z": Variable(
                                                    133,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    1,
                                                ): 120.0,
                                                Variable(
                                                    3,
                                                ): 28.0,
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "my_other_gap": Variable(
                                                    2,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    0,
                                                ): 120.0,
                                                Variable(
                                                    2,
                                                ): 28.0,
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: Some(
                                                CassowaryGeneralMap {
                                                    map: {
                                                        "align_x": Variable(
                                                            72,
                                                        ),
                                                        "align_y": Variable(
                                                            73,
                                                        ),
                                                        "align_z": Variable(
                                                            74,
                                                        ),
                                                        "baseline": Variable(
                                                            22,
                                                        ),
                                                        "bottom": Variable(
                                                            66,
                                                        ),
                                                        "height": Variable(
                                                            63,
                                                        ),
                                                        "hgap": Variable(
                                                            1,
                                                        ),
                                                        "left": Variable(
                                                            65,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            3,
                                                        ),
                                                        "origin_x": Variable(
                                                            69,
                                                        ),
                                                        "origin_y": Variable(
                                                            70,
                                                        ),
                                                        "origin_z": Variable(
                                                            71,
                                                        ),
                                                        "right": Variable(
                                                            67,
                                                        ),
                                                        "top": Variable(
                                                            64,
                                                        ),
                                                        "vgap": Variable(
                                                            20,
                                                        ),
                                                        "width": Variable(
                                                            62,
                                                        ),
                                                        "z": Variable(
                                                            68,
                                                        ),
                                                    },
                                                    v_v_suggest: {
                                                        Variable(
                                                            1,
                                                        ): 120.0,
                                                        Variable(
                                                            3,
                                                        ): 28.0,
                                                        Variable(
                                                            18,
                                                        ): 10.0,
                                                        Variable(
                                                            20,
                                                        ): 10.0,
                                                        Variable(
                                                            22,
                                                        ): 16.0,
                                                    },
                                                    virtual_constraints: {},
                                                    top_virtual_constraints: {},
                                                    top_map: {
                                                        "baseline": Variable(
                                                            21,
                                                        ),
                                                        "hgap": Variable(
                                                            17,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            2,
                                                        ),
                                                        "vgap": Variable(
                                                            19,
                                                        ),
                                                    },
                                                    top_v_v_suggest: {
                                                        Variable(
                                                            0,
                                                        ): 120.0,
                                                        Variable(
                                                            2,
                                                        ): 28.0,
                                                        Variable(
                                                            17,
                                                        ): 10.0,
                                                        Variable(
                                                            19,
                                                        ): 10.0,
                                                        Variable(
                                                            21,
                                                        ): 16.0,
                                                    },
                                                    parent: Some(
                                                        CassowaryGeneralMap {
                                                            map: {
                                                                "align_x": Variable(
                                                                    46,
                                                                ),
                                                                "align_y": Variable(
                                                                    47,
                                                                ),
                                                                "align_z": Variable(
                                                                    48,
                                                                ),
                                                                "baseline": Variable(
                                                                    22,
                                                                ),
                                                                "bottom": Variable(
                                                                    40,
                                                                ),
                                                                "height": Variable(
                                                                    37,
                                                                ),
                                                                "hgap": Variable(
                                                                    1,
                                                                ),
                                                                "left": Variable(
                                                                    39,
                                                                ),
                                                                "my_other_gap": Variable(
                                                                    3,
                                                                ),
                                                                "origin_x": Variable(
                                                                    43,
                                                                ),
                                                                "origin_y": Variable(
                                                                    44,
                                                                ),
                                                                "origin_z": Variable(
                                                                    45,
                                                                ),
                                                                "right": Variable(
                                                                    41,
                                                                ),
                                                                "top": Variable(
                                                                    38,
                                                                ),
                                                                "vgap": Variable(
                                                                    20,
                                                                ),
                                                                "width": Variable(
                                                                    36,
                                                                ),
                                                                "z": Variable(
                                                                    42,
                                                                ),
                                                            },
                                                            v_v_suggest: {
                                                                Variable(
                                                                    1,
                                                                ): 120.0,
                                                                Variable(
                                                                    3,
                                                                ): 28.0,
                                                                Variable(
                                                                    18,
                                                                ): 10.0,
                                                                Variable(
                                                                    20,
                                                                ): 10.0,
                                                                Variable(
                                                                    22,
                                                                ): 16.0,
                                                            },
                                                            virtual_constraints: {},
                                                            top_virtual_constraints: {},
                                                            top_map: {
                                                                "baseline": Variable(
                                                                    21,
                                                                ),
                                                                "hgap": Variable(
                                                                    17,
                                                                ),
                                                                "my_other_gap": Variable(
                                                                    2,
                                                                ),
                                                                "vgap": Variable(
                                                                    19,
                                                                ),
                                                            },
                                                            top_v_v_suggest: {
                                                                Variable(
                                                                    0,
                                                                ): 120.0,
                                                                Variable(
                                                                    2,
                                                                ): 28.0,
                                                                Variable(
                                                                    17,
                                                                ): 10.0,
                                                                Variable(
                                                                    19,
                                                                ): 10.0,
                                                                Variable(
                                                                    21,
                                                                ): 16.0,
                                                            },
                                                            parent: Some(
                                                                CassowaryGeneralMap {
                                                                    map: {
                                                                        "align_x": Variable(
                                                                            14,
                                                                        ),
                                                                        "align_y": Variable(
                                                                            15,
                                                                        ),
                                                                        "align_z": Variable(
                                                                            16,
                                                                        ),
                                                                        "baseline": Variable(
                                                                            22,
                                                                        ),
                                                                        "bottom": Variable(
                                                                            8,
                                                                        ),
                                                                        "height": Variable(
                                                                            5,
                                                                        ),
                                                                        "hgap": Variable(
                                                                            18,
                                                                        ),
                                                                        "left": Variable(
                                                                            7,
                                                                        ),
                                                                        "origin_x": Variable(
                                                                            11,
                                                                        ),
                                                                        "origin_y": Variable(
                                                                            12,
                                                                        ),
                                                                        "origin_z": Variable(
                                                                            13,
                                                                        ),
                                                                        "right": Variable(
                                                                            9,
                                                                        ),
                                                                        "top": Variable(
                                                                            6,
                                                                        ),
                                                                        "vgap": Variable(
                                                                            20,
                                                                        ),
                                                                        "width": Variable(
                                                                            4,
                                                                        ),
                                                                        "z": Variable(
                                                                            10,
                                                                        ),
                                                                    },
                                                                    v_v_suggest: {
                                                                        Variable(
                                                                            18,
                                                                        ): 10.0,
                                                                        Variable(
                                                                            20,
                                                                        ): 10.0,
                                                                        Variable(
                                                                            22,
                                                                        ): 16.0,
                                                                    },
                                                                    virtual_constraints: {},
                                                                    top_virtual_constraints: {},
                                                                    top_map: {
                                                                        "baseline": Variable(
                                                                            21,
                                                                        ),
                                                                        "hgap": Variable(
                                                                            17,
                                                                        ),
                                                                        "vgap": Variable(
                                                                            19,
                                                                        ),
                                                                    },
                                                                    top_v_v_suggest: {
                                                                        Variable(
                                                                            17,
                                                                        ): 10.0,
                                                                        Variable(
                                                                            19,
                                                                        ): 10.0,
                                                                        Variable(
                                                                            21,
                                                                        ): 16.0,
                                                                    },
                                                                    parent: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                0.0,
                                                0.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            137,
                                        ),
                                        "align_y": Variable(
                                            138,
                                        ),
                                        "align_z": Variable(
                                            139,
                                        ),
                                        "bottom": Variable(
                                            131,
                                        ),
                                        "height": Variable(
                                            128,
                                        ),
                                        "left": Variable(
                                            130,
                                        ),
                                        "origin_x": Variable(
                                            134,
                                        ),
                                        "origin_y": Variable(
                                            135,
                                        ),
                                        "origin_z": Variable(
                                            136,
                                        ),
                                        "right": Variable(
                                            132,
                                        ),
                                        "top": Variable(
                                            129,
                                        ),
                                        "width": Variable(
                                            127,
                                        ),
                                        "z": Variable(
                                            133,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            127,
                                        ): "width",
                                        Variable(
                                            128,
                                        ): "height",
                                        Variable(
                                            129,
                                        ): "top",
                                        Variable(
                                            130,
                                        ): "left",
                                        Variable(
                                            131,
                                        ): "bottom",
                                        Variable(
                                            132,
                                        ): "right",
                                        Variable(
                                            133,
                                        ): "z",
                                        Variable(
                                            134,
                                        ): "origin_x",
                                        Variable(
                                            135,
                                        ): "origin_y",
                                        Variable(
                                            136,
                                        ): "origin_z",
                                        Variable(
                                            137,
                                        ): "align_x",
                                        Variable(
                                            138,
                                        ): "align_y",
                                        Variable(
                                            139,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {},
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            0,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            1,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            2,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            3,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            127,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04|CLICK\"))))])[width] ",
                                        ),
                                        Variable(
                                            128,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04|CLICK\"))))])[height] ",
                                        ),
                                        Variable(
                                            129,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04|CLICK\"))))])[top] ",
                                        ),
                                        Variable(
                                            130,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04|CLICK\"))))])[left] ",
                                        ),
                                        Variable(
                                            131,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04|CLICK\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            132,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04|CLICK\"))))])[right] ",
                                        ),
                                        Variable(
                                            134,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04|CLICK\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            135,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04|CLICK\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            137,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04|CLICK\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            138,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04|CLICK\"))))])[align_y] ",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            -0.0,
                                        ),
                                        Some(
                                            -0.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);\n width: -0px;\nheight: -0px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {},
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                            -0.0,
                                            -0.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        None,
                                    ),
                                },
                                opt_p_calculated: Some(
                                    LayoutCalculated {
                                        size_constraints: StateAnchor(
                                            [
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        62,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -30.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        63,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -30.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        67,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        65,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        62,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        66,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        64,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        63,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        66,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        64,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        67,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        65,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        62,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        63,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        64,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        65,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                            ],
                                        ),
                                        cassowary_inherited_generals_sa: StateAnchor(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "align_x": Variable(
                                                        72,
                                                    ),
                                                    "align_y": Variable(
                                                        73,
                                                    ),
                                                    "align_z": Variable(
                                                        74,
                                                    ),
                                                    "baseline": Variable(
                                                        22,
                                                    ),
                                                    "bottom": Variable(
                                                        66,
                                                    ),
                                                    "height": Variable(
                                                        63,
                                                    ),
                                                    "hgap": Variable(
                                                        1,
                                                    ),
                                                    "left": Variable(
                                                        65,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        3,
                                                    ),
                                                    "origin_x": Variable(
                                                        69,
                                                    ),
                                                    "origin_y": Variable(
                                                        70,
                                                    ),
                                                    "origin_z": Variable(
                                                        71,
                                                    ),
                                                    "right": Variable(
                                                        67,
                                                    ),
                                                    "top": Variable(
                                                        64,
                                                    ),
                                                    "vgap": Variable(
                                                        20,
                                                    ),
                                                    "width": Variable(
                                                        62,
                                                    ),
                                                    "z": Variable(
                                                        68,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        1,
                                                    ): 120.0,
                                                    Variable(
                                                        3,
                                                    ): 28.0,
                                                    Variable(
                                                        18,
                                                    ): 10.0,
                                                    Variable(
                                                        20,
                                                    ): 10.0,
                                                    Variable(
                                                        22,
                                                    ): 16.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "baseline": Variable(
                                                        21,
                                                    ),
                                                    "hgap": Variable(
                                                        17,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        2,
                                                    ),
                                                    "vgap": Variable(
                                                        19,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        0,
                                                    ): 120.0,
                                                    Variable(
                                                        2,
                                                    ): 28.0,
                                                    Variable(
                                                        17,
                                                    ): 10.0,
                                                    Variable(
                                                        19,
                                                    ): 10.0,
                                                    Variable(
                                                        21,
                                                    ): 16.0,
                                                },
                                                parent: Some(
                                                    CassowaryGeneralMap {
                                                        map: {
                                                            "align_x": Variable(
                                                                46,
                                                            ),
                                                            "align_y": Variable(
                                                                47,
                                                            ),
                                                            "align_z": Variable(
                                                                48,
                                                            ),
                                                            "baseline": Variable(
                                                                22,
                                                            ),
                                                            "bottom": Variable(
                                                                40,
                                                            ),
                                                            "height": Variable(
                                                                37,
                                                            ),
                                                            "hgap": Variable(
                                                                1,
                                                            ),
                                                            "left": Variable(
                                                                39,
                                                            ),
                                                            "my_other_gap": Variable(
                                                                3,
                                                            ),
                                                            "origin_x": Variable(
                                                                43,
                                                            ),
                                                            "origin_y": Variable(
                                                                44,
                                                            ),
                                                            "origin_z": Variable(
                                                                45,
                                                            ),
                                                            "right": Variable(
                                                                41,
                                                            ),
                                                            "top": Variable(
                                                                38,
                                                            ),
                                                            "vgap": Variable(
                                                                20,
                                                            ),
                                                            "width": Variable(
                                                                36,
                                                            ),
                                                            "z": Variable(
                                                                42,
                                                            ),
                                                        },
                                                        v_v_suggest: {
                                                            Variable(
                                                                1,
                                                            ): 120.0,
                                                            Variable(
                                                                3,
                                                            ): 28.0,
                                                            Variable(
                                                                18,
                                                            ): 10.0,
                                                            Variable(
                                                                20,
                                                            ): 10.0,
                                                            Variable(
                                                                22,
                                                            ): 16.0,
                                                        },
                                                        virtual_constraints: {},
                                                        top_virtual_constraints: {},
                                                        top_map: {
                                                            "baseline": Variable(
                                                                21,
                                                            ),
                                                            "hgap": Variable(
                                                                17,
                                                            ),
                                                            "my_other_gap": Variable(
                                                                2,
                                                            ),
                                                            "vgap": Variable(
                                                                19,
                                                            ),
                                                        },
                                                        top_v_v_suggest: {
                                                            Variable(
                                                                0,
                                                            ): 120.0,
                                                            Variable(
                                                                2,
                                                            ): 28.0,
                                                            Variable(
                                                                17,
                                                            ): 10.0,
                                                            Variable(
                                                                19,
                                                            ): 10.0,
                                                            Variable(
                                                                21,
                                                            ): 16.0,
                                                        },
                                                        parent: Some(
                                                            CassowaryGeneralMap {
                                                                map: {
                                                                    "align_x": Variable(
                                                                        14,
                                                                    ),
                                                                    "align_y": Variable(
                                                                        15,
                                                                    ),
                                                                    "align_z": Variable(
                                                                        16,
                                                                    ),
                                                                    "baseline": Variable(
                                                                        22,
                                                                    ),
                                                                    "bottom": Variable(
                                                                        8,
                                                                    ),
                                                                    "height": Variable(
                                                                        5,
                                                                    ),
                                                                    "hgap": Variable(
                                                                        18,
                                                                    ),
                                                                    "left": Variable(
                                                                        7,
                                                                    ),
                                                                    "origin_x": Variable(
                                                                        11,
                                                                    ),
                                                                    "origin_y": Variable(
                                                                        12,
                                                                    ),
                                                                    "origin_z": Variable(
                                                                        13,
                                                                    ),
                                                                    "right": Variable(
                                                                        9,
                                                                    ),
                                                                    "top": Variable(
                                                                        6,
                                                                    ),
                                                                    "vgap": Variable(
                                                                        20,
                                                                    ),
                                                                    "width": Variable(
                                                                        4,
                                                                    ),
                                                                    "z": Variable(
                                                                        10,
                                                                    ),
                                                                },
                                                                v_v_suggest: {
                                                                    Variable(
                                                                        18,
                                                                    ): 10.0,
                                                                    Variable(
                                                                        20,
                                                                    ): 10.0,
                                                                    Variable(
                                                                        22,
                                                                    ): 16.0,
                                                                },
                                                                virtual_constraints: {},
                                                                top_virtual_constraints: {},
                                                                top_map: {
                                                                    "baseline": Variable(
                                                                        21,
                                                                    ),
                                                                    "hgap": Variable(
                                                                        17,
                                                                    ),
                                                                    "vgap": Variable(
                                                                        19,
                                                                    ),
                                                                },
                                                                top_v_v_suggest: {
                                                                    Variable(
                                                                        17,
                                                                    ): 10.0,
                                                                    Variable(
                                                                        19,
                                                                    ): 10.0,
                                                                    Variable(
                                                                        21,
                                                                    ): 16.0,
                                                                },
                                                                parent: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        cass_or_calc_size: StateAnchor(
                                            [
                                                [
                                                    30.0,
                                                    30.0,
                                                ],
                                            ],
                                        ),
                                        origin: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        align: StateAnchor(
                                            [
                                                250.0,
                                                250.0,
                                                0.0,
                                            ],
                                        ),
                                        translation: StateAnchor(
                                            [
                                                250.0,
                                                250.0,
                                                0.0,
                                            ],
                                        ),
                                        coordinates_trans: StateAnchor(
                                            [
                                                250.0,
                                                250.0,
                                                0.0,
                                            ],
                                        ),
                                        cass_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        matrix: StateAnchor(
                                            Mat4(
                                                [
                                                    [
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        250.0,
                                                        250.0,
                                                        0.0,
                                                        1.0,
                                                    ],
                                                ],
                                            ),
                                        ),
                                        loc_styles: StateAnchor(
                                            Style {
                                                media_rules: {},
                                                rules: [
                                                    Rule {
                                                        value: StringValue(
                                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,250,250,0,1)",
                                                        ),
                                                    },
                                                ],
                                                updated_at: [
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                                ],
                                                pseudo: None,
                                                media: None,
                                                name: "",
                                                keyframes: Keyframes {
                                                    frames: [],
                                                },
                                                combinator: None,
                                                pre_combinators: [],
                                            },
                                        ),
                                        world: StateAnchor(
                                            [
                                                250.0,
                                                250.0,
                                                0.0,
                                            ],
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            source_nix: StateVar(
                Some(
                    NodeIndex("GEl-fPY-hr04"),
                ),
            ),
            target_nix: StateVar(
                Some(
                    NodeIndex("GEl-fPY-hr04|CLICK"),
                ),
            ),
        },
        EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))): Edge {
            item: EmgEdgeItem {
                id: StateVar(
                    StateAnchor(
                        EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))),
                    ),
                ),
                paths: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    90.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    90.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [
                                                    CCSS {
                                                        svv_op_svvs: CCSSSvvOpSvvExpr {
                                                            svv: ScopeViewVariable {
                                                                scope: Some(
                                                                    Local,
                                                                ),
                                                                view: None,
                                                                variable: Some(
                                                                    PredVariable(
                                                                        "left",
                                                                    ),
                                                                ),
                                                            },
                                                            op_exprs: [
                                                                CCSSOpSvv {
                                                                    op: Add,
                                                                    svv: ScopeViewVariable {
                                                                        scope: None,
                                                                        view: None,
                                                                        variable: Some(
                                                                            PredVariable(
                                                                                "hgap",
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        eq_exprs: [
                                                            CCSSEqExpression {
                                                                eq: Eq,
                                                                expr: CCSSSvvOpSvvExpr {
                                                                    svv: ScopeViewVariable {
                                                                        scope: None,
                                                                        view: Some(
                                                                            Id(
                                                                                "a2",
                                                                            ),
                                                                        ),
                                                                        variable: Some(
                                                                            PredVariable(
                                                                                "left",
                                                                            ),
                                                                        ),
                                                                    },
                                                                    op_exprs: [],
                                                                },
                                                            },
                                                        ],
                                                        opt_sw: None,
                                                    },
                                                    CCSS {
                                                        svv_op_svvs: CCSSSvvOpSvvExpr {
                                                            svv: ScopeViewVariable {
                                                                scope: None,
                                                                view: Some(
                                                                    Id(
                                                                        "a2",
                                                                    ),
                                                                ),
                                                                variable: Some(
                                                                    PredVariable(
                                                                        "right",
                                                                    ),
                                                                ),
                                                            },
                                                            op_exprs: [
                                                                CCSSOpSvv {
                                                                    op: Add,
                                                                    svv: ScopeViewVariable {
                                                                        scope: None,
                                                                        view: None,
                                                                        variable: Some(
                                                                            PredVariable(
                                                                                "hgap",
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        eq_exprs: [
                                                            CCSSEqExpression {
                                                                eq: Eq,
                                                                expr: CCSSSvvOpSvvExpr {
                                                                    svv: ScopeViewVariable {
                                                                        scope: Some(
                                                                            Local,
                                                                        ),
                                                                        view: None,
                                                                        variable: Some(
                                                                            PredVariable(
                                                                                "right",
                                                                            ),
                                                                        ),
                                                                    },
                                                                    op_exprs: [],
                                                                },
                                                            },
                                                        ],
                                                        opt_sw: None,
                                                    },
                                                ],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [
                                                ScopeViewVariable {
                                                    scope: None,
                                                    view: Some(
                                                        Id(
                                                            "a2",
                                                        ),
                                                    ),
                                                    variable: None,
                                                },
                                            ],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "hgap": Variable(
                                                        1,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        3,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        1,
                                                    ): 120.0,
                                                    Variable(
                                                        3,
                                                    ): 28.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "hgap": Variable(
                                                        0,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        2,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        0,
                                                    ): 120.0,
                                                    Variable(
                                                        2,
                                                    ): 28.0,
                                                },
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    36,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    4,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -0.9,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    37,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    5,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -0.9,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    41,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    39,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    36,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    40,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    38,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    37,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    40,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    38,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    41,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    39,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    36,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    37,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    38,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    39,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    46,
                                                ),
                                                "align_y": Variable(
                                                    47,
                                                ),
                                                "align_z": Variable(
                                                    48,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    40,
                                                ),
                                                "height": Variable(
                                                    37,
                                                ),
                                                "hgap": Variable(
                                                    1,
                                                ),
                                                "left": Variable(
                                                    39,
                                                ),
                                                "my_other_gap": Variable(
                                                    3,
                                                ),
                                                "origin_x": Variable(
                                                    43,
                                                ),
                                                "origin_y": Variable(
                                                    44,
                                                ),
                                                "origin_z": Variable(
                                                    45,
                                                ),
                                                "right": Variable(
                                                    41,
                                                ),
                                                "top": Variable(
                                                    38,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    36,
                                                ),
                                                "z": Variable(
                                                    42,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    1,
                                                ): 120.0,
                                                Variable(
                                                    3,
                                                ): 28.0,
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "my_other_gap": Variable(
                                                    2,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    0,
                                                ): 120.0,
                                                Variable(
                                                    2,
                                                ): 28.0,
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: Some(
                                                CassowaryGeneralMap {
                                                    map: {
                                                        "align_x": Variable(
                                                            14,
                                                        ),
                                                        "align_y": Variable(
                                                            15,
                                                        ),
                                                        "align_z": Variable(
                                                            16,
                                                        ),
                                                        "baseline": Variable(
                                                            22,
                                                        ),
                                                        "bottom": Variable(
                                                            8,
                                                        ),
                                                        "height": Variable(
                                                            5,
                                                        ),
                                                        "hgap": Variable(
                                                            18,
                                                        ),
                                                        "left": Variable(
                                                            7,
                                                        ),
                                                        "origin_x": Variable(
                                                            11,
                                                        ),
                                                        "origin_y": Variable(
                                                            12,
                                                        ),
                                                        "origin_z": Variable(
                                                            13,
                                                        ),
                                                        "right": Variable(
                                                            9,
                                                        ),
                                                        "top": Variable(
                                                            6,
                                                        ),
                                                        "vgap": Variable(
                                                            20,
                                                        ),
                                                        "width": Variable(
                                                            4,
                                                        ),
                                                        "z": Variable(
                                                            10,
                                                        ),
                                                    },
                                                    v_v_suggest: {
                                                        Variable(
                                                            18,
                                                        ): 10.0,
                                                        Variable(
                                                            20,
                                                        ): 10.0,
                                                        Variable(
                                                            22,
                                                        ): 16.0,
                                                    },
                                                    virtual_constraints: {},
                                                    top_virtual_constraints: {},
                                                    top_map: {
                                                        "baseline": Variable(
                                                            21,
                                                        ),
                                                        "hgap": Variable(
                                                            17,
                                                        ),
                                                        "vgap": Variable(
                                                            19,
                                                        ),
                                                    },
                                                    top_v_v_suggest: {
                                                        Variable(
                                                            17,
                                                        ): 10.0,
                                                        Variable(
                                                            19,
                                                        ): 10.0,
                                                        Variable(
                                                            21,
                                                        ): 16.0,
                                                    },
                                                    parent: None,
                                                },
                                            ),
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                540.0,
                                                540.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            46,
                                        ),
                                        "align_y": Variable(
                                            47,
                                        ),
                                        "align_z": Variable(
                                            48,
                                        ),
                                        "bottom": Variable(
                                            40,
                                        ),
                                        "height": Variable(
                                            37,
                                        ),
                                        "left": Variable(
                                            39,
                                        ),
                                        "origin_x": Variable(
                                            43,
                                        ),
                                        "origin_y": Variable(
                                            44,
                                        ),
                                        "origin_z": Variable(
                                            45,
                                        ),
                                        "right": Variable(
                                            41,
                                        ),
                                        "top": Variable(
                                            38,
                                        ),
                                        "width": Variable(
                                            36,
                                        ),
                                        "z": Variable(
                                            42,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            36,
                                        ): "width",
                                        Variable(
                                            37,
                                        ): "height",
                                        Variable(
                                            38,
                                        ): "top",
                                        Variable(
                                            39,
                                        ): "left",
                                        Variable(
                                            40,
                                        ): "bottom",
                                        Variable(
                                            41,
                                        ): "right",
                                        Variable(
                                            42,
                                        ): "z",
                                        Variable(
                                            43,
                                        ): "origin_x",
                                        Variable(
                                            44,
                                        ): "origin_y",
                                        Variable(
                                            45,
                                        ): "origin_z",
                                        Variable(
                                            46,
                                        ): "align_x",
                                        Variable(
                                            47,
                                        ): "align_y",
                                        Variable(
                                            48,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {
                                        Variable(
                                            78,
                                        ),
                                        Variable(
                                            80,
                                        ),
                                        Variable(
                                            39,
                                        ),
                                        Variable(
                                            1,
                                        ),
                                        Variable(
                                            41,
                                        ),
                                    },
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            0,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            1,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            2,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            3,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            36,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[width] ",
                                        ),
                                        Variable(
                                            37,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[height] ",
                                        ),
                                        Variable(
                                            38,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[top] ",
                                        ),
                                        Variable(
                                            39,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[left] ",
                                        ),
                                        Variable(
                                            40,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            41,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[right] ",
                                        ),
                                        Variable(
                                            43,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            44,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            46,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            47,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[align_y] ",
                                        ),
                                        Variable(
                                            62,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[width]",
                                        ),
                                        Variable(
                                            63,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[height]",
                                        ),
                                        Variable(
                                            64,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[top]",
                                        ),
                                        Variable(
                                            65,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[left]",
                                        ),
                                        Variable(
                                            66,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[bottom]",
                                        ),
                                        Variable(
                                            67,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[right]",
                                        ),
                                        Variable(
                                            75,
                                        ): (
                                            NotNan(
                                                300.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[width]",
                                        ),
                                        Variable(
                                            76,
                                        ): (
                                            NotNan(
                                                20.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[height]",
                                        ),
                                        Variable(
                                            77,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[top]",
                                        ),
                                        Variable(
                                            78,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[left]",
                                        ),
                                        Variable(
                                            79,
                                        ): (
                                            NotNan(
                                                20.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[bottom]",
                                        ),
                                        Variable(
                                            80,
                                        ): (
                                            NotNan(
                                                420.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[right]",
                                        ),
                                        Variable(
                                            88,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[width]",
                                        ),
                                        Variable(
                                            89,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[height]",
                                        ),
                                        Variable(
                                            90,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[top]",
                                        ),
                                        Variable(
                                            91,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[left]",
                                        ),
                                        Variable(
                                            92,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[bottom]",
                                        ),
                                        Variable(
                                            93,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[right]",
                                        ),
                                        Variable(
                                            101,
                                        ): (
                                            NotNan(
                                                100.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[width]",
                                        ),
                                        Variable(
                                            102,
                                        ): (
                                            NotNan(
                                                40.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[height]",
                                        ),
                                        Variable(
                                            103,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[top]",
                                        ),
                                        Variable(
                                            104,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[left]",
                                        ),
                                        Variable(
                                            105,
                                        ): (
                                            NotNan(
                                                40.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[bottom]",
                                        ),
                                        Variable(
                                            106,
                                        ): (
                                            NotNan(
                                                100.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[right]",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            540.0,
                                        ),
                                        Some(
                                            540.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);\n width: 540px;\nheight: 540px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {
                                            TypeName(
                                                "CssBorderColor",
                                            ): StateAnchor(
                                                Rgba(
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ),
                                            ),
                                            TypeName(
                                                "CssBorderWidth",
                                            ): StateAnchor(
                                                Length(
                                                    Simplex(
                                                        ExactLengthSimplex {
                                                            unit: Px,
                                                            value: NotNan(
                                                                5.0,
                                                            ),
                                                        },
                                                    ),
                                                ),
                                            ),
                                            TypeName(
                                                "CssFill",
                                            ): StateAnchor(
                                                Hsl(
                                                    150.0,
                                                    100.0,
                                                    100.0,
                                                ),
                                            ),
                                        },
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                            540.0,
                                            540.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            120.0,
                                                        ),
                                                        y0: NotNan(
                                                            0.0,
                                                        ),
                                                        x1: NotNan(
                                                            420.0,
                                                        ),
                                                        y1: NotNan(
                                                            20.0,
                                                        ),
                                                    },
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            250.0,
                                                        ),
                                                        y0: NotNan(
                                                            250.0,
                                                        ),
                                                        x1: NotNan(
                                                            280.0,
                                                        ),
                                                        y1: NotNan(
                                                            280.0,
                                                        ),
                                                    },
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            300.0,
                                                        ),
                                                        y0: NotNan(
                                                            300.0,
                                                        ),
                                                        x1: NotNan(
                                                            330.0,
                                                        ),
                                                        y1: NotNan(
                                                            330.0,
                                                        ),
                                                    },
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            400.0,
                                                        ),
                                                        y0: NotNan(
                                                            400.0,
                                                        ),
                                                        x1: NotNan(
                                                            500.0,
                                                        ),
                                                        y1: NotNan(
                                                            440.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        120.0,
                                                    ),
                                                    y0: NotNan(
                                                        0.0,
                                                    ),
                                                    x1: NotNan(
                                                        500.0,
                                                    ),
                                                    y1: NotNan(
                                                        440.0,
                                                    ),
                                                },
                                            },
                                        ),
                                    ),
                                },
                                opt_p_calculated: Some(
                                    LayoutCalculated {
                                        size_constraints: StateAnchor(
                                            [
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -600.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -600.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        8,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        9,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        8,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        9,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                            ],
                                        ),
                                        cassowary_inherited_generals_sa: StateAnchor(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "align_x": Variable(
                                                        14,
                                                    ),
                                                    "align_y": Variable(
                                                        15,
                                                    ),
                                                    "align_z": Variable(
                                                        16,
                                                    ),
                                                    "baseline": Variable(
                                                        22,
                                                    ),
                                                    "bottom": Variable(
                                                        8,
                                                    ),
                                                    "height": Variable(
                                                        5,
                                                    ),
                                                    "hgap": Variable(
                                                        18,
                                                    ),
                                                    "left": Variable(
                                                        7,
                                                    ),
                                                    "origin_x": Variable(
                                                        11,
                                                    ),
                                                    "origin_y": Variable(
                                                        12,
                                                    ),
                                                    "origin_z": Variable(
                                                        13,
                                                    ),
                                                    "right": Variable(
                                                        9,
                                                    ),
                                                    "top": Variable(
                                                        6,
                                                    ),
                                                    "vgap": Variable(
                                                        20,
                                                    ),
                                                    "width": Variable(
                                                        4,
                                                    ),
                                                    "z": Variable(
                                                        10,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        18,
                                                    ): 10.0,
                                                    Variable(
                                                        20,
                                                    ): 10.0,
                                                    Variable(
                                                        22,
                                                    ): 16.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "baseline": Variable(
                                                        21,
                                                    ),
                                                    "hgap": Variable(
                                                        17,
                                                    ),
                                                    "vgap": Variable(
                                                        19,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        17,
                                                    ): 10.0,
                                                    Variable(
                                                        19,
                                                    ): 10.0,
                                                    Variable(
                                                        21,
                                                    ): 16.0,
                                                },
                                                parent: None,
                                            },
                                        ),
                                        cass_or_calc_size: StateAnchor(
                                            [
                                                [
                                                    600.0,
                                                    600.0,
                                                ],
                                            ],
                                        ),
                                        origin: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        align: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        translation: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        coordinates_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        cass_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        matrix: StateAnchor(
                                            Mat4(
                                                [
                                                    [
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                    ],
                                                ],
                                            ),
                                        ),
                                        loc_styles: StateAnchor(
                                            Style {
                                                media_rules: {},
                                                rules: [
                                                    Rule {
                                                        value: Length(
                                                            Simplex(
                                                                ExactLengthSimplex {
                                                                    unit: Px,
                                                                    value: NotNan(
                                                                        600.0,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    Rule {
                                                        value: Length(
                                                            Simplex(
                                                                ExactLengthSimplex {
                                                                    unit: Px,
                                                                    value: NotNan(
                                                                        600.0,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    Rule {
                                                        value: StringValue(
                                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                        ),
                                                    },
                                                ],
                                                updated_at: [
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:13",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:17",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:31",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:45",
                                                ],
                                                pseudo: None,
                                                media: None,
                                                name: "",
                                                keyframes: Keyframes {
                                                    frames: [],
                                                },
                                                combinator: None,
                                                pre_combinators: [],
                                            },
                                        ),
                                        world: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
                layout: Layout {
                    w: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Px,
                                            value: NotNan(
                                                30.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    h: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Px,
                                            value: NotNan(
                                                30.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    z: StateVar(
                        StateAnchor(
                            0,
                        ),
                    ),
                    origin_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Px,
                                            value: NotNan(
                                                0.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    origin_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Px,
                                            value: NotNan(
                                                0.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    origin_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Px,
                                            value: NotNan(
                                                250.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    align_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Px,
                                            value: NotNan(
                                                250.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    align_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    cassowary_constants: StateVar(
                        StateAnchor(
                            [],
                        ),
                    ),
                    cassowary_selectors: StateVar(
                        [],
                    ),
                    cassowary_generals: StateVar(
                        CassowaryGeneralMap {
                            map: {},
                            v_v_suggest: {},
                            virtual_constraints: {},
                            top_virtual_constraints: {},
                            top_map: {},
                            top_v_v_suggest: {},
                            parent: None,
                        },
                    ),
                },
                styles: StateVar(
                    {
                        TypeName(
                            "CssFill",
                        ): StateAnchor(
                            Rgba(
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                            ),
                        ),
                    },
                ),
                path_styles: StateVar(
                    {},
                ),
                path_layouts: StateVar(
                    {},
                ),
                other_css_styles: StateVar(
                    Style {
                        media_rules: {},
                        rules: [],
                        updated_at: [
                            "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:942:45",
                        ],
                        pseudo: None,
                        media: None,
                        name: "",
                        keyframes: Keyframes {
                            frames: [],
                        },
                        combinator: None,
                        pre_combinators: [],
                    },
                ),
                edge_nodes: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("GEl-fPY-hr04")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    30.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    30.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    250.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    250.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {},
                                                v_v_suggest: {},
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {},
                                                top_v_v_suggest: {},
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    62,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            -30.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    63,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            -30.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    67,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    65,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    62,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    66,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    64,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    63,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    66,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    64,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    67,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    65,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    62,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    63,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    64,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    65,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    72,
                                                ),
                                                "align_y": Variable(
                                                    73,
                                                ),
                                                "align_z": Variable(
                                                    74,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    66,
                                                ),
                                                "height": Variable(
                                                    63,
                                                ),
                                                "hgap": Variable(
                                                    1,
                                                ),
                                                "left": Variable(
                                                    65,
                                                ),
                                                "my_other_gap": Variable(
                                                    3,
                                                ),
                                                "origin_x": Variable(
                                                    69,
                                                ),
                                                "origin_y": Variable(
                                                    70,
                                                ),
                                                "origin_z": Variable(
                                                    71,
                                                ),
                                                "right": Variable(
                                                    67,
                                                ),
                                                "top": Variable(
                                                    64,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    62,
                                                ),
                                                "z": Variable(
                                                    68,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    1,
                                                ): 120.0,
                                                Variable(
                                                    3,
                                                ): 28.0,
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "my_other_gap": Variable(
                                                    2,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    0,
                                                ): 120.0,
                                                Variable(
                                                    2,
                                                ): 28.0,
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: Some(
                                                CassowaryGeneralMap {
                                                    map: {
                                                        "align_x": Variable(
                                                            46,
                                                        ),
                                                        "align_y": Variable(
                                                            47,
                                                        ),
                                                        "align_z": Variable(
                                                            48,
                                                        ),
                                                        "baseline": Variable(
                                                            22,
                                                        ),
                                                        "bottom": Variable(
                                                            40,
                                                        ),
                                                        "height": Variable(
                                                            37,
                                                        ),
                                                        "hgap": Variable(
                                                            1,
                                                        ),
                                                        "left": Variable(
                                                            39,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            3,
                                                        ),
                                                        "origin_x": Variable(
                                                            43,
                                                        ),
                                                        "origin_y": Variable(
                                                            44,
                                                        ),
                                                        "origin_z": Variable(
                                                            45,
                                                        ),
                                                        "right": Variable(
                                                            41,
                                                        ),
                                                        "top": Variable(
                                                            38,
                                                        ),
                                                        "vgap": Variable(
                                                            20,
                                                        ),
                                                        "width": Variable(
                                                            36,
                                                        ),
                                                        "z": Variable(
                                                            42,
                                                        ),
                                                    },
                                                    v_v_suggest: {
                                                        Variable(
                                                            1,
                                                        ): 120.0,
                                                        Variable(
                                                            3,
                                                        ): 28.0,
                                                        Variable(
                                                            18,
                                                        ): 10.0,
                                                        Variable(
                                                            20,
                                                        ): 10.0,
                                                        Variable(
                                                            22,
                                                        ): 16.0,
                                                    },
                                                    virtual_constraints: {},
                                                    top_virtual_constraints: {},
                                                    top_map: {
                                                        "baseline": Variable(
                                                            21,
                                                        ),
                                                        "hgap": Variable(
                                                            17,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            2,
                                                        ),
                                                        "vgap": Variable(
                                                            19,
                                                        ),
                                                    },
                                                    top_v_v_suggest: {
                                                        Variable(
                                                            0,
                                                        ): 120.0,
                                                        Variable(
                                                            2,
                                                        ): 28.0,
                                                        Variable(
                                                            17,
                                                        ): 10.0,
                                                        Variable(
                                                            19,
                                                        ): 10.0,
                                                        Variable(
                                                            21,
                                                        ): 16.0,
                                                    },
                                                    parent: Some(
                                                        CassowaryGeneralMap {
                                                            map: {
                                                                "align_x": Variable(
                                                                    14,
                                                                ),
                                                                "align_y": Variable(
                                                                    15,
                                                                ),
                                                                "align_z": Variable(
                                                                    16,
                                                                ),
                                                                "baseline": Variable(
                                                                    22,
                                                                ),
                                                                "bottom": Variable(
                                                                    8,
                                                                ),
                                                                "height": Variable(
                                                                    5,
                                                                ),
                                                                "hgap": Variable(
                                                                    18,
                                                                ),
                                                                "left": Variable(
                                                                    7,
                                                                ),
                                                                "origin_x": Variable(
                                                                    11,
                                                                ),
                                                                "origin_y": Variable(
                                                                    12,
                                                                ),
                                                                "origin_z": Variable(
                                                                    13,
                                                                ),
                                                                "right": Variable(
                                                                    9,
                                                                ),
                                                                "top": Variable(
                                                                    6,
                                                                ),
                                                                "vgap": Variable(
                                                                    20,
                                                                ),
                                                                "width": Variable(
                                                                    4,
                                                                ),
                                                                "z": Variable(
                                                                    10,
                                                                ),
                                                            },
                                                            v_v_suggest: {
                                                                Variable(
                                                                    18,
                                                                ): 10.0,
                                                                Variable(
                                                                    20,
                                                                ): 10.0,
                                                                Variable(
                                                                    22,
                                                                ): 16.0,
                                                            },
                                                            virtual_constraints: {},
                                                            top_virtual_constraints: {},
                                                            top_map: {
                                                                "baseline": Variable(
                                                                    21,
                                                                ),
                                                                "hgap": Variable(
                                                                    17,
                                                                ),
                                                                "vgap": Variable(
                                                                    19,
                                                                ),
                                                            },
                                                            top_v_v_suggest: {
                                                                Variable(
                                                                    17,
                                                                ): 10.0,
                                                                Variable(
                                                                    19,
                                                                ): 10.0,
                                                                Variable(
                                                                    21,
                                                                ): 16.0,
                                                            },
                                                            parent: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                30.0,
                                                30.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    250.0,
                                                    250.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,250,250,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            72,
                                        ),
                                        "align_y": Variable(
                                            73,
                                        ),
                                        "align_z": Variable(
                                            74,
                                        ),
                                        "bottom": Variable(
                                            66,
                                        ),
                                        "height": Variable(
                                            63,
                                        ),
                                        "left": Variable(
                                            65,
                                        ),
                                        "origin_x": Variable(
                                            69,
                                        ),
                                        "origin_y": Variable(
                                            70,
                                        ),
                                        "origin_z": Variable(
                                            71,
                                        ),
                                        "right": Variable(
                                            67,
                                        ),
                                        "top": Variable(
                                            64,
                                        ),
                                        "width": Variable(
                                            62,
                                        ),
                                        "z": Variable(
                                            68,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            62,
                                        ): "width",
                                        Variable(
                                            63,
                                        ): "height",
                                        Variable(
                                            64,
                                        ): "top",
                                        Variable(
                                            65,
                                        ): "left",
                                        Variable(
                                            66,
                                        ): "bottom",
                                        Variable(
                                            67,
                                        ): "right",
                                        Variable(
                                            68,
                                        ): "z",
                                        Variable(
                                            69,
                                        ): "origin_x",
                                        Variable(
                                            70,
                                        ): "origin_y",
                                        Variable(
                                            71,
                                        ): "origin_z",
                                        Variable(
                                            72,
                                        ): "align_x",
                                        Variable(
                                            73,
                                        ): "align_y",
                                        Variable(
                                            74,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {},
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            0,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            1,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            2,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            3,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            62,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[width] ",
                                        ),
                                        Variable(
                                            63,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[height] ",
                                        ),
                                        Variable(
                                            64,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[top] ",
                                        ),
                                        Variable(
                                            65,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[left] ",
                                        ),
                                        Variable(
                                            66,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            67,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[right] ",
                                        ),
                                        Variable(
                                            69,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            70,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            72,
                                        ): (
                                            NotNan(
                                                250.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            73,
                                        ): (
                                            NotNan(
                                                250.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))])[align_y] ",
                                        ),
                                        Variable(
                                            114,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-e1LKf2dv\"[width]",
                                        ),
                                        Variable(
                                            115,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-e1LKf2dv\"[height]",
                                        ),
                                        Variable(
                                            116,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-e1LKf2dv\"[top]",
                                        ),
                                        Variable(
                                            117,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-e1LKf2dv\"[left]",
                                        ),
                                        Variable(
                                            118,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-e1LKf2dv\"[bottom]",
                                        ),
                                        Variable(
                                            119,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-e1LKf2dv\"[right]",
                                        ),
                                        Variable(
                                            127,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-fPY-hr04|CLICK\"[width]",
                                        ),
                                        Variable(
                                            128,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-fPY-hr04|CLICK\"[height]",
                                        ),
                                        Variable(
                                            129,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-fPY-hr04|CLICK\"[top]",
                                        ),
                                        Variable(
                                            130,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-fPY-hr04|CLICK\"[left]",
                                        ),
                                        Variable(
                                            131,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-fPY-hr04|CLICK\"[bottom]",
                                        ),
                                        Variable(
                                            132,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-fPY-hr04\"))))]) |=> #\"GEl-fPY-hr04|CLICK\"[right]",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            30.0,
                                        ),
                                        Some(
                                            30.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,250,250,0,1);\n width: 30px;\nheight: 30px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {
                                            TypeName(
                                                "CssFill",
                                            ): StateAnchor(
                                                Rgba(
                                                    1.0,
                                                    1.0,
                                                    1.0,
                                                    1.0,
                                                ),
                                            ),
                                        },
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                250.0,
                                                250.0,
                                                0.0,
                                            ],
                                            30.0,
                                            30.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            250.0,
                                            250.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            250.0,
                                                        ),
                                                        y0: NotNan(
                                                            250.0,
                                                        ),
                                                        x1: NotNan(
                                                            250.0,
                                                        ),
                                                        y1: NotNan(
                                                            250.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        250.0,
                                                    ),
                                                    y0: NotNan(
                                                        250.0,
                                                    ),
                                                    x1: NotNan(
                                                        250.0,
                                                    ),
                                                    y1: NotNan(
                                                        250.0,
                                                    ),
                                                },
                                            },
                                        ),
                                    ),
                                },
                                opt_p_calculated: Some(
                                    LayoutCalculated {
                                        size_constraints: StateAnchor(
                                            [
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -0.9,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -0.9,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        41,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        40,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        40,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        41,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                            ],
                                        ),
                                        cassowary_inherited_generals_sa: StateAnchor(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "align_x": Variable(
                                                        46,
                                                    ),
                                                    "align_y": Variable(
                                                        47,
                                                    ),
                                                    "align_z": Variable(
                                                        48,
                                                    ),
                                                    "baseline": Variable(
                                                        22,
                                                    ),
                                                    "bottom": Variable(
                                                        40,
                                                    ),
                                                    "height": Variable(
                                                        37,
                                                    ),
                                                    "hgap": Variable(
                                                        1,
                                                    ),
                                                    "left": Variable(
                                                        39,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        3,
                                                    ),
                                                    "origin_x": Variable(
                                                        43,
                                                    ),
                                                    "origin_y": Variable(
                                                        44,
                                                    ),
                                                    "origin_z": Variable(
                                                        45,
                                                    ),
                                                    "right": Variable(
                                                        41,
                                                    ),
                                                    "top": Variable(
                                                        38,
                                                    ),
                                                    "vgap": Variable(
                                                        20,
                                                    ),
                                                    "width": Variable(
                                                        36,
                                                    ),
                                                    "z": Variable(
                                                        42,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        1,
                                                    ): 120.0,
                                                    Variable(
                                                        3,
                                                    ): 28.0,
                                                    Variable(
                                                        18,
                                                    ): 10.0,
                                                    Variable(
                                                        20,
                                                    ): 10.0,
                                                    Variable(
                                                        22,
                                                    ): 16.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "baseline": Variable(
                                                        21,
                                                    ),
                                                    "hgap": Variable(
                                                        17,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        2,
                                                    ),
                                                    "vgap": Variable(
                                                        19,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        0,
                                                    ): 120.0,
                                                    Variable(
                                                        2,
                                                    ): 28.0,
                                                    Variable(
                                                        17,
                                                    ): 10.0,
                                                    Variable(
                                                        19,
                                                    ): 10.0,
                                                    Variable(
                                                        21,
                                                    ): 16.0,
                                                },
                                                parent: Some(
                                                    CassowaryGeneralMap {
                                                        map: {
                                                            "align_x": Variable(
                                                                14,
                                                            ),
                                                            "align_y": Variable(
                                                                15,
                                                            ),
                                                            "align_z": Variable(
                                                                16,
                                                            ),
                                                            "baseline": Variable(
                                                                22,
                                                            ),
                                                            "bottom": Variable(
                                                                8,
                                                            ),
                                                            "height": Variable(
                                                                5,
                                                            ),
                                                            "hgap": Variable(
                                                                18,
                                                            ),
                                                            "left": Variable(
                                                                7,
                                                            ),
                                                            "origin_x": Variable(
                                                                11,
                                                            ),
                                                            "origin_y": Variable(
                                                                12,
                                                            ),
                                                            "origin_z": Variable(
                                                                13,
                                                            ),
                                                            "right": Variable(
                                                                9,
                                                            ),
                                                            "top": Variable(
                                                                6,
                                                            ),
                                                            "vgap": Variable(
                                                                20,
                                                            ),
                                                            "width": Variable(
                                                                4,
                                                            ),
                                                            "z": Variable(
                                                                10,
                                                            ),
                                                        },
                                                        v_v_suggest: {
                                                            Variable(
                                                                18,
                                                            ): 10.0,
                                                            Variable(
                                                                20,
                                                            ): 10.0,
                                                            Variable(
                                                                22,
                                                            ): 16.0,
                                                        },
                                                        virtual_constraints: {},
                                                        top_virtual_constraints: {},
                                                        top_map: {
                                                            "baseline": Variable(
                                                                21,
                                                            ),
                                                            "hgap": Variable(
                                                                17,
                                                            ),
                                                            "vgap": Variable(
                                                                19,
                                                            ),
                                                        },
                                                        top_v_v_suggest: {
                                                            Variable(
                                                                17,
                                                            ): 10.0,
                                                            Variable(
                                                                19,
                                                            ): 10.0,
                                                            Variable(
                                                                21,
                                                            ): 16.0,
                                                        },
                                                        parent: None,
                                                    },
                                                ),
                                            },
                                        ),
                                        cass_or_calc_size: StateAnchor(
                                            [
                                                [
                                                    540.0,
                                                    540.0,
                                                ],
                                            ],
                                        ),
                                        origin: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        align: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        translation: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        coordinates_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        cass_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        matrix: StateAnchor(
                                            Mat4(
                                                [
                                                    [
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                    ],
                                                ],
                                            ),
                                        ),
                                        loc_styles: StateAnchor(
                                            Style {
                                                media_rules: {},
                                                rules: [
                                                    Rule {
                                                        value: StringValue(
                                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                        ),
                                                    },
                                                ],
                                                updated_at: [
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                                ],
                                                pseudo: None,
                                                media: None,
                                                name: "",
                                                keyframes: Keyframes {
                                                    frames: [],
                                                },
                                                combinator: None,
                                                pre_combinators: [],
                                            },
                                        ),
                                        world: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            source_nix: StateVar(
                Some(
                    NodeIndex("a1"),
                ),
            ),
            target_nix: StateVar(
                Some(
                    NodeIndex("GEl-fPY-hr04"),
                ),
            ),
        },
        EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a2")))): Edge {
            item: EmgEdgeItem {
                id: StateVar(
                    StateAnchor(
                        EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a2")))),
                    ),
                ),
                paths: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    90.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    90.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [
                                                    CCSS {
                                                        svv_op_svvs: CCSSSvvOpSvvExpr {
                                                            svv: ScopeViewVariable {
                                                                scope: Some(
                                                                    Local,
                                                                ),
                                                                view: None,
                                                                variable: Some(
                                                                    PredVariable(
                                                                        "left",
                                                                    ),
                                                                ),
                                                            },
                                                            op_exprs: [
                                                                CCSSOpSvv {
                                                                    op: Add,
                                                                    svv: ScopeViewVariable {
                                                                        scope: None,
                                                                        view: None,
                                                                        variable: Some(
                                                                            PredVariable(
                                                                                "hgap",
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        eq_exprs: [
                                                            CCSSEqExpression {
                                                                eq: Eq,
                                                                expr: CCSSSvvOpSvvExpr {
                                                                    svv: ScopeViewVariable {
                                                                        scope: None,
                                                                        view: Some(
                                                                            Id(
                                                                                "a2",
                                                                            ),
                                                                        ),
                                                                        variable: Some(
                                                                            PredVariable(
                                                                                "left",
                                                                            ),
                                                                        ),
                                                                    },
                                                                    op_exprs: [],
                                                                },
                                                            },
                                                        ],
                                                        opt_sw: None,
                                                    },
                                                    CCSS {
                                                        svv_op_svvs: CCSSSvvOpSvvExpr {
                                                            svv: ScopeViewVariable {
                                                                scope: None,
                                                                view: Some(
                                                                    Id(
                                                                        "a2",
                                                                    ),
                                                                ),
                                                                variable: Some(
                                                                    PredVariable(
                                                                        "right",
                                                                    ),
                                                                ),
                                                            },
                                                            op_exprs: [
                                                                CCSSOpSvv {
                                                                    op: Add,
                                                                    svv: ScopeViewVariable {
                                                                        scope: None,
                                                                        view: None,
                                                                        variable: Some(
                                                                            PredVariable(
                                                                                "hgap",
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        eq_exprs: [
                                                            CCSSEqExpression {
                                                                eq: Eq,
                                                                expr: CCSSSvvOpSvvExpr {
                                                                    svv: ScopeViewVariable {
                                                                        scope: Some(
                                                                            Local,
                                                                        ),
                                                                        view: None,
                                                                        variable: Some(
                                                                            PredVariable(
                                                                                "right",
                                                                            ),
                                                                        ),
                                                                    },
                                                                    op_exprs: [],
                                                                },
                                                            },
                                                        ],
                                                        opt_sw: None,
                                                    },
                                                ],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [
                                                ScopeViewVariable {
                                                    scope: None,
                                                    view: Some(
                                                        Id(
                                                            "a2",
                                                        ),
                                                    ),
                                                    variable: None,
                                                },
                                            ],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "hgap": Variable(
                                                        1,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        3,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        1,
                                                    ): 120.0,
                                                    Variable(
                                                        3,
                                                    ): 28.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "hgap": Variable(
                                                        0,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        2,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        0,
                                                    ): 120.0,
                                                    Variable(
                                                        2,
                                                    ): 28.0,
                                                },
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    36,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    4,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -0.9,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    37,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    5,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -0.9,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    41,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    39,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    36,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    40,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    38,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    37,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    40,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    38,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    41,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    39,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    36,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    37,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    38,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    39,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    46,
                                                ),
                                                "align_y": Variable(
                                                    47,
                                                ),
                                                "align_z": Variable(
                                                    48,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    40,
                                                ),
                                                "height": Variable(
                                                    37,
                                                ),
                                                "hgap": Variable(
                                                    1,
                                                ),
                                                "left": Variable(
                                                    39,
                                                ),
                                                "my_other_gap": Variable(
                                                    3,
                                                ),
                                                "origin_x": Variable(
                                                    43,
                                                ),
                                                "origin_y": Variable(
                                                    44,
                                                ),
                                                "origin_z": Variable(
                                                    45,
                                                ),
                                                "right": Variable(
                                                    41,
                                                ),
                                                "top": Variable(
                                                    38,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    36,
                                                ),
                                                "z": Variable(
                                                    42,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    1,
                                                ): 120.0,
                                                Variable(
                                                    3,
                                                ): 28.0,
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "my_other_gap": Variable(
                                                    2,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    0,
                                                ): 120.0,
                                                Variable(
                                                    2,
                                                ): 28.0,
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: Some(
                                                CassowaryGeneralMap {
                                                    map: {
                                                        "align_x": Variable(
                                                            14,
                                                        ),
                                                        "align_y": Variable(
                                                            15,
                                                        ),
                                                        "align_z": Variable(
                                                            16,
                                                        ),
                                                        "baseline": Variable(
                                                            22,
                                                        ),
                                                        "bottom": Variable(
                                                            8,
                                                        ),
                                                        "height": Variable(
                                                            5,
                                                        ),
                                                        "hgap": Variable(
                                                            18,
                                                        ),
                                                        "left": Variable(
                                                            7,
                                                        ),
                                                        "origin_x": Variable(
                                                            11,
                                                        ),
                                                        "origin_y": Variable(
                                                            12,
                                                        ),
                                                        "origin_z": Variable(
                                                            13,
                                                        ),
                                                        "right": Variable(
                                                            9,
                                                        ),
                                                        "top": Variable(
                                                            6,
                                                        ),
                                                        "vgap": Variable(
                                                            20,
                                                        ),
                                                        "width": Variable(
                                                            4,
                                                        ),
                                                        "z": Variable(
                                                            10,
                                                        ),
                                                    },
                                                    v_v_suggest: {
                                                        Variable(
                                                            18,
                                                        ): 10.0,
                                                        Variable(
                                                            20,
                                                        ): 10.0,
                                                        Variable(
                                                            22,
                                                        ): 16.0,
                                                    },
                                                    virtual_constraints: {},
                                                    top_virtual_constraints: {},
                                                    top_map: {
                                                        "baseline": Variable(
                                                            21,
                                                        ),
                                                        "hgap": Variable(
                                                            17,
                                                        ),
                                                        "vgap": Variable(
                                                            19,
                                                        ),
                                                    },
                                                    top_v_v_suggest: {
                                                        Variable(
                                                            17,
                                                        ): 10.0,
                                                        Variable(
                                                            19,
                                                        ): 10.0,
                                                        Variable(
                                                            21,
                                                        ): 16.0,
                                                    },
                                                    parent: None,
                                                },
                                            ),
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                540.0,
                                                540.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            46,
                                        ),
                                        "align_y": Variable(
                                            47,
                                        ),
                                        "align_z": Variable(
                                            48,
                                        ),
                                        "bottom": Variable(
                                            40,
                                        ),
                                        "height": Variable(
                                            37,
                                        ),
                                        "left": Variable(
                                            39,
                                        ),
                                        "origin_x": Variable(
                                            43,
                                        ),
                                        "origin_y": Variable(
                                            44,
                                        ),
                                        "origin_z": Variable(
                                            45,
                                        ),
                                        "right": Variable(
                                            41,
                                        ),
                                        "top": Variable(
                                            38,
                                        ),
                                        "width": Variable(
                                            36,
                                        ),
                                        "z": Variable(
                                            42,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            36,
                                        ): "width",
                                        Variable(
                                            37,
                                        ): "height",
                                        Variable(
                                            38,
                                        ): "top",
                                        Variable(
                                            39,
                                        ): "left",
                                        Variable(
                                            40,
                                        ): "bottom",
                                        Variable(
                                            41,
                                        ): "right",
                                        Variable(
                                            42,
                                        ): "z",
                                        Variable(
                                            43,
                                        ): "origin_x",
                                        Variable(
                                            44,
                                        ): "origin_y",
                                        Variable(
                                            45,
                                        ): "origin_z",
                                        Variable(
                                            46,
                                        ): "align_x",
                                        Variable(
                                            47,
                                        ): "align_y",
                                        Variable(
                                            48,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {
                                        Variable(
                                            78,
                                        ),
                                        Variable(
                                            80,
                                        ),
                                        Variable(
                                            39,
                                        ),
                                        Variable(
                                            1,
                                        ),
                                        Variable(
                                            41,
                                        ),
                                    },
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            0,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            1,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            2,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            3,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            36,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[width] ",
                                        ),
                                        Variable(
                                            37,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[height] ",
                                        ),
                                        Variable(
                                            38,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[top] ",
                                        ),
                                        Variable(
                                            39,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[left] ",
                                        ),
                                        Variable(
                                            40,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            41,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[right] ",
                                        ),
                                        Variable(
                                            43,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            44,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            46,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            47,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[align_y] ",
                                        ),
                                        Variable(
                                            62,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[width]",
                                        ),
                                        Variable(
                                            63,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[height]",
                                        ),
                                        Variable(
                                            64,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[top]",
                                        ),
                                        Variable(
                                            65,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[left]",
                                        ),
                                        Variable(
                                            66,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[bottom]",
                                        ),
                                        Variable(
                                            67,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[right]",
                                        ),
                                        Variable(
                                            75,
                                        ): (
                                            NotNan(
                                                300.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[width]",
                                        ),
                                        Variable(
                                            76,
                                        ): (
                                            NotNan(
                                                20.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[height]",
                                        ),
                                        Variable(
                                            77,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[top]",
                                        ),
                                        Variable(
                                            78,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[left]",
                                        ),
                                        Variable(
                                            79,
                                        ): (
                                            NotNan(
                                                20.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[bottom]",
                                        ),
                                        Variable(
                                            80,
                                        ): (
                                            NotNan(
                                                420.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[right]",
                                        ),
                                        Variable(
                                            88,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[width]",
                                        ),
                                        Variable(
                                            89,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[height]",
                                        ),
                                        Variable(
                                            90,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[top]",
                                        ),
                                        Variable(
                                            91,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[left]",
                                        ),
                                        Variable(
                                            92,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[bottom]",
                                        ),
                                        Variable(
                                            93,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[right]",
                                        ),
                                        Variable(
                                            101,
                                        ): (
                                            NotNan(
                                                100.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[width]",
                                        ),
                                        Variable(
                                            102,
                                        ): (
                                            NotNan(
                                                40.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[height]",
                                        ),
                                        Variable(
                                            103,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[top]",
                                        ),
                                        Variable(
                                            104,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[left]",
                                        ),
                                        Variable(
                                            105,
                                        ): (
                                            NotNan(
                                                40.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[bottom]",
                                        ),
                                        Variable(
                                            106,
                                        ): (
                                            NotNan(
                                                100.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[right]",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            540.0,
                                        ),
                                        Some(
                                            540.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);\n width: 540px;\nheight: 540px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {
                                            TypeName(
                                                "CssBorderColor",
                                            ): StateAnchor(
                                                Rgba(
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ),
                                            ),
                                            TypeName(
                                                "CssBorderWidth",
                                            ): StateAnchor(
                                                Length(
                                                    Simplex(
                                                        ExactLengthSimplex {
                                                            unit: Px,
                                                            value: NotNan(
                                                                5.0,
                                                            ),
                                                        },
                                                    ),
                                                ),
                                            ),
                                            TypeName(
                                                "CssFill",
                                            ): StateAnchor(
                                                Hsl(
                                                    150.0,
                                                    100.0,
                                                    100.0,
                                                ),
                                            ),
                                        },
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                            540.0,
                                            540.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            120.0,
                                                        ),
                                                        y0: NotNan(
                                                            0.0,
                                                        ),
                                                        x1: NotNan(
                                                            420.0,
                                                        ),
                                                        y1: NotNan(
                                                            20.0,
                                                        ),
                                                    },
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            250.0,
                                                        ),
                                                        y0: NotNan(
                                                            250.0,
                                                        ),
                                                        x1: NotNan(
                                                            280.0,
                                                        ),
                                                        y1: NotNan(
                                                            280.0,
                                                        ),
                                                    },
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            300.0,
                                                        ),
                                                        y0: NotNan(
                                                            300.0,
                                                        ),
                                                        x1: NotNan(
                                                            330.0,
                                                        ),
                                                        y1: NotNan(
                                                            330.0,
                                                        ),
                                                    },
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            400.0,
                                                        ),
                                                        y0: NotNan(
                                                            400.0,
                                                        ),
                                                        x1: NotNan(
                                                            500.0,
                                                        ),
                                                        y1: NotNan(
                                                            440.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        120.0,
                                                    ),
                                                    y0: NotNan(
                                                        0.0,
                                                    ),
                                                    x1: NotNan(
                                                        500.0,
                                                    ),
                                                    y1: NotNan(
                                                        440.0,
                                                    ),
                                                },
                                            },
                                        ),
                                    ),
                                },
                                opt_p_calculated: Some(
                                    LayoutCalculated {
                                        size_constraints: StateAnchor(
                                            [
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -600.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -600.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        8,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        9,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        8,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        9,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                            ],
                                        ),
                                        cassowary_inherited_generals_sa: StateAnchor(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "align_x": Variable(
                                                        14,
                                                    ),
                                                    "align_y": Variable(
                                                        15,
                                                    ),
                                                    "align_z": Variable(
                                                        16,
                                                    ),
                                                    "baseline": Variable(
                                                        22,
                                                    ),
                                                    "bottom": Variable(
                                                        8,
                                                    ),
                                                    "height": Variable(
                                                        5,
                                                    ),
                                                    "hgap": Variable(
                                                        18,
                                                    ),
                                                    "left": Variable(
                                                        7,
                                                    ),
                                                    "origin_x": Variable(
                                                        11,
                                                    ),
                                                    "origin_y": Variable(
                                                        12,
                                                    ),
                                                    "origin_z": Variable(
                                                        13,
                                                    ),
                                                    "right": Variable(
                                                        9,
                                                    ),
                                                    "top": Variable(
                                                        6,
                                                    ),
                                                    "vgap": Variable(
                                                        20,
                                                    ),
                                                    "width": Variable(
                                                        4,
                                                    ),
                                                    "z": Variable(
                                                        10,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        18,
                                                    ): 10.0,
                                                    Variable(
                                                        20,
                                                    ): 10.0,
                                                    Variable(
                                                        22,
                                                    ): 16.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "baseline": Variable(
                                                        21,
                                                    ),
                                                    "hgap": Variable(
                                                        17,
                                                    ),
                                                    "vgap": Variable(
                                                        19,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        17,
                                                    ): 10.0,
                                                    Variable(
                                                        19,
                                                    ): 10.0,
                                                    Variable(
                                                        21,
                                                    ): 16.0,
                                                },
                                                parent: None,
                                            },
                                        ),
                                        cass_or_calc_size: StateAnchor(
                                            [
                                                [
                                                    600.0,
                                                    600.0,
                                                ],
                                            ],
                                        ),
                                        origin: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        align: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        translation: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        coordinates_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        cass_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        matrix: StateAnchor(
                                            Mat4(
                                                [
                                                    [
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                    ],
                                                ],
                                            ),
                                        ),
                                        loc_styles: StateAnchor(
                                            Style {
                                                media_rules: {},
                                                rules: [
                                                    Rule {
                                                        value: Length(
                                                            Simplex(
                                                                ExactLengthSimplex {
                                                                    unit: Px,
                                                                    value: NotNan(
                                                                        600.0,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    Rule {
                                                        value: Length(
                                                            Simplex(
                                                                ExactLengthSimplex {
                                                                    unit: Px,
                                                                    value: NotNan(
                                                                        600.0,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    Rule {
                                                        value: StringValue(
                                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                        ),
                                                    },
                                                ],
                                                updated_at: [
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:13",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:17",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:31",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:45",
                                                ],
                                                pseudo: None,
                                                media: None,
                                                name: "",
                                                keyframes: Keyframes {
                                                    frames: [],
                                                },
                                                combinator: None,
                                                pre_combinators: [],
                                            },
                                        ),
                                        world: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
                layout: Layout {
                    w: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    h: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Px,
                                            value: NotNan(
                                                20.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    z: StateVar(
                        StateAnchor(
                            0,
                        ),
                    ),
                    origin_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    origin_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    origin_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    cassowary_constants: StateVar(
                        StateAnchor(
                            [],
                        ),
                    ),
                    cassowary_selectors: StateVar(
                        [],
                    ),
                    cassowary_generals: StateVar(
                        CassowaryGeneralMap {
                            map: {},
                            v_v_suggest: {},
                            virtual_constraints: {},
                            top_virtual_constraints: {},
                            top_map: {},
                            top_v_v_suggest: {},
                            parent: None,
                        },
                    ),
                },
                styles: StateVar(
                    {
                        TypeName(
                            "CssFill",
                        ): StateAnchor(
                            Rgba(
                                1.0,
                                0.5,
                                0.0,
                                1.0,
                            ),
                        ),
                    },
                ),
                path_styles: StateVar(
                    {},
                ),
                path_layouts: StateVar(
                    {},
                ),
                other_css_styles: StateVar(
                    Style {
                        media_rules: {},
                        rules: [],
                        updated_at: [
                            "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:942:45",
                        ],
                        pseudo: None,
                        media: None,
                        name: "",
                        keyframes: Keyframes {
                            frames: [],
                        },
                        combinator: None,
                        pre_combinators: [],
                    },
                ),
                edge_nodes: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a2")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    20.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {},
                                                v_v_suggest: {},
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {},
                                                top_v_v_suggest: {},
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    76,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            -20.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    80,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    78,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    75,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    79,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    77,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    76,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    79,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    77,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    80,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    78,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    75,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    76,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    77,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    78,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    85,
                                                ),
                                                "align_y": Variable(
                                                    86,
                                                ),
                                                "align_z": Variable(
                                                    87,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    79,
                                                ),
                                                "height": Variable(
                                                    76,
                                                ),
                                                "hgap": Variable(
                                                    1,
                                                ),
                                                "left": Variable(
                                                    78,
                                                ),
                                                "my_other_gap": Variable(
                                                    3,
                                                ),
                                                "origin_x": Variable(
                                                    82,
                                                ),
                                                "origin_y": Variable(
                                                    83,
                                                ),
                                                "origin_z": Variable(
                                                    84,
                                                ),
                                                "right": Variable(
                                                    80,
                                                ),
                                                "top": Variable(
                                                    77,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    75,
                                                ),
                                                "z": Variable(
                                                    81,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    1,
                                                ): 120.0,
                                                Variable(
                                                    3,
                                                ): 28.0,
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "my_other_gap": Variable(
                                                    2,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    0,
                                                ): 120.0,
                                                Variable(
                                                    2,
                                                ): 28.0,
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: Some(
                                                CassowaryGeneralMap {
                                                    map: {
                                                        "align_x": Variable(
                                                            46,
                                                        ),
                                                        "align_y": Variable(
                                                            47,
                                                        ),
                                                        "align_z": Variable(
                                                            48,
                                                        ),
                                                        "baseline": Variable(
                                                            22,
                                                        ),
                                                        "bottom": Variable(
                                                            40,
                                                        ),
                                                        "height": Variable(
                                                            37,
                                                        ),
                                                        "hgap": Variable(
                                                            1,
                                                        ),
                                                        "left": Variable(
                                                            39,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            3,
                                                        ),
                                                        "origin_x": Variable(
                                                            43,
                                                        ),
                                                        "origin_y": Variable(
                                                            44,
                                                        ),
                                                        "origin_z": Variable(
                                                            45,
                                                        ),
                                                        "right": Variable(
                                                            41,
                                                        ),
                                                        "top": Variable(
                                                            38,
                                                        ),
                                                        "vgap": Variable(
                                                            20,
                                                        ),
                                                        "width": Variable(
                                                            36,
                                                        ),
                                                        "z": Variable(
                                                            42,
                                                        ),
                                                    },
                                                    v_v_suggest: {
                                                        Variable(
                                                            1,
                                                        ): 120.0,
                                                        Variable(
                                                            3,
                                                        ): 28.0,
                                                        Variable(
                                                            18,
                                                        ): 10.0,
                                                        Variable(
                                                            20,
                                                        ): 10.0,
                                                        Variable(
                                                            22,
                                                        ): 16.0,
                                                    },
                                                    virtual_constraints: {},
                                                    top_virtual_constraints: {},
                                                    top_map: {
                                                        "baseline": Variable(
                                                            21,
                                                        ),
                                                        "hgap": Variable(
                                                            17,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            2,
                                                        ),
                                                        "vgap": Variable(
                                                            19,
                                                        ),
                                                    },
                                                    top_v_v_suggest: {
                                                        Variable(
                                                            0,
                                                        ): 120.0,
                                                        Variable(
                                                            2,
                                                        ): 28.0,
                                                        Variable(
                                                            17,
                                                        ): 10.0,
                                                        Variable(
                                                            19,
                                                        ): 10.0,
                                                        Variable(
                                                            21,
                                                        ): 16.0,
                                                    },
                                                    parent: Some(
                                                        CassowaryGeneralMap {
                                                            map: {
                                                                "align_x": Variable(
                                                                    14,
                                                                ),
                                                                "align_y": Variable(
                                                                    15,
                                                                ),
                                                                "align_z": Variable(
                                                                    16,
                                                                ),
                                                                "baseline": Variable(
                                                                    22,
                                                                ),
                                                                "bottom": Variable(
                                                                    8,
                                                                ),
                                                                "height": Variable(
                                                                    5,
                                                                ),
                                                                "hgap": Variable(
                                                                    18,
                                                                ),
                                                                "left": Variable(
                                                                    7,
                                                                ),
                                                                "origin_x": Variable(
                                                                    11,
                                                                ),
                                                                "origin_y": Variable(
                                                                    12,
                                                                ),
                                                                "origin_z": Variable(
                                                                    13,
                                                                ),
                                                                "right": Variable(
                                                                    9,
                                                                ),
                                                                "top": Variable(
                                                                    6,
                                                                ),
                                                                "vgap": Variable(
                                                                    20,
                                                                ),
                                                                "width": Variable(
                                                                    4,
                                                                ),
                                                                "z": Variable(
                                                                    10,
                                                                ),
                                                            },
                                                            v_v_suggest: {
                                                                Variable(
                                                                    18,
                                                                ): 10.0,
                                                                Variable(
                                                                    20,
                                                                ): 10.0,
                                                                Variable(
                                                                    22,
                                                                ): 16.0,
                                                            },
                                                            virtual_constraints: {},
                                                            top_virtual_constraints: {},
                                                            top_map: {
                                                                "baseline": Variable(
                                                                    21,
                                                                ),
                                                                "hgap": Variable(
                                                                    17,
                                                                ),
                                                                "vgap": Variable(
                                                                    19,
                                                                ),
                                                            },
                                                            top_v_v_suggest: {
                                                                Variable(
                                                                    17,
                                                                ): 10.0,
                                                                Variable(
                                                                    19,
                                                                ): 10.0,
                                                                Variable(
                                                                    21,
                                                                ): 16.0,
                                                            },
                                                            parent: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                300.0,
                                                20.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            120.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            120.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    120.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,120,0,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            120.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            85,
                                        ),
                                        "align_y": Variable(
                                            86,
                                        ),
                                        "align_z": Variable(
                                            87,
                                        ),
                                        "bottom": Variable(
                                            79,
                                        ),
                                        "height": Variable(
                                            76,
                                        ),
                                        "left": Variable(
                                            78,
                                        ),
                                        "origin_x": Variable(
                                            82,
                                        ),
                                        "origin_y": Variable(
                                            83,
                                        ),
                                        "origin_z": Variable(
                                            84,
                                        ),
                                        "right": Variable(
                                            80,
                                        ),
                                        "top": Variable(
                                            77,
                                        ),
                                        "width": Variable(
                                            75,
                                        ),
                                        "z": Variable(
                                            81,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            75,
                                        ): "width",
                                        Variable(
                                            76,
                                        ): "height",
                                        Variable(
                                            77,
                                        ): "top",
                                        Variable(
                                            78,
                                        ): "left",
                                        Variable(
                                            79,
                                        ): "bottom",
                                        Variable(
                                            80,
                                        ): "right",
                                        Variable(
                                            81,
                                        ): "z",
                                        Variable(
                                            82,
                                        ): "origin_x",
                                        Variable(
                                            83,
                                        ): "origin_y",
                                        Variable(
                                            84,
                                        ): "origin_z",
                                        Variable(
                                            85,
                                        ): "align_x",
                                        Variable(
                                            86,
                                        ): "align_y",
                                        Variable(
                                            87,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {},
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            0,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            1,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            2,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            3,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            75,
                                        ): (
                                            NotNan(
                                                300.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))])[width] ",
                                        ),
                                        Variable(
                                            76,
                                        ): (
                                            NotNan(
                                                20.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))])[height] ",
                                        ),
                                        Variable(
                                            77,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))])[top] ",
                                        ),
                                        Variable(
                                            78,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))])[left] ",
                                        ),
                                        Variable(
                                            79,
                                        ): (
                                            NotNan(
                                                20.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            80,
                                        ): (
                                            NotNan(
                                                300.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))])[right] ",
                                        ),
                                        Variable(
                                            82,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            83,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            85,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            86,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))])[align_y] ",
                                        ),
                                        Variable(
                                            153,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))]) |=> #\"Ev-CLICK-iis\"[width]",
                                        ),
                                        Variable(
                                            154,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))]) |=> #\"Ev-CLICK-iis\"[height]",
                                        ),
                                        Variable(
                                            155,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))]) |=> #\"Ev-CLICK-iis\"[top]",
                                        ),
                                        Variable(
                                            156,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))]) |=> #\"Ev-CLICK-iis\"[left]",
                                        ),
                                        Variable(
                                            157,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))]) |=> #\"Ev-CLICK-iis\"[bottom]",
                                        ),
                                        Variable(
                                            158,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))]) |=> #\"Ev-CLICK-iis\"[right]",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            300.0,
                                        ),
                                        Some(
                                            20.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,120,0,0,1);\n width: 300px;\nheight: 20px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {
                                            TypeName(
                                                "CssFill",
                                            ): StateAnchor(
                                                Rgba(
                                                    1.0,
                                                    0.5,
                                                    0.0,
                                                    1.0,
                                                ),
                                            ),
                                        },
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                120.0,
                                                0.0,
                                                0.0,
                                            ],
                                            300.0,
                                            20.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            120.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            120.0,
                                                        ),
                                                        y0: NotNan(
                                                            0.0,
                                                        ),
                                                        x1: NotNan(
                                                            120.0,
                                                        ),
                                                        y1: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        120.0,
                                                    ),
                                                    y0: NotNan(
                                                        0.0,
                                                    ),
                                                    x1: NotNan(
                                                        120.0,
                                                    ),
                                                    y1: NotNan(
                                                        0.0,
                                                    ),
                                                },
                                            },
                                        ),
                                    ),
                                },
                                opt_p_calculated: Some(
                                    LayoutCalculated {
                                        size_constraints: StateAnchor(
                                            [
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -0.9,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -0.9,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        41,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        40,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        40,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        41,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                            ],
                                        ),
                                        cassowary_inherited_generals_sa: StateAnchor(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "align_x": Variable(
                                                        46,
                                                    ),
                                                    "align_y": Variable(
                                                        47,
                                                    ),
                                                    "align_z": Variable(
                                                        48,
                                                    ),
                                                    "baseline": Variable(
                                                        22,
                                                    ),
                                                    "bottom": Variable(
                                                        40,
                                                    ),
                                                    "height": Variable(
                                                        37,
                                                    ),
                                                    "hgap": Variable(
                                                        1,
                                                    ),
                                                    "left": Variable(
                                                        39,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        3,
                                                    ),
                                                    "origin_x": Variable(
                                                        43,
                                                    ),
                                                    "origin_y": Variable(
                                                        44,
                                                    ),
                                                    "origin_z": Variable(
                                                        45,
                                                    ),
                                                    "right": Variable(
                                                        41,
                                                    ),
                                                    "top": Variable(
                                                        38,
                                                    ),
                                                    "vgap": Variable(
                                                        20,
                                                    ),
                                                    "width": Variable(
                                                        36,
                                                    ),
                                                    "z": Variable(
                                                        42,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        1,
                                                    ): 120.0,
                                                    Variable(
                                                        3,
                                                    ): 28.0,
                                                    Variable(
                                                        18,
                                                    ): 10.0,
                                                    Variable(
                                                        20,
                                                    ): 10.0,
                                                    Variable(
                                                        22,
                                                    ): 16.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "baseline": Variable(
                                                        21,
                                                    ),
                                                    "hgap": Variable(
                                                        17,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        2,
                                                    ),
                                                    "vgap": Variable(
                                                        19,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        0,
                                                    ): 120.0,
                                                    Variable(
                                                        2,
                                                    ): 28.0,
                                                    Variable(
                                                        17,
                                                    ): 10.0,
                                                    Variable(
                                                        19,
                                                    ): 10.0,
                                                    Variable(
                                                        21,
                                                    ): 16.0,
                                                },
                                                parent: Some(
                                                    CassowaryGeneralMap {
                                                        map: {
                                                            "align_x": Variable(
                                                                14,
                                                            ),
                                                            "align_y": Variable(
                                                                15,
                                                            ),
                                                            "align_z": Variable(
                                                                16,
                                                            ),
                                                            "baseline": Variable(
                                                                22,
                                                            ),
                                                            "bottom": Variable(
                                                                8,
                                                            ),
                                                            "height": Variable(
                                                                5,
                                                            ),
                                                            "hgap": Variable(
                                                                18,
                                                            ),
                                                            "left": Variable(
                                                                7,
                                                            ),
                                                            "origin_x": Variable(
                                                                11,
                                                            ),
                                                            "origin_y": Variable(
                                                                12,
                                                            ),
                                                            "origin_z": Variable(
                                                                13,
                                                            ),
                                                            "right": Variable(
                                                                9,
                                                            ),
                                                            "top": Variable(
                                                                6,
                                                            ),
                                                            "vgap": Variable(
                                                                20,
                                                            ),
                                                            "width": Variable(
                                                                4,
                                                            ),
                                                            "z": Variable(
                                                                10,
                                                            ),
                                                        },
                                                        v_v_suggest: {
                                                            Variable(
                                                                18,
                                                            ): 10.0,
                                                            Variable(
                                                                20,
                                                            ): 10.0,
                                                            Variable(
                                                                22,
                                                            ): 16.0,
                                                        },
                                                        virtual_constraints: {},
                                                        top_virtual_constraints: {},
                                                        top_map: {
                                                            "baseline": Variable(
                                                                21,
                                                            ),
                                                            "hgap": Variable(
                                                                17,
                                                            ),
                                                            "vgap": Variable(
                                                                19,
                                                            ),
                                                        },
                                                        top_v_v_suggest: {
                                                            Variable(
                                                                17,
                                                            ): 10.0,
                                                            Variable(
                                                                19,
                                                            ): 10.0,
                                                            Variable(
                                                                21,
                                                            ): 16.0,
                                                        },
                                                        parent: None,
                                                    },
                                                ),
                                            },
                                        ),
                                        cass_or_calc_size: StateAnchor(
                                            [
                                                [
                                                    540.0,
                                                    540.0,
                                                ],
                                            ],
                                        ),
                                        origin: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        align: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        translation: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        coordinates_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        cass_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        matrix: StateAnchor(
                                            Mat4(
                                                [
                                                    [
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                    ],
                                                ],
                                            ),
                                        ),
                                        loc_styles: StateAnchor(
                                            Style {
                                                media_rules: {},
                                                rules: [
                                                    Rule {
                                                        value: StringValue(
                                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                        ),
                                                    },
                                                ],
                                                updated_at: [
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                                ],
                                                pseudo: None,
                                                media: None,
                                                name: "",
                                                keyframes: Keyframes {
                                                    frames: [],
                                                },
                                                combinator: None,
                                                pre_combinators: [],
                                            },
                                        ),
                                        world: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            source_nix: StateVar(
                Some(
                    NodeIndex("a1"),
                ),
            ),
            target_nix: StateVar(
                Some(
                    NodeIndex("a2"),
                ),
            ),
        },
        EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a3")))): Edge {
            item: EmgEdgeItem {
                id: StateVar(
                    StateAnchor(
                        EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a3")))),
                    ),
                ),
                paths: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    90.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    90.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [
                                                    CCSS {
                                                        svv_op_svvs: CCSSSvvOpSvvExpr {
                                                            svv: ScopeViewVariable {
                                                                scope: Some(
                                                                    Local,
                                                                ),
                                                                view: None,
                                                                variable: Some(
                                                                    PredVariable(
                                                                        "left",
                                                                    ),
                                                                ),
                                                            },
                                                            op_exprs: [
                                                                CCSSOpSvv {
                                                                    op: Add,
                                                                    svv: ScopeViewVariable {
                                                                        scope: None,
                                                                        view: None,
                                                                        variable: Some(
                                                                            PredVariable(
                                                                                "hgap",
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        eq_exprs: [
                                                            CCSSEqExpression {
                                                                eq: Eq,
                                                                expr: CCSSSvvOpSvvExpr {
                                                                    svv: ScopeViewVariable {
                                                                        scope: None,
                                                                        view: Some(
                                                                            Id(
                                                                                "a2",
                                                                            ),
                                                                        ),
                                                                        variable: Some(
                                                                            PredVariable(
                                                                                "left",
                                                                            ),
                                                                        ),
                                                                    },
                                                                    op_exprs: [],
                                                                },
                                                            },
                                                        ],
                                                        opt_sw: None,
                                                    },
                                                    CCSS {
                                                        svv_op_svvs: CCSSSvvOpSvvExpr {
                                                            svv: ScopeViewVariable {
                                                                scope: None,
                                                                view: Some(
                                                                    Id(
                                                                        "a2",
                                                                    ),
                                                                ),
                                                                variable: Some(
                                                                    PredVariable(
                                                                        "right",
                                                                    ),
                                                                ),
                                                            },
                                                            op_exprs: [
                                                                CCSSOpSvv {
                                                                    op: Add,
                                                                    svv: ScopeViewVariable {
                                                                        scope: None,
                                                                        view: None,
                                                                        variable: Some(
                                                                            PredVariable(
                                                                                "hgap",
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        eq_exprs: [
                                                            CCSSEqExpression {
                                                                eq: Eq,
                                                                expr: CCSSSvvOpSvvExpr {
                                                                    svv: ScopeViewVariable {
                                                                        scope: Some(
                                                                            Local,
                                                                        ),
                                                                        view: None,
                                                                        variable: Some(
                                                                            PredVariable(
                                                                                "right",
                                                                            ),
                                                                        ),
                                                                    },
                                                                    op_exprs: [],
                                                                },
                                                            },
                                                        ],
                                                        opt_sw: None,
                                                    },
                                                ],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [
                                                ScopeViewVariable {
                                                    scope: None,
                                                    view: Some(
                                                        Id(
                                                            "a2",
                                                        ),
                                                    ),
                                                    variable: None,
                                                },
                                            ],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "hgap": Variable(
                                                        1,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        3,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        1,
                                                    ): 120.0,
                                                    Variable(
                                                        3,
                                                    ): 28.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "hgap": Variable(
                                                        0,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        2,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        0,
                                                    ): 120.0,
                                                    Variable(
                                                        2,
                                                    ): 28.0,
                                                },
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    36,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    4,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -0.9,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    37,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    5,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -0.9,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    41,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    39,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    36,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    40,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    38,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    37,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    40,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    38,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    41,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    39,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    36,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    37,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    38,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    39,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    46,
                                                ),
                                                "align_y": Variable(
                                                    47,
                                                ),
                                                "align_z": Variable(
                                                    48,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    40,
                                                ),
                                                "height": Variable(
                                                    37,
                                                ),
                                                "hgap": Variable(
                                                    1,
                                                ),
                                                "left": Variable(
                                                    39,
                                                ),
                                                "my_other_gap": Variable(
                                                    3,
                                                ),
                                                "origin_x": Variable(
                                                    43,
                                                ),
                                                "origin_y": Variable(
                                                    44,
                                                ),
                                                "origin_z": Variable(
                                                    45,
                                                ),
                                                "right": Variable(
                                                    41,
                                                ),
                                                "top": Variable(
                                                    38,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    36,
                                                ),
                                                "z": Variable(
                                                    42,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    1,
                                                ): 120.0,
                                                Variable(
                                                    3,
                                                ): 28.0,
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "my_other_gap": Variable(
                                                    2,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    0,
                                                ): 120.0,
                                                Variable(
                                                    2,
                                                ): 28.0,
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: Some(
                                                CassowaryGeneralMap {
                                                    map: {
                                                        "align_x": Variable(
                                                            14,
                                                        ),
                                                        "align_y": Variable(
                                                            15,
                                                        ),
                                                        "align_z": Variable(
                                                            16,
                                                        ),
                                                        "baseline": Variable(
                                                            22,
                                                        ),
                                                        "bottom": Variable(
                                                            8,
                                                        ),
                                                        "height": Variable(
                                                            5,
                                                        ),
                                                        "hgap": Variable(
                                                            18,
                                                        ),
                                                        "left": Variable(
                                                            7,
                                                        ),
                                                        "origin_x": Variable(
                                                            11,
                                                        ),
                                                        "origin_y": Variable(
                                                            12,
                                                        ),
                                                        "origin_z": Variable(
                                                            13,
                                                        ),
                                                        "right": Variable(
                                                            9,
                                                        ),
                                                        "top": Variable(
                                                            6,
                                                        ),
                                                        "vgap": Variable(
                                                            20,
                                                        ),
                                                        "width": Variable(
                                                            4,
                                                        ),
                                                        "z": Variable(
                                                            10,
                                                        ),
                                                    },
                                                    v_v_suggest: {
                                                        Variable(
                                                            18,
                                                        ): 10.0,
                                                        Variable(
                                                            20,
                                                        ): 10.0,
                                                        Variable(
                                                            22,
                                                        ): 16.0,
                                                    },
                                                    virtual_constraints: {},
                                                    top_virtual_constraints: {},
                                                    top_map: {
                                                        "baseline": Variable(
                                                            21,
                                                        ),
                                                        "hgap": Variable(
                                                            17,
                                                        ),
                                                        "vgap": Variable(
                                                            19,
                                                        ),
                                                    },
                                                    top_v_v_suggest: {
                                                        Variable(
                                                            17,
                                                        ): 10.0,
                                                        Variable(
                                                            19,
                                                        ): 10.0,
                                                        Variable(
                                                            21,
                                                        ): 16.0,
                                                    },
                                                    parent: None,
                                                },
                                            ),
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                540.0,
                                                540.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            46,
                                        ),
                                        "align_y": Variable(
                                            47,
                                        ),
                                        "align_z": Variable(
                                            48,
                                        ),
                                        "bottom": Variable(
                                            40,
                                        ),
                                        "height": Variable(
                                            37,
                                        ),
                                        "left": Variable(
                                            39,
                                        ),
                                        "origin_x": Variable(
                                            43,
                                        ),
                                        "origin_y": Variable(
                                            44,
                                        ),
                                        "origin_z": Variable(
                                            45,
                                        ),
                                        "right": Variable(
                                            41,
                                        ),
                                        "top": Variable(
                                            38,
                                        ),
                                        "width": Variable(
                                            36,
                                        ),
                                        "z": Variable(
                                            42,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            36,
                                        ): "width",
                                        Variable(
                                            37,
                                        ): "height",
                                        Variable(
                                            38,
                                        ): "top",
                                        Variable(
                                            39,
                                        ): "left",
                                        Variable(
                                            40,
                                        ): "bottom",
                                        Variable(
                                            41,
                                        ): "right",
                                        Variable(
                                            42,
                                        ): "z",
                                        Variable(
                                            43,
                                        ): "origin_x",
                                        Variable(
                                            44,
                                        ): "origin_y",
                                        Variable(
                                            45,
                                        ): "origin_z",
                                        Variable(
                                            46,
                                        ): "align_x",
                                        Variable(
                                            47,
                                        ): "align_y",
                                        Variable(
                                            48,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {
                                        Variable(
                                            78,
                                        ),
                                        Variable(
                                            80,
                                        ),
                                        Variable(
                                            39,
                                        ),
                                        Variable(
                                            1,
                                        ),
                                        Variable(
                                            41,
                                        ),
                                    },
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            0,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            1,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            2,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            3,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            36,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[width] ",
                                        ),
                                        Variable(
                                            37,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[height] ",
                                        ),
                                        Variable(
                                            38,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[top] ",
                                        ),
                                        Variable(
                                            39,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[left] ",
                                        ),
                                        Variable(
                                            40,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            41,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[right] ",
                                        ),
                                        Variable(
                                            43,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            44,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            46,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            47,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[align_y] ",
                                        ),
                                        Variable(
                                            62,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[width]",
                                        ),
                                        Variable(
                                            63,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[height]",
                                        ),
                                        Variable(
                                            64,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[top]",
                                        ),
                                        Variable(
                                            65,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[left]",
                                        ),
                                        Variable(
                                            66,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[bottom]",
                                        ),
                                        Variable(
                                            67,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[right]",
                                        ),
                                        Variable(
                                            75,
                                        ): (
                                            NotNan(
                                                300.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[width]",
                                        ),
                                        Variable(
                                            76,
                                        ): (
                                            NotNan(
                                                20.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[height]",
                                        ),
                                        Variable(
                                            77,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[top]",
                                        ),
                                        Variable(
                                            78,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[left]",
                                        ),
                                        Variable(
                                            79,
                                        ): (
                                            NotNan(
                                                20.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[bottom]",
                                        ),
                                        Variable(
                                            80,
                                        ): (
                                            NotNan(
                                                420.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[right]",
                                        ),
                                        Variable(
                                            88,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[width]",
                                        ),
                                        Variable(
                                            89,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[height]",
                                        ),
                                        Variable(
                                            90,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[top]",
                                        ),
                                        Variable(
                                            91,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[left]",
                                        ),
                                        Variable(
                                            92,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[bottom]",
                                        ),
                                        Variable(
                                            93,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[right]",
                                        ),
                                        Variable(
                                            101,
                                        ): (
                                            NotNan(
                                                100.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[width]",
                                        ),
                                        Variable(
                                            102,
                                        ): (
                                            NotNan(
                                                40.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[height]",
                                        ),
                                        Variable(
                                            103,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[top]",
                                        ),
                                        Variable(
                                            104,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[left]",
                                        ),
                                        Variable(
                                            105,
                                        ): (
                                            NotNan(
                                                40.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[bottom]",
                                        ),
                                        Variable(
                                            106,
                                        ): (
                                            NotNan(
                                                100.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[right]",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            540.0,
                                        ),
                                        Some(
                                            540.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);\n width: 540px;\nheight: 540px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {
                                            TypeName(
                                                "CssBorderColor",
                                            ): StateAnchor(
                                                Rgba(
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ),
                                            ),
                                            TypeName(
                                                "CssBorderWidth",
                                            ): StateAnchor(
                                                Length(
                                                    Simplex(
                                                        ExactLengthSimplex {
                                                            unit: Px,
                                                            value: NotNan(
                                                                5.0,
                                                            ),
                                                        },
                                                    ),
                                                ),
                                            ),
                                            TypeName(
                                                "CssFill",
                                            ): StateAnchor(
                                                Hsl(
                                                    150.0,
                                                    100.0,
                                                    100.0,
                                                ),
                                            ),
                                        },
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                            540.0,
                                            540.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            120.0,
                                                        ),
                                                        y0: NotNan(
                                                            0.0,
                                                        ),
                                                        x1: NotNan(
                                                            420.0,
                                                        ),
                                                        y1: NotNan(
                                                            20.0,
                                                        ),
                                                    },
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            250.0,
                                                        ),
                                                        y0: NotNan(
                                                            250.0,
                                                        ),
                                                        x1: NotNan(
                                                            280.0,
                                                        ),
                                                        y1: NotNan(
                                                            280.0,
                                                        ),
                                                    },
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            300.0,
                                                        ),
                                                        y0: NotNan(
                                                            300.0,
                                                        ),
                                                        x1: NotNan(
                                                            330.0,
                                                        ),
                                                        y1: NotNan(
                                                            330.0,
                                                        ),
                                                    },
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            400.0,
                                                        ),
                                                        y0: NotNan(
                                                            400.0,
                                                        ),
                                                        x1: NotNan(
                                                            500.0,
                                                        ),
                                                        y1: NotNan(
                                                            440.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        120.0,
                                                    ),
                                                    y0: NotNan(
                                                        0.0,
                                                    ),
                                                    x1: NotNan(
                                                        500.0,
                                                    ),
                                                    y1: NotNan(
                                                        440.0,
                                                    ),
                                                },
                                            },
                                        ),
                                    ),
                                },
                                opt_p_calculated: Some(
                                    LayoutCalculated {
                                        size_constraints: StateAnchor(
                                            [
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -600.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -600.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        8,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        9,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        8,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        9,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                            ],
                                        ),
                                        cassowary_inherited_generals_sa: StateAnchor(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "align_x": Variable(
                                                        14,
                                                    ),
                                                    "align_y": Variable(
                                                        15,
                                                    ),
                                                    "align_z": Variable(
                                                        16,
                                                    ),
                                                    "baseline": Variable(
                                                        22,
                                                    ),
                                                    "bottom": Variable(
                                                        8,
                                                    ),
                                                    "height": Variable(
                                                        5,
                                                    ),
                                                    "hgap": Variable(
                                                        18,
                                                    ),
                                                    "left": Variable(
                                                        7,
                                                    ),
                                                    "origin_x": Variable(
                                                        11,
                                                    ),
                                                    "origin_y": Variable(
                                                        12,
                                                    ),
                                                    "origin_z": Variable(
                                                        13,
                                                    ),
                                                    "right": Variable(
                                                        9,
                                                    ),
                                                    "top": Variable(
                                                        6,
                                                    ),
                                                    "vgap": Variable(
                                                        20,
                                                    ),
                                                    "width": Variable(
                                                        4,
                                                    ),
                                                    "z": Variable(
                                                        10,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        18,
                                                    ): 10.0,
                                                    Variable(
                                                        20,
                                                    ): 10.0,
                                                    Variable(
                                                        22,
                                                    ): 16.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "baseline": Variable(
                                                        21,
                                                    ),
                                                    "hgap": Variable(
                                                        17,
                                                    ),
                                                    "vgap": Variable(
                                                        19,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        17,
                                                    ): 10.0,
                                                    Variable(
                                                        19,
                                                    ): 10.0,
                                                    Variable(
                                                        21,
                                                    ): 16.0,
                                                },
                                                parent: None,
                                            },
                                        ),
                                        cass_or_calc_size: StateAnchor(
                                            [
                                                [
                                                    600.0,
                                                    600.0,
                                                ],
                                            ],
                                        ),
                                        origin: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        align: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        translation: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        coordinates_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        cass_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        matrix: StateAnchor(
                                            Mat4(
                                                [
                                                    [
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                    ],
                                                ],
                                            ),
                                        ),
                                        loc_styles: StateAnchor(
                                            Style {
                                                media_rules: {},
                                                rules: [
                                                    Rule {
                                                        value: Length(
                                                            Simplex(
                                                                ExactLengthSimplex {
                                                                    unit: Px,
                                                                    value: NotNan(
                                                                        600.0,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    Rule {
                                                        value: Length(
                                                            Simplex(
                                                                ExactLengthSimplex {
                                                                    unit: Px,
                                                                    value: NotNan(
                                                                        600.0,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    Rule {
                                                        value: StringValue(
                                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                        ),
                                                    },
                                                ],
                                                updated_at: [
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:13",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:17",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:31",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:45",
                                                ],
                                                pseudo: None,
                                                media: None,
                                                name: "",
                                                keyframes: Keyframes {
                                                    frames: [],
                                                },
                                                combinator: None,
                                                pre_combinators: [],
                                            },
                                        ),
                                        world: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
                layout: Layout {
                    w: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Px,
                                            value: NotNan(
                                                30.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    h: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Px,
                                            value: NotNan(
                                                30.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    z: StateVar(
                        StateAnchor(
                            0,
                        ),
                    ),
                    origin_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Px,
                                            value: NotNan(
                                                0.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    origin_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Px,
                                            value: NotNan(
                                                0.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    origin_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Px,
                                            value: NotNan(
                                                300.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    align_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Px,
                                            value: NotNan(
                                                300.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    align_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    cassowary_constants: StateVar(
                        StateAnchor(
                            [],
                        ),
                    ),
                    cassowary_selectors: StateVar(
                        [],
                    ),
                    cassowary_generals: StateVar(
                        CassowaryGeneralMap {
                            map: {},
                            v_v_suggest: {},
                            virtual_constraints: {},
                            top_virtual_constraints: {},
                            top_map: {},
                            top_v_v_suggest: {},
                            parent: None,
                        },
                    ),
                },
                styles: StateVar(
                    {
                        TypeName(
                            "CssBorderColor",
                        ): StateAnchor(
                            Rgba(
                                1.0,
                                0.0,
                                0.0,
                                1.0,
                            ),
                        ),
                        TypeName(
                            "CssBorderWidth",
                        ): StateAnchor(
                            Length(
                                Simplex(
                                    ExactLengthSimplex {
                                        unit: Px,
                                        value: NotNan(
                                            1.0,
                                        ),
                                    },
                                ),
                            ),
                        ),
                        TypeName(
                            "CssFill",
                        ): StateAnchor(
                            Rgba(
                                1.0,
                                1.0,
                                0.0,
                                1.0,
                            ),
                        ),
                    },
                ),
                path_styles: StateVar(
                    {},
                ),
                path_layouts: StateVar(
                    {},
                ),
                other_css_styles: StateVar(
                    Style {
                        media_rules: {},
                        rules: [],
                        updated_at: [
                            "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:942:45",
                        ],
                        pseudo: None,
                        media: None,
                        name: "",
                        keyframes: Keyframes {
                            frames: [],
                        },
                        combinator: None,
                        pre_combinators: [],
                    },
                ),
                edge_nodes: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a3")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    30.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    30.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    300.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    300.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {},
                                                v_v_suggest: {},
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {},
                                                top_v_v_suggest: {},
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    88,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            -30.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    89,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            -30.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    93,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    91,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    88,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    92,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    90,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    89,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    92,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    90,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    93,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    91,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    88,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    89,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    90,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    91,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    98,
                                                ),
                                                "align_y": Variable(
                                                    99,
                                                ),
                                                "align_z": Variable(
                                                    100,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    92,
                                                ),
                                                "height": Variable(
                                                    89,
                                                ),
                                                "hgap": Variable(
                                                    1,
                                                ),
                                                "left": Variable(
                                                    91,
                                                ),
                                                "my_other_gap": Variable(
                                                    3,
                                                ),
                                                "origin_x": Variable(
                                                    95,
                                                ),
                                                "origin_y": Variable(
                                                    96,
                                                ),
                                                "origin_z": Variable(
                                                    97,
                                                ),
                                                "right": Variable(
                                                    93,
                                                ),
                                                "top": Variable(
                                                    90,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    88,
                                                ),
                                                "z": Variable(
                                                    94,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    1,
                                                ): 120.0,
                                                Variable(
                                                    3,
                                                ): 28.0,
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "my_other_gap": Variable(
                                                    2,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    0,
                                                ): 120.0,
                                                Variable(
                                                    2,
                                                ): 28.0,
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: Some(
                                                CassowaryGeneralMap {
                                                    map: {
                                                        "align_x": Variable(
                                                            46,
                                                        ),
                                                        "align_y": Variable(
                                                            47,
                                                        ),
                                                        "align_z": Variable(
                                                            48,
                                                        ),
                                                        "baseline": Variable(
                                                            22,
                                                        ),
                                                        "bottom": Variable(
                                                            40,
                                                        ),
                                                        "height": Variable(
                                                            37,
                                                        ),
                                                        "hgap": Variable(
                                                            1,
                                                        ),
                                                        "left": Variable(
                                                            39,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            3,
                                                        ),
                                                        "origin_x": Variable(
                                                            43,
                                                        ),
                                                        "origin_y": Variable(
                                                            44,
                                                        ),
                                                        "origin_z": Variable(
                                                            45,
                                                        ),
                                                        "right": Variable(
                                                            41,
                                                        ),
                                                        "top": Variable(
                                                            38,
                                                        ),
                                                        "vgap": Variable(
                                                            20,
                                                        ),
                                                        "width": Variable(
                                                            36,
                                                        ),
                                                        "z": Variable(
                                                            42,
                                                        ),
                                                    },
                                                    v_v_suggest: {
                                                        Variable(
                                                            1,
                                                        ): 120.0,
                                                        Variable(
                                                            3,
                                                        ): 28.0,
                                                        Variable(
                                                            18,
                                                        ): 10.0,
                                                        Variable(
                                                            20,
                                                        ): 10.0,
                                                        Variable(
                                                            22,
                                                        ): 16.0,
                                                    },
                                                    virtual_constraints: {},
                                                    top_virtual_constraints: {},
                                                    top_map: {
                                                        "baseline": Variable(
                                                            21,
                                                        ),
                                                        "hgap": Variable(
                                                            17,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            2,
                                                        ),
                                                        "vgap": Variable(
                                                            19,
                                                        ),
                                                    },
                                                    top_v_v_suggest: {
                                                        Variable(
                                                            0,
                                                        ): 120.0,
                                                        Variable(
                                                            2,
                                                        ): 28.0,
                                                        Variable(
                                                            17,
                                                        ): 10.0,
                                                        Variable(
                                                            19,
                                                        ): 10.0,
                                                        Variable(
                                                            21,
                                                        ): 16.0,
                                                    },
                                                    parent: Some(
                                                        CassowaryGeneralMap {
                                                            map: {
                                                                "align_x": Variable(
                                                                    14,
                                                                ),
                                                                "align_y": Variable(
                                                                    15,
                                                                ),
                                                                "align_z": Variable(
                                                                    16,
                                                                ),
                                                                "baseline": Variable(
                                                                    22,
                                                                ),
                                                                "bottom": Variable(
                                                                    8,
                                                                ),
                                                                "height": Variable(
                                                                    5,
                                                                ),
                                                                "hgap": Variable(
                                                                    18,
                                                                ),
                                                                "left": Variable(
                                                                    7,
                                                                ),
                                                                "origin_x": Variable(
                                                                    11,
                                                                ),
                                                                "origin_y": Variable(
                                                                    12,
                                                                ),
                                                                "origin_z": Variable(
                                                                    13,
                                                                ),
                                                                "right": Variable(
                                                                    9,
                                                                ),
                                                                "top": Variable(
                                                                    6,
                                                                ),
                                                                "vgap": Variable(
                                                                    20,
                                                                ),
                                                                "width": Variable(
                                                                    4,
                                                                ),
                                                                "z": Variable(
                                                                    10,
                                                                ),
                                                            },
                                                            v_v_suggest: {
                                                                Variable(
                                                                    18,
                                                                ): 10.0,
                                                                Variable(
                                                                    20,
                                                                ): 10.0,
                                                                Variable(
                                                                    22,
                                                                ): 16.0,
                                                            },
                                                            virtual_constraints: {},
                                                            top_virtual_constraints: {},
                                                            top_map: {
                                                                "baseline": Variable(
                                                                    21,
                                                                ),
                                                                "hgap": Variable(
                                                                    17,
                                                                ),
                                                                "vgap": Variable(
                                                                    19,
                                                                ),
                                                            },
                                                            top_v_v_suggest: {
                                                                Variable(
                                                                    17,
                                                                ): 10.0,
                                                                Variable(
                                                                    19,
                                                                ): 10.0,
                                                                Variable(
                                                                    21,
                                                                ): 16.0,
                                                            },
                                                            parent: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                30.0,
                                                30.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            300.0,
                                            300.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            300.0,
                                            300.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            300.0,
                                            300.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    300.0,
                                                    300.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,300,300,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            300.0,
                                            300.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            98,
                                        ),
                                        "align_y": Variable(
                                            99,
                                        ),
                                        "align_z": Variable(
                                            100,
                                        ),
                                        "bottom": Variable(
                                            92,
                                        ),
                                        "height": Variable(
                                            89,
                                        ),
                                        "left": Variable(
                                            91,
                                        ),
                                        "origin_x": Variable(
                                            95,
                                        ),
                                        "origin_y": Variable(
                                            96,
                                        ),
                                        "origin_z": Variable(
                                            97,
                                        ),
                                        "right": Variable(
                                            93,
                                        ),
                                        "top": Variable(
                                            90,
                                        ),
                                        "width": Variable(
                                            88,
                                        ),
                                        "z": Variable(
                                            94,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            88,
                                        ): "width",
                                        Variable(
                                            89,
                                        ): "height",
                                        Variable(
                                            90,
                                        ): "top",
                                        Variable(
                                            91,
                                        ): "left",
                                        Variable(
                                            92,
                                        ): "bottom",
                                        Variable(
                                            93,
                                        ): "right",
                                        Variable(
                                            94,
                                        ): "z",
                                        Variable(
                                            95,
                                        ): "origin_x",
                                        Variable(
                                            96,
                                        ): "origin_y",
                                        Variable(
                                            97,
                                        ): "origin_z",
                                        Variable(
                                            98,
                                        ): "align_x",
                                        Variable(
                                            99,
                                        ): "align_y",
                                        Variable(
                                            100,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {},
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            0,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            1,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            2,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            3,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            88,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a3\"))))])[width] ",
                                        ),
                                        Variable(
                                            89,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a3\"))))])[height] ",
                                        ),
                                        Variable(
                                            90,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a3\"))))])[top] ",
                                        ),
                                        Variable(
                                            91,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a3\"))))])[left] ",
                                        ),
                                        Variable(
                                            92,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a3\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            93,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a3\"))))])[right] ",
                                        ),
                                        Variable(
                                            95,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a3\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            96,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a3\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            98,
                                        ): (
                                            NotNan(
                                                300.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a3\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            99,
                                        ): (
                                            NotNan(
                                                300.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a3\"))))])[align_y] ",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            30.0,
                                        ),
                                        Some(
                                            30.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,300,300,0,1);\n width: 30px;\nheight: 30px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {
                                            TypeName(
                                                "CssBorderColor",
                                            ): StateAnchor(
                                                Rgba(
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ),
                                            ),
                                            TypeName(
                                                "CssBorderWidth",
                                            ): StateAnchor(
                                                Length(
                                                    Simplex(
                                                        ExactLengthSimplex {
                                                            unit: Px,
                                                            value: NotNan(
                                                                1.0,
                                                            ),
                                                        },
                                                    ),
                                                ),
                                            ),
                                            TypeName(
                                                "CssFill",
                                            ): StateAnchor(
                                                Rgba(
                                                    1.0,
                                                    1.0,
                                                    0.0,
                                                    1.0,
                                                ),
                                            ),
                                        },
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                300.0,
                                                300.0,
                                                0.0,
                                            ],
                                            30.0,
                                            30.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            300.0,
                                            300.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        None,
                                    ),
                                },
                                opt_p_calculated: Some(
                                    LayoutCalculated {
                                        size_constraints: StateAnchor(
                                            [
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -0.9,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -0.9,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        41,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        40,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        40,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        41,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                            ],
                                        ),
                                        cassowary_inherited_generals_sa: StateAnchor(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "align_x": Variable(
                                                        46,
                                                    ),
                                                    "align_y": Variable(
                                                        47,
                                                    ),
                                                    "align_z": Variable(
                                                        48,
                                                    ),
                                                    "baseline": Variable(
                                                        22,
                                                    ),
                                                    "bottom": Variable(
                                                        40,
                                                    ),
                                                    "height": Variable(
                                                        37,
                                                    ),
                                                    "hgap": Variable(
                                                        1,
                                                    ),
                                                    "left": Variable(
                                                        39,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        3,
                                                    ),
                                                    "origin_x": Variable(
                                                        43,
                                                    ),
                                                    "origin_y": Variable(
                                                        44,
                                                    ),
                                                    "origin_z": Variable(
                                                        45,
                                                    ),
                                                    "right": Variable(
                                                        41,
                                                    ),
                                                    "top": Variable(
                                                        38,
                                                    ),
                                                    "vgap": Variable(
                                                        20,
                                                    ),
                                                    "width": Variable(
                                                        36,
                                                    ),
                                                    "z": Variable(
                                                        42,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        1,
                                                    ): 120.0,
                                                    Variable(
                                                        3,
                                                    ): 28.0,
                                                    Variable(
                                                        18,
                                                    ): 10.0,
                                                    Variable(
                                                        20,
                                                    ): 10.0,
                                                    Variable(
                                                        22,
                                                    ): 16.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "baseline": Variable(
                                                        21,
                                                    ),
                                                    "hgap": Variable(
                                                        17,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        2,
                                                    ),
                                                    "vgap": Variable(
                                                        19,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        0,
                                                    ): 120.0,
                                                    Variable(
                                                        2,
                                                    ): 28.0,
                                                    Variable(
                                                        17,
                                                    ): 10.0,
                                                    Variable(
                                                        19,
                                                    ): 10.0,
                                                    Variable(
                                                        21,
                                                    ): 16.0,
                                                },
                                                parent: Some(
                                                    CassowaryGeneralMap {
                                                        map: {
                                                            "align_x": Variable(
                                                                14,
                                                            ),
                                                            "align_y": Variable(
                                                                15,
                                                            ),
                                                            "align_z": Variable(
                                                                16,
                                                            ),
                                                            "baseline": Variable(
                                                                22,
                                                            ),
                                                            "bottom": Variable(
                                                                8,
                                                            ),
                                                            "height": Variable(
                                                                5,
                                                            ),
                                                            "hgap": Variable(
                                                                18,
                                                            ),
                                                            "left": Variable(
                                                                7,
                                                            ),
                                                            "origin_x": Variable(
                                                                11,
                                                            ),
                                                            "origin_y": Variable(
                                                                12,
                                                            ),
                                                            "origin_z": Variable(
                                                                13,
                                                            ),
                                                            "right": Variable(
                                                                9,
                                                            ),
                                                            "top": Variable(
                                                                6,
                                                            ),
                                                            "vgap": Variable(
                                                                20,
                                                            ),
                                                            "width": Variable(
                                                                4,
                                                            ),
                                                            "z": Variable(
                                                                10,
                                                            ),
                                                        },
                                                        v_v_suggest: {
                                                            Variable(
                                                                18,
                                                            ): 10.0,
                                                            Variable(
                                                                20,
                                                            ): 10.0,
                                                            Variable(
                                                                22,
                                                            ): 16.0,
                                                        },
                                                        virtual_constraints: {},
                                                        top_virtual_constraints: {},
                                                        top_map: {
                                                            "baseline": Variable(
                                                                21,
                                                            ),
                                                            "hgap": Variable(
                                                                17,
                                                            ),
                                                            "vgap": Variable(
                                                                19,
                                                            ),
                                                        },
                                                        top_v_v_suggest: {
                                                            Variable(
                                                                17,
                                                            ): 10.0,
                                                            Variable(
                                                                19,
                                                            ): 10.0,
                                                            Variable(
                                                                21,
                                                            ): 16.0,
                                                        },
                                                        parent: None,
                                                    },
                                                ),
                                            },
                                        ),
                                        cass_or_calc_size: StateAnchor(
                                            [
                                                [
                                                    540.0,
                                                    540.0,
                                                ],
                                            ],
                                        ),
                                        origin: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        align: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        translation: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        coordinates_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        cass_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        matrix: StateAnchor(
                                            Mat4(
                                                [
                                                    [
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                    ],
                                                ],
                                            ),
                                        ),
                                        loc_styles: StateAnchor(
                                            Style {
                                                media_rules: {},
                                                rules: [
                                                    Rule {
                                                        value: StringValue(
                                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                        ),
                                                    },
                                                ],
                                                updated_at: [
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                                ],
                                                pseudo: None,
                                                media: None,
                                                name: "",
                                                keyframes: Keyframes {
                                                    frames: [],
                                                },
                                                combinator: None,
                                                pre_combinators: [],
                                            },
                                        ),
                                        world: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            source_nix: StateVar(
                Some(
                    NodeIndex("a1"),
                ),
            ),
            target_nix: StateVar(
                Some(
                    NodeIndex("a3"),
                ),
            ),
        },
        EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a4")))): Edge {
            item: EmgEdgeItem {
                id: StateVar(
                    StateAnchor(
                        EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a4")))),
                    ),
                ),
                paths: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    90.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    90.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [
                                                    CCSS {
                                                        svv_op_svvs: CCSSSvvOpSvvExpr {
                                                            svv: ScopeViewVariable {
                                                                scope: Some(
                                                                    Local,
                                                                ),
                                                                view: None,
                                                                variable: Some(
                                                                    PredVariable(
                                                                        "left",
                                                                    ),
                                                                ),
                                                            },
                                                            op_exprs: [
                                                                CCSSOpSvv {
                                                                    op: Add,
                                                                    svv: ScopeViewVariable {
                                                                        scope: None,
                                                                        view: None,
                                                                        variable: Some(
                                                                            PredVariable(
                                                                                "hgap",
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        eq_exprs: [
                                                            CCSSEqExpression {
                                                                eq: Eq,
                                                                expr: CCSSSvvOpSvvExpr {
                                                                    svv: ScopeViewVariable {
                                                                        scope: None,
                                                                        view: Some(
                                                                            Id(
                                                                                "a2",
                                                                            ),
                                                                        ),
                                                                        variable: Some(
                                                                            PredVariable(
                                                                                "left",
                                                                            ),
                                                                        ),
                                                                    },
                                                                    op_exprs: [],
                                                                },
                                                            },
                                                        ],
                                                        opt_sw: None,
                                                    },
                                                    CCSS {
                                                        svv_op_svvs: CCSSSvvOpSvvExpr {
                                                            svv: ScopeViewVariable {
                                                                scope: None,
                                                                view: Some(
                                                                    Id(
                                                                        "a2",
                                                                    ),
                                                                ),
                                                                variable: Some(
                                                                    PredVariable(
                                                                        "right",
                                                                    ),
                                                                ),
                                                            },
                                                            op_exprs: [
                                                                CCSSOpSvv {
                                                                    op: Add,
                                                                    svv: ScopeViewVariable {
                                                                        scope: None,
                                                                        view: None,
                                                                        variable: Some(
                                                                            PredVariable(
                                                                                "hgap",
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        eq_exprs: [
                                                            CCSSEqExpression {
                                                                eq: Eq,
                                                                expr: CCSSSvvOpSvvExpr {
                                                                    svv: ScopeViewVariable {
                                                                        scope: Some(
                                                                            Local,
                                                                        ),
                                                                        view: None,
                                                                        variable: Some(
                                                                            PredVariable(
                                                                                "right",
                                                                            ),
                                                                        ),
                                                                    },
                                                                    op_exprs: [],
                                                                },
                                                            },
                                                        ],
                                                        opt_sw: None,
                                                    },
                                                ],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [
                                                ScopeViewVariable {
                                                    scope: None,
                                                    view: Some(
                                                        Id(
                                                            "a2",
                                                        ),
                                                    ),
                                                    variable: None,
                                                },
                                            ],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "hgap": Variable(
                                                        1,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        3,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        1,
                                                    ): 120.0,
                                                    Variable(
                                                        3,
                                                    ): 28.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "hgap": Variable(
                                                        0,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        2,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        0,
                                                    ): 120.0,
                                                    Variable(
                                                        2,
                                                    ): 28.0,
                                                },
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    36,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    4,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -0.9,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    37,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    5,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -0.9,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    41,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    39,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    36,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    40,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    38,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    37,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    40,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    38,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    41,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    39,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    36,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    37,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    38,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    39,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    46,
                                                ),
                                                "align_y": Variable(
                                                    47,
                                                ),
                                                "align_z": Variable(
                                                    48,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    40,
                                                ),
                                                "height": Variable(
                                                    37,
                                                ),
                                                "hgap": Variable(
                                                    1,
                                                ),
                                                "left": Variable(
                                                    39,
                                                ),
                                                "my_other_gap": Variable(
                                                    3,
                                                ),
                                                "origin_x": Variable(
                                                    43,
                                                ),
                                                "origin_y": Variable(
                                                    44,
                                                ),
                                                "origin_z": Variable(
                                                    45,
                                                ),
                                                "right": Variable(
                                                    41,
                                                ),
                                                "top": Variable(
                                                    38,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    36,
                                                ),
                                                "z": Variable(
                                                    42,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    1,
                                                ): 120.0,
                                                Variable(
                                                    3,
                                                ): 28.0,
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "my_other_gap": Variable(
                                                    2,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    0,
                                                ): 120.0,
                                                Variable(
                                                    2,
                                                ): 28.0,
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: Some(
                                                CassowaryGeneralMap {
                                                    map: {
                                                        "align_x": Variable(
                                                            14,
                                                        ),
                                                        "align_y": Variable(
                                                            15,
                                                        ),
                                                        "align_z": Variable(
                                                            16,
                                                        ),
                                                        "baseline": Variable(
                                                            22,
                                                        ),
                                                        "bottom": Variable(
                                                            8,
                                                        ),
                                                        "height": Variable(
                                                            5,
                                                        ),
                                                        "hgap": Variable(
                                                            18,
                                                        ),
                                                        "left": Variable(
                                                            7,
                                                        ),
                                                        "origin_x": Variable(
                                                            11,
                                                        ),
                                                        "origin_y": Variable(
                                                            12,
                                                        ),
                                                        "origin_z": Variable(
                                                            13,
                                                        ),
                                                        "right": Variable(
                                                            9,
                                                        ),
                                                        "top": Variable(
                                                            6,
                                                        ),
                                                        "vgap": Variable(
                                                            20,
                                                        ),
                                                        "width": Variable(
                                                            4,
                                                        ),
                                                        "z": Variable(
                                                            10,
                                                        ),
                                                    },
                                                    v_v_suggest: {
                                                        Variable(
                                                            18,
                                                        ): 10.0,
                                                        Variable(
                                                            20,
                                                        ): 10.0,
                                                        Variable(
                                                            22,
                                                        ): 16.0,
                                                    },
                                                    virtual_constraints: {},
                                                    top_virtual_constraints: {},
                                                    top_map: {
                                                        "baseline": Variable(
                                                            21,
                                                        ),
                                                        "hgap": Variable(
                                                            17,
                                                        ),
                                                        "vgap": Variable(
                                                            19,
                                                        ),
                                                    },
                                                    top_v_v_suggest: {
                                                        Variable(
                                                            17,
                                                        ): 10.0,
                                                        Variable(
                                                            19,
                                                        ): 10.0,
                                                        Variable(
                                                            21,
                                                        ): 16.0,
                                                    },
                                                    parent: None,
                                                },
                                            ),
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                540.0,
                                                540.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            46,
                                        ),
                                        "align_y": Variable(
                                            47,
                                        ),
                                        "align_z": Variable(
                                            48,
                                        ),
                                        "bottom": Variable(
                                            40,
                                        ),
                                        "height": Variable(
                                            37,
                                        ),
                                        "left": Variable(
                                            39,
                                        ),
                                        "origin_x": Variable(
                                            43,
                                        ),
                                        "origin_y": Variable(
                                            44,
                                        ),
                                        "origin_z": Variable(
                                            45,
                                        ),
                                        "right": Variable(
                                            41,
                                        ),
                                        "top": Variable(
                                            38,
                                        ),
                                        "width": Variable(
                                            36,
                                        ),
                                        "z": Variable(
                                            42,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            36,
                                        ): "width",
                                        Variable(
                                            37,
                                        ): "height",
                                        Variable(
                                            38,
                                        ): "top",
                                        Variable(
                                            39,
                                        ): "left",
                                        Variable(
                                            40,
                                        ): "bottom",
                                        Variable(
                                            41,
                                        ): "right",
                                        Variable(
                                            42,
                                        ): "z",
                                        Variable(
                                            43,
                                        ): "origin_x",
                                        Variable(
                                            44,
                                        ): "origin_y",
                                        Variable(
                                            45,
                                        ): "origin_z",
                                        Variable(
                                            46,
                                        ): "align_x",
                                        Variable(
                                            47,
                                        ): "align_y",
                                        Variable(
                                            48,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {
                                        Variable(
                                            78,
                                        ),
                                        Variable(
                                            80,
                                        ),
                                        Variable(
                                            39,
                                        ),
                                        Variable(
                                            1,
                                        ),
                                        Variable(
                                            41,
                                        ),
                                    },
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            0,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            1,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            2,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            3,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            36,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[width] ",
                                        ),
                                        Variable(
                                            37,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[height] ",
                                        ),
                                        Variable(
                                            38,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[top] ",
                                        ),
                                        Variable(
                                            39,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[left] ",
                                        ),
                                        Variable(
                                            40,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            41,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[right] ",
                                        ),
                                        Variable(
                                            43,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            44,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            46,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            47,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[align_y] ",
                                        ),
                                        Variable(
                                            62,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[width]",
                                        ),
                                        Variable(
                                            63,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[height]",
                                        ),
                                        Variable(
                                            64,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[top]",
                                        ),
                                        Variable(
                                            65,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[left]",
                                        ),
                                        Variable(
                                            66,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[bottom]",
                                        ),
                                        Variable(
                                            67,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[right]",
                                        ),
                                        Variable(
                                            75,
                                        ): (
                                            NotNan(
                                                300.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[width]",
                                        ),
                                        Variable(
                                            76,
                                        ): (
                                            NotNan(
                                                20.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[height]",
                                        ),
                                        Variable(
                                            77,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[top]",
                                        ),
                                        Variable(
                                            78,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[left]",
                                        ),
                                        Variable(
                                            79,
                                        ): (
                                            NotNan(
                                                20.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[bottom]",
                                        ),
                                        Variable(
                                            80,
                                        ): (
                                            NotNan(
                                                420.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[right]",
                                        ),
                                        Variable(
                                            88,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[width]",
                                        ),
                                        Variable(
                                            89,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[height]",
                                        ),
                                        Variable(
                                            90,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[top]",
                                        ),
                                        Variable(
                                            91,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[left]",
                                        ),
                                        Variable(
                                            92,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[bottom]",
                                        ),
                                        Variable(
                                            93,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[right]",
                                        ),
                                        Variable(
                                            101,
                                        ): (
                                            NotNan(
                                                100.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[width]",
                                        ),
                                        Variable(
                                            102,
                                        ): (
                                            NotNan(
                                                40.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[height]",
                                        ),
                                        Variable(
                                            103,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[top]",
                                        ),
                                        Variable(
                                            104,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[left]",
                                        ),
                                        Variable(
                                            105,
                                        ): (
                                            NotNan(
                                                40.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[bottom]",
                                        ),
                                        Variable(
                                            106,
                                        ): (
                                            NotNan(
                                                100.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[right]",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            540.0,
                                        ),
                                        Some(
                                            540.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);\n width: 540px;\nheight: 540px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {
                                            TypeName(
                                                "CssBorderColor",
                                            ): StateAnchor(
                                                Rgba(
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ),
                                            ),
                                            TypeName(
                                                "CssBorderWidth",
                                            ): StateAnchor(
                                                Length(
                                                    Simplex(
                                                        ExactLengthSimplex {
                                                            unit: Px,
                                                            value: NotNan(
                                                                5.0,
                                                            ),
                                                        },
                                                    ),
                                                ),
                                            ),
                                            TypeName(
                                                "CssFill",
                                            ): StateAnchor(
                                                Hsl(
                                                    150.0,
                                                    100.0,
                                                    100.0,
                                                ),
                                            ),
                                        },
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                            540.0,
                                            540.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            120.0,
                                                        ),
                                                        y0: NotNan(
                                                            0.0,
                                                        ),
                                                        x1: NotNan(
                                                            420.0,
                                                        ),
                                                        y1: NotNan(
                                                            20.0,
                                                        ),
                                                    },
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            250.0,
                                                        ),
                                                        y0: NotNan(
                                                            250.0,
                                                        ),
                                                        x1: NotNan(
                                                            280.0,
                                                        ),
                                                        y1: NotNan(
                                                            280.0,
                                                        ),
                                                    },
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            300.0,
                                                        ),
                                                        y0: NotNan(
                                                            300.0,
                                                        ),
                                                        x1: NotNan(
                                                            330.0,
                                                        ),
                                                        y1: NotNan(
                                                            330.0,
                                                        ),
                                                    },
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            400.0,
                                                        ),
                                                        y0: NotNan(
                                                            400.0,
                                                        ),
                                                        x1: NotNan(
                                                            500.0,
                                                        ),
                                                        y1: NotNan(
                                                            440.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        120.0,
                                                    ),
                                                    y0: NotNan(
                                                        0.0,
                                                    ),
                                                    x1: NotNan(
                                                        500.0,
                                                    ),
                                                    y1: NotNan(
                                                        440.0,
                                                    ),
                                                },
                                            },
                                        ),
                                    ),
                                },
                                opt_p_calculated: Some(
                                    LayoutCalculated {
                                        size_constraints: StateAnchor(
                                            [
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -600.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -600.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        8,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        9,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        8,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        9,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                            ],
                                        ),
                                        cassowary_inherited_generals_sa: StateAnchor(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "align_x": Variable(
                                                        14,
                                                    ),
                                                    "align_y": Variable(
                                                        15,
                                                    ),
                                                    "align_z": Variable(
                                                        16,
                                                    ),
                                                    "baseline": Variable(
                                                        22,
                                                    ),
                                                    "bottom": Variable(
                                                        8,
                                                    ),
                                                    "height": Variable(
                                                        5,
                                                    ),
                                                    "hgap": Variable(
                                                        18,
                                                    ),
                                                    "left": Variable(
                                                        7,
                                                    ),
                                                    "origin_x": Variable(
                                                        11,
                                                    ),
                                                    "origin_y": Variable(
                                                        12,
                                                    ),
                                                    "origin_z": Variable(
                                                        13,
                                                    ),
                                                    "right": Variable(
                                                        9,
                                                    ),
                                                    "top": Variable(
                                                        6,
                                                    ),
                                                    "vgap": Variable(
                                                        20,
                                                    ),
                                                    "width": Variable(
                                                        4,
                                                    ),
                                                    "z": Variable(
                                                        10,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        18,
                                                    ): 10.0,
                                                    Variable(
                                                        20,
                                                    ): 10.0,
                                                    Variable(
                                                        22,
                                                    ): 16.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "baseline": Variable(
                                                        21,
                                                    ),
                                                    "hgap": Variable(
                                                        17,
                                                    ),
                                                    "vgap": Variable(
                                                        19,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        17,
                                                    ): 10.0,
                                                    Variable(
                                                        19,
                                                    ): 10.0,
                                                    Variable(
                                                        21,
                                                    ): 16.0,
                                                },
                                                parent: None,
                                            },
                                        ),
                                        cass_or_calc_size: StateAnchor(
                                            [
                                                [
                                                    600.0,
                                                    600.0,
                                                ],
                                            ],
                                        ),
                                        origin: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        align: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        translation: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        coordinates_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        cass_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        matrix: StateAnchor(
                                            Mat4(
                                                [
                                                    [
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                    ],
                                                ],
                                            ),
                                        ),
                                        loc_styles: StateAnchor(
                                            Style {
                                                media_rules: {},
                                                rules: [
                                                    Rule {
                                                        value: Length(
                                                            Simplex(
                                                                ExactLengthSimplex {
                                                                    unit: Px,
                                                                    value: NotNan(
                                                                        600.0,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    Rule {
                                                        value: Length(
                                                            Simplex(
                                                                ExactLengthSimplex {
                                                                    unit: Px,
                                                                    value: NotNan(
                                                                        600.0,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    Rule {
                                                        value: StringValue(
                                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                        ),
                                                    },
                                                ],
                                                updated_at: [
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:13",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:17",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:31",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:45",
                                                ],
                                                pseudo: None,
                                                media: None,
                                                name: "",
                                                keyframes: Keyframes {
                                                    frames: [],
                                                },
                                                combinator: None,
                                                pre_combinators: [],
                                            },
                                        ),
                                        world: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
                layout: Layout {
                    w: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Px,
                                            value: NotNan(
                                                100.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    h: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Px,
                                            value: NotNan(
                                                40.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    z: StateVar(
                        StateAnchor(
                            0,
                        ),
                    ),
                    origin_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Px,
                                            value: NotNan(
                                                0.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    origin_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Px,
                                            value: NotNan(
                                                0.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    origin_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Px,
                                            value: NotNan(
                                                400.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    align_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Px,
                                            value: NotNan(
                                                400.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    align_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    cassowary_constants: StateVar(
                        StateAnchor(
                            [],
                        ),
                    ),
                    cassowary_selectors: StateVar(
                        [],
                    ),
                    cassowary_generals: StateVar(
                        CassowaryGeneralMap {
                            map: {},
                            v_v_suggest: {},
                            virtual_constraints: {},
                            top_virtual_constraints: {},
                            top_map: {},
                            top_v_v_suggest: {},
                            parent: None,
                        },
                    ),
                },
                styles: StateVar(
                    {
                        TypeName(
                            "CssBorderColor",
                        ): StateAnchor(
                            Rgba(
                                1.0,
                                0.0,
                                1.0,
                                1.0,
                            ),
                        ),
                        TypeName(
                            "CssBorderWidth",
                        ): StateAnchor(
                            Length(
                                Simplex(
                                    ExactLengthSimplex {
                                        unit: Px,
                                        value: NotNan(
                                            7.0,
                                        ),
                                    },
                                ),
                            ),
                        ),
                        TypeName(
                            "CssFill",
                        ): StateAnchor(
                            Rgba(
                                1.0,
                                1.0,
                                0.0,
                                1.0,
                            ),
                        ),
                    },
                ),
                path_styles: StateVar(
                    {},
                ),
                path_layouts: StateVar(
                    {},
                ),
                other_css_styles: StateVar(
                    Style {
                        media_rules: {},
                        rules: [],
                        updated_at: [
                            "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:942:45",
                        ],
                        pseudo: None,
                        media: None,
                        name: "",
                        keyframes: Keyframes {
                            frames: [],
                        },
                        combinator: None,
                        pre_combinators: [],
                    },
                ),
                edge_nodes: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a4")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    100.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    40.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    400.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    400.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {},
                                                v_v_suggest: {},
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {},
                                                top_v_v_suggest: {},
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    101,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            -100.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    102,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            -40.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    106,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    104,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    101,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    105,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    103,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    102,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    105,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    103,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    106,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    104,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    101,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    102,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    103,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    104,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    111,
                                                ),
                                                "align_y": Variable(
                                                    112,
                                                ),
                                                "align_z": Variable(
                                                    113,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    105,
                                                ),
                                                "height": Variable(
                                                    102,
                                                ),
                                                "hgap": Variable(
                                                    1,
                                                ),
                                                "left": Variable(
                                                    104,
                                                ),
                                                "my_other_gap": Variable(
                                                    3,
                                                ),
                                                "origin_x": Variable(
                                                    108,
                                                ),
                                                "origin_y": Variable(
                                                    109,
                                                ),
                                                "origin_z": Variable(
                                                    110,
                                                ),
                                                "right": Variable(
                                                    106,
                                                ),
                                                "top": Variable(
                                                    103,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    101,
                                                ),
                                                "z": Variable(
                                                    107,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    1,
                                                ): 120.0,
                                                Variable(
                                                    3,
                                                ): 28.0,
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "my_other_gap": Variable(
                                                    2,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    0,
                                                ): 120.0,
                                                Variable(
                                                    2,
                                                ): 28.0,
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: Some(
                                                CassowaryGeneralMap {
                                                    map: {
                                                        "align_x": Variable(
                                                            46,
                                                        ),
                                                        "align_y": Variable(
                                                            47,
                                                        ),
                                                        "align_z": Variable(
                                                            48,
                                                        ),
                                                        "baseline": Variable(
                                                            22,
                                                        ),
                                                        "bottom": Variable(
                                                            40,
                                                        ),
                                                        "height": Variable(
                                                            37,
                                                        ),
                                                        "hgap": Variable(
                                                            1,
                                                        ),
                                                        "left": Variable(
                                                            39,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            3,
                                                        ),
                                                        "origin_x": Variable(
                                                            43,
                                                        ),
                                                        "origin_y": Variable(
                                                            44,
                                                        ),
                                                        "origin_z": Variable(
                                                            45,
                                                        ),
                                                        "right": Variable(
                                                            41,
                                                        ),
                                                        "top": Variable(
                                                            38,
                                                        ),
                                                        "vgap": Variable(
                                                            20,
                                                        ),
                                                        "width": Variable(
                                                            36,
                                                        ),
                                                        "z": Variable(
                                                            42,
                                                        ),
                                                    },
                                                    v_v_suggest: {
                                                        Variable(
                                                            1,
                                                        ): 120.0,
                                                        Variable(
                                                            3,
                                                        ): 28.0,
                                                        Variable(
                                                            18,
                                                        ): 10.0,
                                                        Variable(
                                                            20,
                                                        ): 10.0,
                                                        Variable(
                                                            22,
                                                        ): 16.0,
                                                    },
                                                    virtual_constraints: {},
                                                    top_virtual_constraints: {},
                                                    top_map: {
                                                        "baseline": Variable(
                                                            21,
                                                        ),
                                                        "hgap": Variable(
                                                            17,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            2,
                                                        ),
                                                        "vgap": Variable(
                                                            19,
                                                        ),
                                                    },
                                                    top_v_v_suggest: {
                                                        Variable(
                                                            0,
                                                        ): 120.0,
                                                        Variable(
                                                            2,
                                                        ): 28.0,
                                                        Variable(
                                                            17,
                                                        ): 10.0,
                                                        Variable(
                                                            19,
                                                        ): 10.0,
                                                        Variable(
                                                            21,
                                                        ): 16.0,
                                                    },
                                                    parent: Some(
                                                        CassowaryGeneralMap {
                                                            map: {
                                                                "align_x": Variable(
                                                                    14,
                                                                ),
                                                                "align_y": Variable(
                                                                    15,
                                                                ),
                                                                "align_z": Variable(
                                                                    16,
                                                                ),
                                                                "baseline": Variable(
                                                                    22,
                                                                ),
                                                                "bottom": Variable(
                                                                    8,
                                                                ),
                                                                "height": Variable(
                                                                    5,
                                                                ),
                                                                "hgap": Variable(
                                                                    18,
                                                                ),
                                                                "left": Variable(
                                                                    7,
                                                                ),
                                                                "origin_x": Variable(
                                                                    11,
                                                                ),
                                                                "origin_y": Variable(
                                                                    12,
                                                                ),
                                                                "origin_z": Variable(
                                                                    13,
                                                                ),
                                                                "right": Variable(
                                                                    9,
                                                                ),
                                                                "top": Variable(
                                                                    6,
                                                                ),
                                                                "vgap": Variable(
                                                                    20,
                                                                ),
                                                                "width": Variable(
                                                                    4,
                                                                ),
                                                                "z": Variable(
                                                                    10,
                                                                ),
                                                            },
                                                            v_v_suggest: {
                                                                Variable(
                                                                    18,
                                                                ): 10.0,
                                                                Variable(
                                                                    20,
                                                                ): 10.0,
                                                                Variable(
                                                                    22,
                                                                ): 16.0,
                                                            },
                                                            virtual_constraints: {},
                                                            top_virtual_constraints: {},
                                                            top_map: {
                                                                "baseline": Variable(
                                                                    21,
                                                                ),
                                                                "hgap": Variable(
                                                                    17,
                                                                ),
                                                                "vgap": Variable(
                                                                    19,
                                                                ),
                                                            },
                                                            top_v_v_suggest: {
                                                                Variable(
                                                                    17,
                                                                ): 10.0,
                                                                Variable(
                                                                    19,
                                                                ): 10.0,
                                                                Variable(
                                                                    21,
                                                                ): 16.0,
                                                            },
                                                            parent: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                100.0,
                                                40.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            400.0,
                                            400.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            400.0,
                                            400.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            400.0,
                                            400.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    400.0,
                                                    400.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,400,400,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            400.0,
                                            400.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            111,
                                        ),
                                        "align_y": Variable(
                                            112,
                                        ),
                                        "align_z": Variable(
                                            113,
                                        ),
                                        "bottom": Variable(
                                            105,
                                        ),
                                        "height": Variable(
                                            102,
                                        ),
                                        "left": Variable(
                                            104,
                                        ),
                                        "origin_x": Variable(
                                            108,
                                        ),
                                        "origin_y": Variable(
                                            109,
                                        ),
                                        "origin_z": Variable(
                                            110,
                                        ),
                                        "right": Variable(
                                            106,
                                        ),
                                        "top": Variable(
                                            103,
                                        ),
                                        "width": Variable(
                                            101,
                                        ),
                                        "z": Variable(
                                            107,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            101,
                                        ): "width",
                                        Variable(
                                            102,
                                        ): "height",
                                        Variable(
                                            103,
                                        ): "top",
                                        Variable(
                                            104,
                                        ): "left",
                                        Variable(
                                            105,
                                        ): "bottom",
                                        Variable(
                                            106,
                                        ): "right",
                                        Variable(
                                            107,
                                        ): "z",
                                        Variable(
                                            108,
                                        ): "origin_x",
                                        Variable(
                                            109,
                                        ): "origin_y",
                                        Variable(
                                            110,
                                        ): "origin_z",
                                        Variable(
                                            111,
                                        ): "align_x",
                                        Variable(
                                            112,
                                        ): "align_y",
                                        Variable(
                                            113,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {},
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            0,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            1,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            2,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            3,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            101,
                                        ): (
                                            NotNan(
                                                100.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a4\"))))])[width] ",
                                        ),
                                        Variable(
                                            102,
                                        ): (
                                            NotNan(
                                                40.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a4\"))))])[height] ",
                                        ),
                                        Variable(
                                            103,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a4\"))))])[top] ",
                                        ),
                                        Variable(
                                            104,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a4\"))))])[left] ",
                                        ),
                                        Variable(
                                            105,
                                        ): (
                                            NotNan(
                                                40.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a4\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            106,
                                        ): (
                                            NotNan(
                                                100.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a4\"))))])[right] ",
                                        ),
                                        Variable(
                                            108,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a4\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            109,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a4\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            111,
                                        ): (
                                            NotNan(
                                                400.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a4\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            112,
                                        ): (
                                            NotNan(
                                                400.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a4\"))))])[align_y] ",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            100.0,
                                        ),
                                        Some(
                                            40.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,400,400,0,1);\n width: 100px;\nheight: 40px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {
                                            TypeName(
                                                "CssBorderColor",
                                            ): StateAnchor(
                                                Rgba(
                                                    1.0,
                                                    0.0,
                                                    1.0,
                                                    1.0,
                                                ),
                                            ),
                                            TypeName(
                                                "CssBorderWidth",
                                            ): StateAnchor(
                                                Length(
                                                    Simplex(
                                                        ExactLengthSimplex {
                                                            unit: Px,
                                                            value: NotNan(
                                                                7.0,
                                                            ),
                                                        },
                                                    ),
                                                ),
                                            ),
                                            TypeName(
                                                "CssFill",
                                            ): StateAnchor(
                                                Rgba(
                                                    1.0,
                                                    1.0,
                                                    0.0,
                                                    1.0,
                                                ),
                                            ),
                                        },
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                400.0,
                                                400.0,
                                                0.0,
                                            ],
                                            100.0,
                                            40.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            400.0,
                                            400.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        None,
                                    ),
                                },
                                opt_p_calculated: Some(
                                    LayoutCalculated {
                                        size_constraints: StateAnchor(
                                            [
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -0.9,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -0.9,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        41,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        40,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        40,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        41,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                            ],
                                        ),
                                        cassowary_inherited_generals_sa: StateAnchor(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "align_x": Variable(
                                                        46,
                                                    ),
                                                    "align_y": Variable(
                                                        47,
                                                    ),
                                                    "align_z": Variable(
                                                        48,
                                                    ),
                                                    "baseline": Variable(
                                                        22,
                                                    ),
                                                    "bottom": Variable(
                                                        40,
                                                    ),
                                                    "height": Variable(
                                                        37,
                                                    ),
                                                    "hgap": Variable(
                                                        1,
                                                    ),
                                                    "left": Variable(
                                                        39,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        3,
                                                    ),
                                                    "origin_x": Variable(
                                                        43,
                                                    ),
                                                    "origin_y": Variable(
                                                        44,
                                                    ),
                                                    "origin_z": Variable(
                                                        45,
                                                    ),
                                                    "right": Variable(
                                                        41,
                                                    ),
                                                    "top": Variable(
                                                        38,
                                                    ),
                                                    "vgap": Variable(
                                                        20,
                                                    ),
                                                    "width": Variable(
                                                        36,
                                                    ),
                                                    "z": Variable(
                                                        42,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        1,
                                                    ): 120.0,
                                                    Variable(
                                                        3,
                                                    ): 28.0,
                                                    Variable(
                                                        18,
                                                    ): 10.0,
                                                    Variable(
                                                        20,
                                                    ): 10.0,
                                                    Variable(
                                                        22,
                                                    ): 16.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "baseline": Variable(
                                                        21,
                                                    ),
                                                    "hgap": Variable(
                                                        17,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        2,
                                                    ),
                                                    "vgap": Variable(
                                                        19,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        0,
                                                    ): 120.0,
                                                    Variable(
                                                        2,
                                                    ): 28.0,
                                                    Variable(
                                                        17,
                                                    ): 10.0,
                                                    Variable(
                                                        19,
                                                    ): 10.0,
                                                    Variable(
                                                        21,
                                                    ): 16.0,
                                                },
                                                parent: Some(
                                                    CassowaryGeneralMap {
                                                        map: {
                                                            "align_x": Variable(
                                                                14,
                                                            ),
                                                            "align_y": Variable(
                                                                15,
                                                            ),
                                                            "align_z": Variable(
                                                                16,
                                                            ),
                                                            "baseline": Variable(
                                                                22,
                                                            ),
                                                            "bottom": Variable(
                                                                8,
                                                            ),
                                                            "height": Variable(
                                                                5,
                                                            ),
                                                            "hgap": Variable(
                                                                18,
                                                            ),
                                                            "left": Variable(
                                                                7,
                                                            ),
                                                            "origin_x": Variable(
                                                                11,
                                                            ),
                                                            "origin_y": Variable(
                                                                12,
                                                            ),
                                                            "origin_z": Variable(
                                                                13,
                                                            ),
                                                            "right": Variable(
                                                                9,
                                                            ),
                                                            "top": Variable(
                                                                6,
                                                            ),
                                                            "vgap": Variable(
                                                                20,
                                                            ),
                                                            "width": Variable(
                                                                4,
                                                            ),
                                                            "z": Variable(
                                                                10,
                                                            ),
                                                        },
                                                        v_v_suggest: {
                                                            Variable(
                                                                18,
                                                            ): 10.0,
                                                            Variable(
                                                                20,
                                                            ): 10.0,
                                                            Variable(
                                                                22,
                                                            ): 16.0,
                                                        },
                                                        virtual_constraints: {},
                                                        top_virtual_constraints: {},
                                                        top_map: {
                                                            "baseline": Variable(
                                                                21,
                                                            ),
                                                            "hgap": Variable(
                                                                17,
                                                            ),
                                                            "vgap": Variable(
                                                                19,
                                                            ),
                                                        },
                                                        top_v_v_suggest: {
                                                            Variable(
                                                                17,
                                                            ): 10.0,
                                                            Variable(
                                                                19,
                                                            ): 10.0,
                                                            Variable(
                                                                21,
                                                            ): 16.0,
                                                        },
                                                        parent: None,
                                                    },
                                                ),
                                            },
                                        ),
                                        cass_or_calc_size: StateAnchor(
                                            [
                                                [
                                                    540.0,
                                                    540.0,
                                                ],
                                            ],
                                        ),
                                        origin: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        align: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        translation: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        coordinates_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        cass_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        matrix: StateAnchor(
                                            Mat4(
                                                [
                                                    [
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                    ],
                                                ],
                                            ),
                                        ),
                                        loc_styles: StateAnchor(
                                            Style {
                                                media_rules: {},
                                                rules: [
                                                    Rule {
                                                        value: StringValue(
                                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                        ),
                                                    },
                                                ],
                                                updated_at: [
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                                ],
                                                pseudo: None,
                                                media: None,
                                                name: "",
                                                keyframes: Keyframes {
                                                    frames: [],
                                                },
                                                combinator: None,
                                                pre_combinators: [],
                                            },
                                        ),
                                        world: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            source_nix: StateVar(
                Some(
                    NodeIndex("a1"),
                ),
            ),
            target_nix: StateVar(
                Some(
                    NodeIndex("a4"),
                ),
            ),
        },
        EdgeIndex(OptionNodeIndex(Some(NodeIndex("a2")))->OptionNodeIndex(Some(NodeIndex("Ev-CLICK-iis")))): Edge {
            item: EmgEdgeItem {
                id: StateVar(
                    StateAnchor(
                        EdgeIndex(OptionNodeIndex(Some(NodeIndex("a2")))->OptionNodeIndex(Some(NodeIndex("Ev-CLICK-iis")))),
                    ),
                ),
                paths: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a2")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    20.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {},
                                                v_v_suggest: {},
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {},
                                                top_v_v_suggest: {},
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    76,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            -20.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    80,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    78,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    75,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    79,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    77,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    76,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    79,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    77,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    80,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    78,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    75,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    76,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    77,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    78,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    85,
                                                ),
                                                "align_y": Variable(
                                                    86,
                                                ),
                                                "align_z": Variable(
                                                    87,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    79,
                                                ),
                                                "height": Variable(
                                                    76,
                                                ),
                                                "hgap": Variable(
                                                    1,
                                                ),
                                                "left": Variable(
                                                    78,
                                                ),
                                                "my_other_gap": Variable(
                                                    3,
                                                ),
                                                "origin_x": Variable(
                                                    82,
                                                ),
                                                "origin_y": Variable(
                                                    83,
                                                ),
                                                "origin_z": Variable(
                                                    84,
                                                ),
                                                "right": Variable(
                                                    80,
                                                ),
                                                "top": Variable(
                                                    77,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    75,
                                                ),
                                                "z": Variable(
                                                    81,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    1,
                                                ): 120.0,
                                                Variable(
                                                    3,
                                                ): 28.0,
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "my_other_gap": Variable(
                                                    2,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    0,
                                                ): 120.0,
                                                Variable(
                                                    2,
                                                ): 28.0,
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: Some(
                                                CassowaryGeneralMap {
                                                    map: {
                                                        "align_x": Variable(
                                                            46,
                                                        ),
                                                        "align_y": Variable(
                                                            47,
                                                        ),
                                                        "align_z": Variable(
                                                            48,
                                                        ),
                                                        "baseline": Variable(
                                                            22,
                                                        ),
                                                        "bottom": Variable(
                                                            40,
                                                        ),
                                                        "height": Variable(
                                                            37,
                                                        ),
                                                        "hgap": Variable(
                                                            1,
                                                        ),
                                                        "left": Variable(
                                                            39,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            3,
                                                        ),
                                                        "origin_x": Variable(
                                                            43,
                                                        ),
                                                        "origin_y": Variable(
                                                            44,
                                                        ),
                                                        "origin_z": Variable(
                                                            45,
                                                        ),
                                                        "right": Variable(
                                                            41,
                                                        ),
                                                        "top": Variable(
                                                            38,
                                                        ),
                                                        "vgap": Variable(
                                                            20,
                                                        ),
                                                        "width": Variable(
                                                            36,
                                                        ),
                                                        "z": Variable(
                                                            42,
                                                        ),
                                                    },
                                                    v_v_suggest: {
                                                        Variable(
                                                            1,
                                                        ): 120.0,
                                                        Variable(
                                                            3,
                                                        ): 28.0,
                                                        Variable(
                                                            18,
                                                        ): 10.0,
                                                        Variable(
                                                            20,
                                                        ): 10.0,
                                                        Variable(
                                                            22,
                                                        ): 16.0,
                                                    },
                                                    virtual_constraints: {},
                                                    top_virtual_constraints: {},
                                                    top_map: {
                                                        "baseline": Variable(
                                                            21,
                                                        ),
                                                        "hgap": Variable(
                                                            17,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            2,
                                                        ),
                                                        "vgap": Variable(
                                                            19,
                                                        ),
                                                    },
                                                    top_v_v_suggest: {
                                                        Variable(
                                                            0,
                                                        ): 120.0,
                                                        Variable(
                                                            2,
                                                        ): 28.0,
                                                        Variable(
                                                            17,
                                                        ): 10.0,
                                                        Variable(
                                                            19,
                                                        ): 10.0,
                                                        Variable(
                                                            21,
                                                        ): 16.0,
                                                    },
                                                    parent: Some(
                                                        CassowaryGeneralMap {
                                                            map: {
                                                                "align_x": Variable(
                                                                    14,
                                                                ),
                                                                "align_y": Variable(
                                                                    15,
                                                                ),
                                                                "align_z": Variable(
                                                                    16,
                                                                ),
                                                                "baseline": Variable(
                                                                    22,
                                                                ),
                                                                "bottom": Variable(
                                                                    8,
                                                                ),
                                                                "height": Variable(
                                                                    5,
                                                                ),
                                                                "hgap": Variable(
                                                                    18,
                                                                ),
                                                                "left": Variable(
                                                                    7,
                                                                ),
                                                                "origin_x": Variable(
                                                                    11,
                                                                ),
                                                                "origin_y": Variable(
                                                                    12,
                                                                ),
                                                                "origin_z": Variable(
                                                                    13,
                                                                ),
                                                                "right": Variable(
                                                                    9,
                                                                ),
                                                                "top": Variable(
                                                                    6,
                                                                ),
                                                                "vgap": Variable(
                                                                    20,
                                                                ),
                                                                "width": Variable(
                                                                    4,
                                                                ),
                                                                "z": Variable(
                                                                    10,
                                                                ),
                                                            },
                                                            v_v_suggest: {
                                                                Variable(
                                                                    18,
                                                                ): 10.0,
                                                                Variable(
                                                                    20,
                                                                ): 10.0,
                                                                Variable(
                                                                    22,
                                                                ): 16.0,
                                                            },
                                                            virtual_constraints: {},
                                                            top_virtual_constraints: {},
                                                            top_map: {
                                                                "baseline": Variable(
                                                                    21,
                                                                ),
                                                                "hgap": Variable(
                                                                    17,
                                                                ),
                                                                "vgap": Variable(
                                                                    19,
                                                                ),
                                                            },
                                                            top_v_v_suggest: {
                                                                Variable(
                                                                    17,
                                                                ): 10.0,
                                                                Variable(
                                                                    19,
                                                                ): 10.0,
                                                                Variable(
                                                                    21,
                                                                ): 16.0,
                                                            },
                                                            parent: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                300.0,
                                                20.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            120.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            120.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    120.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,120,0,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            120.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            85,
                                        ),
                                        "align_y": Variable(
                                            86,
                                        ),
                                        "align_z": Variable(
                                            87,
                                        ),
                                        "bottom": Variable(
                                            79,
                                        ),
                                        "height": Variable(
                                            76,
                                        ),
                                        "left": Variable(
                                            78,
                                        ),
                                        "origin_x": Variable(
                                            82,
                                        ),
                                        "origin_y": Variable(
                                            83,
                                        ),
                                        "origin_z": Variable(
                                            84,
                                        ),
                                        "right": Variable(
                                            80,
                                        ),
                                        "top": Variable(
                                            77,
                                        ),
                                        "width": Variable(
                                            75,
                                        ),
                                        "z": Variable(
                                            81,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            75,
                                        ): "width",
                                        Variable(
                                            76,
                                        ): "height",
                                        Variable(
                                            77,
                                        ): "top",
                                        Variable(
                                            78,
                                        ): "left",
                                        Variable(
                                            79,
                                        ): "bottom",
                                        Variable(
                                            80,
                                        ): "right",
                                        Variable(
                                            81,
                                        ): "z",
                                        Variable(
                                            82,
                                        ): "origin_x",
                                        Variable(
                                            83,
                                        ): "origin_y",
                                        Variable(
                                            84,
                                        ): "origin_z",
                                        Variable(
                                            85,
                                        ): "align_x",
                                        Variable(
                                            86,
                                        ): "align_y",
                                        Variable(
                                            87,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {},
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            0,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            1,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            2,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            3,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            75,
                                        ): (
                                            NotNan(
                                                300.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))])[width] ",
                                        ),
                                        Variable(
                                            76,
                                        ): (
                                            NotNan(
                                                20.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))])[height] ",
                                        ),
                                        Variable(
                                            77,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))])[top] ",
                                        ),
                                        Variable(
                                            78,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))])[left] ",
                                        ),
                                        Variable(
                                            79,
                                        ): (
                                            NotNan(
                                                20.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            80,
                                        ): (
                                            NotNan(
                                                300.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))])[right] ",
                                        ),
                                        Variable(
                                            82,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            83,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            85,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            86,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))])[align_y] ",
                                        ),
                                        Variable(
                                            153,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))]) |=> #\"Ev-CLICK-iis\"[width]",
                                        ),
                                        Variable(
                                            154,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))]) |=> #\"Ev-CLICK-iis\"[height]",
                                        ),
                                        Variable(
                                            155,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))]) |=> #\"Ev-CLICK-iis\"[top]",
                                        ),
                                        Variable(
                                            156,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))]) |=> #\"Ev-CLICK-iis\"[left]",
                                        ),
                                        Variable(
                                            157,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))]) |=> #\"Ev-CLICK-iis\"[bottom]",
                                        ),
                                        Variable(
                                            158,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\"))))]) |=> #\"Ev-CLICK-iis\"[right]",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            300.0,
                                        ),
                                        Some(
                                            20.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,120,0,0,1);\n width: 300px;\nheight: 20px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {
                                            TypeName(
                                                "CssFill",
                                            ): StateAnchor(
                                                Rgba(
                                                    1.0,
                                                    0.5,
                                                    0.0,
                                                    1.0,
                                                ),
                                            ),
                                        },
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                120.0,
                                                0.0,
                                                0.0,
                                            ],
                                            300.0,
                                            20.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            120.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            120.0,
                                                        ),
                                                        y0: NotNan(
                                                            0.0,
                                                        ),
                                                        x1: NotNan(
                                                            120.0,
                                                        ),
                                                        y1: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        120.0,
                                                    ),
                                                    y0: NotNan(
                                                        0.0,
                                                    ),
                                                    x1: NotNan(
                                                        120.0,
                                                    ),
                                                    y1: NotNan(
                                                        0.0,
                                                    ),
                                                },
                                            },
                                        ),
                                    ),
                                },
                                opt_p_calculated: Some(
                                    LayoutCalculated {
                                        size_constraints: StateAnchor(
                                            [
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -0.9,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -0.9,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        41,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        40,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        40,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        41,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        36,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        37,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        38,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        39,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                            ],
                                        ),
                                        cassowary_inherited_generals_sa: StateAnchor(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "align_x": Variable(
                                                        46,
                                                    ),
                                                    "align_y": Variable(
                                                        47,
                                                    ),
                                                    "align_z": Variable(
                                                        48,
                                                    ),
                                                    "baseline": Variable(
                                                        22,
                                                    ),
                                                    "bottom": Variable(
                                                        40,
                                                    ),
                                                    "height": Variable(
                                                        37,
                                                    ),
                                                    "hgap": Variable(
                                                        1,
                                                    ),
                                                    "left": Variable(
                                                        39,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        3,
                                                    ),
                                                    "origin_x": Variable(
                                                        43,
                                                    ),
                                                    "origin_y": Variable(
                                                        44,
                                                    ),
                                                    "origin_z": Variable(
                                                        45,
                                                    ),
                                                    "right": Variable(
                                                        41,
                                                    ),
                                                    "top": Variable(
                                                        38,
                                                    ),
                                                    "vgap": Variable(
                                                        20,
                                                    ),
                                                    "width": Variable(
                                                        36,
                                                    ),
                                                    "z": Variable(
                                                        42,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        1,
                                                    ): 120.0,
                                                    Variable(
                                                        3,
                                                    ): 28.0,
                                                    Variable(
                                                        18,
                                                    ): 10.0,
                                                    Variable(
                                                        20,
                                                    ): 10.0,
                                                    Variable(
                                                        22,
                                                    ): 16.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "baseline": Variable(
                                                        21,
                                                    ),
                                                    "hgap": Variable(
                                                        17,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        2,
                                                    ),
                                                    "vgap": Variable(
                                                        19,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        0,
                                                    ): 120.0,
                                                    Variable(
                                                        2,
                                                    ): 28.0,
                                                    Variable(
                                                        17,
                                                    ): 10.0,
                                                    Variable(
                                                        19,
                                                    ): 10.0,
                                                    Variable(
                                                        21,
                                                    ): 16.0,
                                                },
                                                parent: Some(
                                                    CassowaryGeneralMap {
                                                        map: {
                                                            "align_x": Variable(
                                                                14,
                                                            ),
                                                            "align_y": Variable(
                                                                15,
                                                            ),
                                                            "align_z": Variable(
                                                                16,
                                                            ),
                                                            "baseline": Variable(
                                                                22,
                                                            ),
                                                            "bottom": Variable(
                                                                8,
                                                            ),
                                                            "height": Variable(
                                                                5,
                                                            ),
                                                            "hgap": Variable(
                                                                18,
                                                            ),
                                                            "left": Variable(
                                                                7,
                                                            ),
                                                            "origin_x": Variable(
                                                                11,
                                                            ),
                                                            "origin_y": Variable(
                                                                12,
                                                            ),
                                                            "origin_z": Variable(
                                                                13,
                                                            ),
                                                            "right": Variable(
                                                                9,
                                                            ),
                                                            "top": Variable(
                                                                6,
                                                            ),
                                                            "vgap": Variable(
                                                                20,
                                                            ),
                                                            "width": Variable(
                                                                4,
                                                            ),
                                                            "z": Variable(
                                                                10,
                                                            ),
                                                        },
                                                        v_v_suggest: {
                                                            Variable(
                                                                18,
                                                            ): 10.0,
                                                            Variable(
                                                                20,
                                                            ): 10.0,
                                                            Variable(
                                                                22,
                                                            ): 16.0,
                                                        },
                                                        virtual_constraints: {},
                                                        top_virtual_constraints: {},
                                                        top_map: {
                                                            "baseline": Variable(
                                                                21,
                                                            ),
                                                            "hgap": Variable(
                                                                17,
                                                            ),
                                                            "vgap": Variable(
                                                                19,
                                                            ),
                                                        },
                                                        top_v_v_suggest: {
                                                            Variable(
                                                                17,
                                                            ): 10.0,
                                                            Variable(
                                                                19,
                                                            ): 10.0,
                                                            Variable(
                                                                21,
                                                            ): 16.0,
                                                        },
                                                        parent: None,
                                                    },
                                                ),
                                            },
                                        ),
                                        cass_or_calc_size: StateAnchor(
                                            [
                                                [
                                                    540.0,
                                                    540.0,
                                                ],
                                            ],
                                        ),
                                        origin: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        align: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        translation: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        coordinates_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        cass_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        matrix: StateAnchor(
                                            Mat4(
                                                [
                                                    [
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                    ],
                                                ],
                                            ),
                                        ),
                                        loc_styles: StateAnchor(
                                            Style {
                                                media_rules: {},
                                                rules: [
                                                    Rule {
                                                        value: StringValue(
                                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                        ),
                                                    },
                                                ],
                                                updated_at: [
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                                ],
                                                pseudo: None,
                                                media: None,
                                                name: "",
                                                keyframes: Keyframes {
                                                    frames: [],
                                                },
                                                combinator: None,
                                                pre_combinators: [],
                                            },
                                        ),
                                        world: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
                layout: Layout {
                    w: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    h: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    z: StateVar(
                        StateAnchor(
                            0,
                        ),
                    ),
                    origin_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    origin_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    origin_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    cassowary_constants: StateVar(
                        StateAnchor(
                            [],
                        ),
                    ),
                    cassowary_selectors: StateVar(
                        [],
                    ),
                    cassowary_generals: StateVar(
                        CassowaryGeneralMap {
                            map: {},
                            v_v_suggest: {},
                            virtual_constraints: {},
                            top_virtual_constraints: {},
                            top_map: {},
                            top_v_v_suggest: {},
                            parent: None,
                        },
                    ),
                },
                styles: StateVar(
                    {},
                ),
                path_styles: StateVar(
                    {},
                ),
                path_layouts: StateVar(
                    {},
                ),
                other_css_styles: StateVar(
                    Style {
                        media_rules: {},
                        rules: [],
                        updated_at: [
                            "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:942:45",
                        ],
                        pseudo: None,
                        media: None,
                        name: "",
                        keyframes: Keyframes {
                            frames: [],
                        },
                        combinator: None,
                        pre_combinators: [],
                    },
                ),
                edge_nodes: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a1")))->OptionNodeIndex(Some(NodeIndex("a2")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("a2")))->OptionNodeIndex(Some(NodeIndex("Ev-CLICK-iis")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {},
                                                v_v_suggest: {},
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {},
                                                top_v_v_suggest: {},
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    158,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    156,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    153,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    157,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    155,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    154,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    157,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    155,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    158,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    156,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    153,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    154,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    155,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    156,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    163,
                                                ),
                                                "align_y": Variable(
                                                    164,
                                                ),
                                                "align_z": Variable(
                                                    165,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    157,
                                                ),
                                                "height": Variable(
                                                    154,
                                                ),
                                                "hgap": Variable(
                                                    1,
                                                ),
                                                "left": Variable(
                                                    156,
                                                ),
                                                "my_other_gap": Variable(
                                                    3,
                                                ),
                                                "origin_x": Variable(
                                                    160,
                                                ),
                                                "origin_y": Variable(
                                                    161,
                                                ),
                                                "origin_z": Variable(
                                                    162,
                                                ),
                                                "right": Variable(
                                                    158,
                                                ),
                                                "top": Variable(
                                                    155,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    153,
                                                ),
                                                "z": Variable(
                                                    159,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    1,
                                                ): 120.0,
                                                Variable(
                                                    3,
                                                ): 28.0,
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "my_other_gap": Variable(
                                                    2,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    0,
                                                ): 120.0,
                                                Variable(
                                                    2,
                                                ): 28.0,
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: Some(
                                                CassowaryGeneralMap {
                                                    map: {
                                                        "align_x": Variable(
                                                            85,
                                                        ),
                                                        "align_y": Variable(
                                                            86,
                                                        ),
                                                        "align_z": Variable(
                                                            87,
                                                        ),
                                                        "baseline": Variable(
                                                            22,
                                                        ),
                                                        "bottom": Variable(
                                                            79,
                                                        ),
                                                        "height": Variable(
                                                            76,
                                                        ),
                                                        "hgap": Variable(
                                                            1,
                                                        ),
                                                        "left": Variable(
                                                            78,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            3,
                                                        ),
                                                        "origin_x": Variable(
                                                            82,
                                                        ),
                                                        "origin_y": Variable(
                                                            83,
                                                        ),
                                                        "origin_z": Variable(
                                                            84,
                                                        ),
                                                        "right": Variable(
                                                            80,
                                                        ),
                                                        "top": Variable(
                                                            77,
                                                        ),
                                                        "vgap": Variable(
                                                            20,
                                                        ),
                                                        "width": Variable(
                                                            75,
                                                        ),
                                                        "z": Variable(
                                                            81,
                                                        ),
                                                    },
                                                    v_v_suggest: {
                                                        Variable(
                                                            1,
                                                        ): 120.0,
                                                        Variable(
                                                            3,
                                                        ): 28.0,
                                                        Variable(
                                                            18,
                                                        ): 10.0,
                                                        Variable(
                                                            20,
                                                        ): 10.0,
                                                        Variable(
                                                            22,
                                                        ): 16.0,
                                                    },
                                                    virtual_constraints: {},
                                                    top_virtual_constraints: {},
                                                    top_map: {
                                                        "baseline": Variable(
                                                            21,
                                                        ),
                                                        "hgap": Variable(
                                                            17,
                                                        ),
                                                        "my_other_gap": Variable(
                                                            2,
                                                        ),
                                                        "vgap": Variable(
                                                            19,
                                                        ),
                                                    },
                                                    top_v_v_suggest: {
                                                        Variable(
                                                            0,
                                                        ): 120.0,
                                                        Variable(
                                                            2,
                                                        ): 28.0,
                                                        Variable(
                                                            17,
                                                        ): 10.0,
                                                        Variable(
                                                            19,
                                                        ): 10.0,
                                                        Variable(
                                                            21,
                                                        ): 16.0,
                                                    },
                                                    parent: Some(
                                                        CassowaryGeneralMap {
                                                            map: {
                                                                "align_x": Variable(
                                                                    46,
                                                                ),
                                                                "align_y": Variable(
                                                                    47,
                                                                ),
                                                                "align_z": Variable(
                                                                    48,
                                                                ),
                                                                "baseline": Variable(
                                                                    22,
                                                                ),
                                                                "bottom": Variable(
                                                                    40,
                                                                ),
                                                                "height": Variable(
                                                                    37,
                                                                ),
                                                                "hgap": Variable(
                                                                    1,
                                                                ),
                                                                "left": Variable(
                                                                    39,
                                                                ),
                                                                "my_other_gap": Variable(
                                                                    3,
                                                                ),
                                                                "origin_x": Variable(
                                                                    43,
                                                                ),
                                                                "origin_y": Variable(
                                                                    44,
                                                                ),
                                                                "origin_z": Variable(
                                                                    45,
                                                                ),
                                                                "right": Variable(
                                                                    41,
                                                                ),
                                                                "top": Variable(
                                                                    38,
                                                                ),
                                                                "vgap": Variable(
                                                                    20,
                                                                ),
                                                                "width": Variable(
                                                                    36,
                                                                ),
                                                                "z": Variable(
                                                                    42,
                                                                ),
                                                            },
                                                            v_v_suggest: {
                                                                Variable(
                                                                    1,
                                                                ): 120.0,
                                                                Variable(
                                                                    3,
                                                                ): 28.0,
                                                                Variable(
                                                                    18,
                                                                ): 10.0,
                                                                Variable(
                                                                    20,
                                                                ): 10.0,
                                                                Variable(
                                                                    22,
                                                                ): 16.0,
                                                            },
                                                            virtual_constraints: {},
                                                            top_virtual_constraints: {},
                                                            top_map: {
                                                                "baseline": Variable(
                                                                    21,
                                                                ),
                                                                "hgap": Variable(
                                                                    17,
                                                                ),
                                                                "my_other_gap": Variable(
                                                                    2,
                                                                ),
                                                                "vgap": Variable(
                                                                    19,
                                                                ),
                                                            },
                                                            top_v_v_suggest: {
                                                                Variable(
                                                                    0,
                                                                ): 120.0,
                                                                Variable(
                                                                    2,
                                                                ): 28.0,
                                                                Variable(
                                                                    17,
                                                                ): 10.0,
                                                                Variable(
                                                                    19,
                                                                ): 10.0,
                                                                Variable(
                                                                    21,
                                                                ): 16.0,
                                                            },
                                                            parent: Some(
                                                                CassowaryGeneralMap {
                                                                    map: {
                                                                        "align_x": Variable(
                                                                            14,
                                                                        ),
                                                                        "align_y": Variable(
                                                                            15,
                                                                        ),
                                                                        "align_z": Variable(
                                                                            16,
                                                                        ),
                                                                        "baseline": Variable(
                                                                            22,
                                                                        ),
                                                                        "bottom": Variable(
                                                                            8,
                                                                        ),
                                                                        "height": Variable(
                                                                            5,
                                                                        ),
                                                                        "hgap": Variable(
                                                                            18,
                                                                        ),
                                                                        "left": Variable(
                                                                            7,
                                                                        ),
                                                                        "origin_x": Variable(
                                                                            11,
                                                                        ),
                                                                        "origin_y": Variable(
                                                                            12,
                                                                        ),
                                                                        "origin_z": Variable(
                                                                            13,
                                                                        ),
                                                                        "right": Variable(
                                                                            9,
                                                                        ),
                                                                        "top": Variable(
                                                                            6,
                                                                        ),
                                                                        "vgap": Variable(
                                                                            20,
                                                                        ),
                                                                        "width": Variable(
                                                                            4,
                                                                        ),
                                                                        "z": Variable(
                                                                            10,
                                                                        ),
                                                                    },
                                                                    v_v_suggest: {
                                                                        Variable(
                                                                            18,
                                                                        ): 10.0,
                                                                        Variable(
                                                                            20,
                                                                        ): 10.0,
                                                                        Variable(
                                                                            22,
                                                                        ): 16.0,
                                                                    },
                                                                    virtual_constraints: {},
                                                                    top_virtual_constraints: {},
                                                                    top_map: {
                                                                        "baseline": Variable(
                                                                            21,
                                                                        ),
                                                                        "hgap": Variable(
                                                                            17,
                                                                        ),
                                                                        "vgap": Variable(
                                                                            19,
                                                                        ),
                                                                    },
                                                                    top_v_v_suggest: {
                                                                        Variable(
                                                                            17,
                                                                        ): 10.0,
                                                                        Variable(
                                                                            19,
                                                                        ): 10.0,
                                                                        Variable(
                                                                            21,
                                                                        ): 16.0,
                                                                    },
                                                                    parent: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                0.0,
                                                0.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            120.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            163,
                                        ),
                                        "align_y": Variable(
                                            164,
                                        ),
                                        "align_z": Variable(
                                            165,
                                        ),
                                        "bottom": Variable(
                                            157,
                                        ),
                                        "height": Variable(
                                            154,
                                        ),
                                        "left": Variable(
                                            156,
                                        ),
                                        "origin_x": Variable(
                                            160,
                                        ),
                                        "origin_y": Variable(
                                            161,
                                        ),
                                        "origin_z": Variable(
                                            162,
                                        ),
                                        "right": Variable(
                                            158,
                                        ),
                                        "top": Variable(
                                            155,
                                        ),
                                        "width": Variable(
                                            153,
                                        ),
                                        "z": Variable(
                                            159,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            153,
                                        ): "width",
                                        Variable(
                                            154,
                                        ): "height",
                                        Variable(
                                            155,
                                        ): "top",
                                        Variable(
                                            156,
                                        ): "left",
                                        Variable(
                                            157,
                                        ): "bottom",
                                        Variable(
                                            158,
                                        ): "right",
                                        Variable(
                                            159,
                                        ): "z",
                                        Variable(
                                            160,
                                        ): "origin_x",
                                        Variable(
                                            161,
                                        ): "origin_y",
                                        Variable(
                                            162,
                                        ): "origin_z",
                                        Variable(
                                            163,
                                        ): "align_x",
                                        Variable(
                                            164,
                                        ): "align_y",
                                        Variable(
                                            165,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {},
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            0,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            1,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            2,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            3,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            153,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a2\")))->OptionNodeIndex(Some(NodeIndex(\"Ev-CLICK-iis\"))))])[width] ",
                                        ),
                                        Variable(
                                            154,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a2\")))->OptionNodeIndex(Some(NodeIndex(\"Ev-CLICK-iis\"))))])[height] ",
                                        ),
                                        Variable(
                                            155,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a2\")))->OptionNodeIndex(Some(NodeIndex(\"Ev-CLICK-iis\"))))])[top] ",
                                        ),
                                        Variable(
                                            156,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a2\")))->OptionNodeIndex(Some(NodeIndex(\"Ev-CLICK-iis\"))))])[left] ",
                                        ),
                                        Variable(
                                            157,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a2\")))->OptionNodeIndex(Some(NodeIndex(\"Ev-CLICK-iis\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            158,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a2\")))->OptionNodeIndex(Some(NodeIndex(\"Ev-CLICK-iis\"))))])[right] ",
                                        ),
                                        Variable(
                                            160,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a2\")))->OptionNodeIndex(Some(NodeIndex(\"Ev-CLICK-iis\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            161,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a2\")))->OptionNodeIndex(Some(NodeIndex(\"Ev-CLICK-iis\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            163,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a2\")))->OptionNodeIndex(Some(NodeIndex(\"Ev-CLICK-iis\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            164,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a1\")))->OptionNodeIndex(Some(NodeIndex(\"a2\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"a2\")))->OptionNodeIndex(Some(NodeIndex(\"Ev-CLICK-iis\"))))])[align_y] ",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            -0.0,
                                        ),
                                        Some(
                                            -0.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);\n width: -0px;\nheight: -0px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {},
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                            -0.0,
                                            -0.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            120.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        None,
                                    ),
                                },
                                opt_p_calculated: Some(
                                    LayoutCalculated {
                                        size_constraints: StateAnchor(
                                            [
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        76,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -20.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            900.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        80,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        78,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        75,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        79,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        77,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        76,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        79,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        77,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        80,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        78,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        75,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        76,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        77,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        78,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                            ],
                                        ),
                                        cassowary_inherited_generals_sa: StateAnchor(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "align_x": Variable(
                                                        85,
                                                    ),
                                                    "align_y": Variable(
                                                        86,
                                                    ),
                                                    "align_z": Variable(
                                                        87,
                                                    ),
                                                    "baseline": Variable(
                                                        22,
                                                    ),
                                                    "bottom": Variable(
                                                        79,
                                                    ),
                                                    "height": Variable(
                                                        76,
                                                    ),
                                                    "hgap": Variable(
                                                        1,
                                                    ),
                                                    "left": Variable(
                                                        78,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        3,
                                                    ),
                                                    "origin_x": Variable(
                                                        82,
                                                    ),
                                                    "origin_y": Variable(
                                                        83,
                                                    ),
                                                    "origin_z": Variable(
                                                        84,
                                                    ),
                                                    "right": Variable(
                                                        80,
                                                    ),
                                                    "top": Variable(
                                                        77,
                                                    ),
                                                    "vgap": Variable(
                                                        20,
                                                    ),
                                                    "width": Variable(
                                                        75,
                                                    ),
                                                    "z": Variable(
                                                        81,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        1,
                                                    ): 120.0,
                                                    Variable(
                                                        3,
                                                    ): 28.0,
                                                    Variable(
                                                        18,
                                                    ): 10.0,
                                                    Variable(
                                                        20,
                                                    ): 10.0,
                                                    Variable(
                                                        22,
                                                    ): 16.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "baseline": Variable(
                                                        21,
                                                    ),
                                                    "hgap": Variable(
                                                        17,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        2,
                                                    ),
                                                    "vgap": Variable(
                                                        19,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        0,
                                                    ): 120.0,
                                                    Variable(
                                                        2,
                                                    ): 28.0,
                                                    Variable(
                                                        17,
                                                    ): 10.0,
                                                    Variable(
                                                        19,
                                                    ): 10.0,
                                                    Variable(
                                                        21,
                                                    ): 16.0,
                                                },
                                                parent: Some(
                                                    CassowaryGeneralMap {
                                                        map: {
                                                            "align_x": Variable(
                                                                46,
                                                            ),
                                                            "align_y": Variable(
                                                                47,
                                                            ),
                                                            "align_z": Variable(
                                                                48,
                                                            ),
                                                            "baseline": Variable(
                                                                22,
                                                            ),
                                                            "bottom": Variable(
                                                                40,
                                                            ),
                                                            "height": Variable(
                                                                37,
                                                            ),
                                                            "hgap": Variable(
                                                                1,
                                                            ),
                                                            "left": Variable(
                                                                39,
                                                            ),
                                                            "my_other_gap": Variable(
                                                                3,
                                                            ),
                                                            "origin_x": Variable(
                                                                43,
                                                            ),
                                                            "origin_y": Variable(
                                                                44,
                                                            ),
                                                            "origin_z": Variable(
                                                                45,
                                                            ),
                                                            "right": Variable(
                                                                41,
                                                            ),
                                                            "top": Variable(
                                                                38,
                                                            ),
                                                            "vgap": Variable(
                                                                20,
                                                            ),
                                                            "width": Variable(
                                                                36,
                                                            ),
                                                            "z": Variable(
                                                                42,
                                                            ),
                                                        },
                                                        v_v_suggest: {
                                                            Variable(
                                                                1,
                                                            ): 120.0,
                                                            Variable(
                                                                3,
                                                            ): 28.0,
                                                            Variable(
                                                                18,
                                                            ): 10.0,
                                                            Variable(
                                                                20,
                                                            ): 10.0,
                                                            Variable(
                                                                22,
                                                            ): 16.0,
                                                        },
                                                        virtual_constraints: {},
                                                        top_virtual_constraints: {},
                                                        top_map: {
                                                            "baseline": Variable(
                                                                21,
                                                            ),
                                                            "hgap": Variable(
                                                                17,
                                                            ),
                                                            "my_other_gap": Variable(
                                                                2,
                                                            ),
                                                            "vgap": Variable(
                                                                19,
                                                            ),
                                                        },
                                                        top_v_v_suggest: {
                                                            Variable(
                                                                0,
                                                            ): 120.0,
                                                            Variable(
                                                                2,
                                                            ): 28.0,
                                                            Variable(
                                                                17,
                                                            ): 10.0,
                                                            Variable(
                                                                19,
                                                            ): 10.0,
                                                            Variable(
                                                                21,
                                                            ): 16.0,
                                                        },
                                                        parent: Some(
                                                            CassowaryGeneralMap {
                                                                map: {
                                                                    "align_x": Variable(
                                                                        14,
                                                                    ),
                                                                    "align_y": Variable(
                                                                        15,
                                                                    ),
                                                                    "align_z": Variable(
                                                                        16,
                                                                    ),
                                                                    "baseline": Variable(
                                                                        22,
                                                                    ),
                                                                    "bottom": Variable(
                                                                        8,
                                                                    ),
                                                                    "height": Variable(
                                                                        5,
                                                                    ),
                                                                    "hgap": Variable(
                                                                        18,
                                                                    ),
                                                                    "left": Variable(
                                                                        7,
                                                                    ),
                                                                    "origin_x": Variable(
                                                                        11,
                                                                    ),
                                                                    "origin_y": Variable(
                                                                        12,
                                                                    ),
                                                                    "origin_z": Variable(
                                                                        13,
                                                                    ),
                                                                    "right": Variable(
                                                                        9,
                                                                    ),
                                                                    "top": Variable(
                                                                        6,
                                                                    ),
                                                                    "vgap": Variable(
                                                                        20,
                                                                    ),
                                                                    "width": Variable(
                                                                        4,
                                                                    ),
                                                                    "z": Variable(
                                                                        10,
                                                                    ),
                                                                },
                                                                v_v_suggest: {
                                                                    Variable(
                                                                        18,
                                                                    ): 10.0,
                                                                    Variable(
                                                                        20,
                                                                    ): 10.0,
                                                                    Variable(
                                                                        22,
                                                                    ): 16.0,
                                                                },
                                                                virtual_constraints: {},
                                                                top_virtual_constraints: {},
                                                                top_map: {
                                                                    "baseline": Variable(
                                                                        21,
                                                                    ),
                                                                    "hgap": Variable(
                                                                        17,
                                                                    ),
                                                                    "vgap": Variable(
                                                                        19,
                                                                    ),
                                                                },
                                                                top_v_v_suggest: {
                                                                    Variable(
                                                                        17,
                                                                    ): 10.0,
                                                                    Variable(
                                                                        19,
                                                                    ): 10.0,
                                                                    Variable(
                                                                        21,
                                                                    ): 16.0,
                                                                },
                                                                parent: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        cass_or_calc_size: StateAnchor(
                                            [
                                                [
                                                    300.0,
                                                    20.0,
                                                ],
                                            ],
                                        ),
                                        origin: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        align: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        translation: StateAnchor(
                                            [
                                                120.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        coordinates_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        cass_trans: StateAnchor(
                                            [
                                                120.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        matrix: StateAnchor(
                                            Mat4(
                                                [
                                                    [
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        120.0,
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                    ],
                                                ],
                                            ),
                                        ),
                                        loc_styles: StateAnchor(
                                            Style {
                                                media_rules: {},
                                                rules: [
                                                    Rule {
                                                        value: StringValue(
                                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,120,0,0,1)",
                                                        ),
                                                    },
                                                ],
                                                updated_at: [
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                                ],
                                                pseudo: None,
                                                media: None,
                                                name: "",
                                                keyframes: Keyframes {
                                                    frames: [],
                                                },
                                                combinator: None,
                                                pre_combinators: [],
                                            },
                                        ),
                                        world: StateAnchor(
                                            [
                                                120.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            source_nix: StateVar(
                Some(
                    NodeIndex("a2"),
                ),
            ),
            target_nix: StateVar(
                Some(
                    NodeIndex("Ev-CLICK-iis"),
                ),
            ),
        },
        EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("Ev-CLICK-OBA")))): Edge {
            item: EmgEdgeItem {
                id: StateVar(
                    StateAnchor(
                        EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("Ev-CLICK-OBA")))),
                    ),
                ),
                paths: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Empty,
                                                                value: NotNan(
                                                                    600.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Empty,
                                                                value: NotNan(
                                                                    600.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {},
                                                v_v_suggest: {},
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {},
                                                top_v_v_suggest: {},
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    4,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            -600.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    5,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            -600.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    8,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    6,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    5,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    9,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    7,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    4,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    8,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    6,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    9,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    7,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    4,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    5,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    6,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    7,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    14,
                                                ),
                                                "align_y": Variable(
                                                    15,
                                                ),
                                                "align_z": Variable(
                                                    16,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    8,
                                                ),
                                                "height": Variable(
                                                    5,
                                                ),
                                                "hgap": Variable(
                                                    18,
                                                ),
                                                "left": Variable(
                                                    7,
                                                ),
                                                "origin_x": Variable(
                                                    11,
                                                ),
                                                "origin_y": Variable(
                                                    12,
                                                ),
                                                "origin_z": Variable(
                                                    13,
                                                ),
                                                "right": Variable(
                                                    9,
                                                ),
                                                "top": Variable(
                                                    6,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    4,
                                                ),
                                                "z": Variable(
                                                    10,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: None,
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                600.0,
                                                600.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    600.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                },
                                                Rule {
                                                    value: Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    600.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                },
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:13",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:17",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:31",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:45",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            14,
                                        ),
                                        "align_y": Variable(
                                            15,
                                        ),
                                        "align_z": Variable(
                                            16,
                                        ),
                                        "bottom": Variable(
                                            8,
                                        ),
                                        "height": Variable(
                                            5,
                                        ),
                                        "left": Variable(
                                            7,
                                        ),
                                        "origin_x": Variable(
                                            11,
                                        ),
                                        "origin_y": Variable(
                                            12,
                                        ),
                                        "origin_z": Variable(
                                            13,
                                        ),
                                        "right": Variable(
                                            9,
                                        ),
                                        "top": Variable(
                                            6,
                                        ),
                                        "width": Variable(
                                            4,
                                        ),
                                        "z": Variable(
                                            10,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            4,
                                        ): "width",
                                        Variable(
                                            5,
                                        ): "height",
                                        Variable(
                                            6,
                                        ): "top",
                                        Variable(
                                            7,
                                        ): "left",
                                        Variable(
                                            8,
                                        ): "bottom",
                                        Variable(
                                            9,
                                        ): "right",
                                        Variable(
                                            10,
                                        ): "z",
                                        Variable(
                                            11,
                                        ): "origin_x",
                                        Variable(
                                            12,
                                        ): "origin_y",
                                        Variable(
                                            13,
                                        ): "origin_z",
                                        Variable(
                                            14,
                                        ): "align_x",
                                        Variable(
                                            15,
                                        ): "align_y",
                                        Variable(
                                            16,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {},
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            4,
                                        ): (
                                            NotNan(
                                                600.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[width] ",
                                        ),
                                        Variable(
                                            5,
                                        ): (
                                            NotNan(
                                                600.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[height] ",
                                        ),
                                        Variable(
                                            6,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[top] ",
                                        ),
                                        Variable(
                                            7,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[left] ",
                                        ),
                                        Variable(
                                            8,
                                        ): (
                                            NotNan(
                                                600.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            9,
                                        ): (
                                            NotNan(
                                                600.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[right] ",
                                        ),
                                        Variable(
                                            11,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            12,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            14,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            15,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[align_y] ",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            23,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[width]",
                                        ),
                                        Variable(
                                            24,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[height]",
                                        ),
                                        Variable(
                                            25,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[top]",
                                        ),
                                        Variable(
                                            26,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[left]",
                                        ),
                                        Variable(
                                            27,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[bottom]",
                                        ),
                                        Variable(
                                            28,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[right]",
                                        ),
                                        Variable(
                                            36,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[width]",
                                        ),
                                        Variable(
                                            37,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[height]",
                                        ),
                                        Variable(
                                            38,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[top]",
                                        ),
                                        Variable(
                                            39,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[left]",
                                        ),
                                        Variable(
                                            40,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[bottom]",
                                        ),
                                        Variable(
                                            41,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[right]",
                                        ),
                                        Variable(
                                            49,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[width]",
                                        ),
                                        Variable(
                                            50,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[height]",
                                        ),
                                        Variable(
                                            51,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[top]",
                                        ),
                                        Variable(
                                            52,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[left]",
                                        ),
                                        Variable(
                                            53,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[bottom]",
                                        ),
                                        Variable(
                                            54,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[right]",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            600.0,
                                        ),
                                        Some(
                                            600.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "width: 600px;\nheight: 600px;\ntransform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);\n width: 600px;\nheight: 600px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {},
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                            600.0,
                                            600.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            0.0,
                                                        ),
                                                        y0: NotNan(
                                                            0.0,
                                                        ),
                                                        x1: NotNan(
                                                            540.0,
                                                        ),
                                                        y1: NotNan(
                                                            540.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        0.0,
                                                    ),
                                                    y0: NotNan(
                                                        0.0,
                                                    ),
                                                    x1: NotNan(
                                                        540.0,
                                                    ),
                                                    y1: NotNan(
                                                        540.0,
                                                    ),
                                                },
                                            },
                                        ),
                                    ),
                                },
                                opt_p_calculated: None,
                            },
                        ),
                    },
                ),
                layout: Layout {
                    w: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    h: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    z: StateVar(
                        StateAnchor(
                            0,
                        ),
                    ),
                    origin_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    origin_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    origin_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    cassowary_constants: StateVar(
                        StateAnchor(
                            [],
                        ),
                    ),
                    cassowary_selectors: StateVar(
                        [],
                    ),
                    cassowary_generals: StateVar(
                        CassowaryGeneralMap {
                            map: {},
                            v_v_suggest: {},
                            virtual_constraints: {},
                            top_virtual_constraints: {},
                            top_map: {},
                            top_v_v_suggest: {},
                            parent: None,
                        },
                    ),
                },
                styles: StateVar(
                    {},
                ),
                path_styles: StateVar(
                    {},
                ),
                path_layouts: StateVar(
                    {},
                ),
                other_css_styles: StateVar(
                    Style {
                        media_rules: {},
                        rules: [],
                        updated_at: [
                            "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:942:45",
                        ],
                        pseudo: None,
                        media: None,
                        name: "",
                        keyframes: Keyframes {
                            frames: [],
                        },
                        combinator: None,
                        pre_combinators: [],
                    },
                ),
                edge_nodes: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("Ev-CLICK-OBA")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {},
                                                v_v_suggest: {},
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {},
                                                top_v_v_suggest: {},
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    28,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    26,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    23,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    27,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    25,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    24,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    27,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    25,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    28,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    26,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    23,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    24,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    25,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    26,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    33,
                                                ),
                                                "align_y": Variable(
                                                    34,
                                                ),
                                                "align_z": Variable(
                                                    35,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    27,
                                                ),
                                                "height": Variable(
                                                    24,
                                                ),
                                                "hgap": Variable(
                                                    18,
                                                ),
                                                "left": Variable(
                                                    26,
                                                ),
                                                "origin_x": Variable(
                                                    30,
                                                ),
                                                "origin_y": Variable(
                                                    31,
                                                ),
                                                "origin_z": Variable(
                                                    32,
                                                ),
                                                "right": Variable(
                                                    28,
                                                ),
                                                "top": Variable(
                                                    25,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    23,
                                                ),
                                                "z": Variable(
                                                    29,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: Some(
                                                CassowaryGeneralMap {
                                                    map: {
                                                        "align_x": Variable(
                                                            14,
                                                        ),
                                                        "align_y": Variable(
                                                            15,
                                                        ),
                                                        "align_z": Variable(
                                                            16,
                                                        ),
                                                        "baseline": Variable(
                                                            22,
                                                        ),
                                                        "bottom": Variable(
                                                            8,
                                                        ),
                                                        "height": Variable(
                                                            5,
                                                        ),
                                                        "hgap": Variable(
                                                            18,
                                                        ),
                                                        "left": Variable(
                                                            7,
                                                        ),
                                                        "origin_x": Variable(
                                                            11,
                                                        ),
                                                        "origin_y": Variable(
                                                            12,
                                                        ),
                                                        "origin_z": Variable(
                                                            13,
                                                        ),
                                                        "right": Variable(
                                                            9,
                                                        ),
                                                        "top": Variable(
                                                            6,
                                                        ),
                                                        "vgap": Variable(
                                                            20,
                                                        ),
                                                        "width": Variable(
                                                            4,
                                                        ),
                                                        "z": Variable(
                                                            10,
                                                        ),
                                                    },
                                                    v_v_suggest: {
                                                        Variable(
                                                            18,
                                                        ): 10.0,
                                                        Variable(
                                                            20,
                                                        ): 10.0,
                                                        Variable(
                                                            22,
                                                        ): 16.0,
                                                    },
                                                    virtual_constraints: {},
                                                    top_virtual_constraints: {},
                                                    top_map: {
                                                        "baseline": Variable(
                                                            21,
                                                        ),
                                                        "hgap": Variable(
                                                            17,
                                                        ),
                                                        "vgap": Variable(
                                                            19,
                                                        ),
                                                    },
                                                    top_v_v_suggest: {
                                                        Variable(
                                                            17,
                                                        ): 10.0,
                                                        Variable(
                                                            19,
                                                        ): 10.0,
                                                        Variable(
                                                            21,
                                                        ): 16.0,
                                                    },
                                                    parent: None,
                                                },
                                            ),
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                0.0,
                                                0.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            33,
                                        ),
                                        "align_y": Variable(
                                            34,
                                        ),
                                        "align_z": Variable(
                                            35,
                                        ),
                                        "bottom": Variable(
                                            27,
                                        ),
                                        "height": Variable(
                                            24,
                                        ),
                                        "left": Variable(
                                            26,
                                        ),
                                        "origin_x": Variable(
                                            30,
                                        ),
                                        "origin_y": Variable(
                                            31,
                                        ),
                                        "origin_z": Variable(
                                            32,
                                        ),
                                        "right": Variable(
                                            28,
                                        ),
                                        "top": Variable(
                                            25,
                                        ),
                                        "width": Variable(
                                            23,
                                        ),
                                        "z": Variable(
                                            29,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            23,
                                        ): "width",
                                        Variable(
                                            24,
                                        ): "height",
                                        Variable(
                                            25,
                                        ): "top",
                                        Variable(
                                            26,
                                        ): "left",
                                        Variable(
                                            27,
                                        ): "bottom",
                                        Variable(
                                            28,
                                        ): "right",
                                        Variable(
                                            29,
                                        ): "z",
                                        Variable(
                                            30,
                                        ): "origin_x",
                                        Variable(
                                            31,
                                        ): "origin_y",
                                        Variable(
                                            32,
                                        ): "origin_z",
                                        Variable(
                                            33,
                                        ): "align_x",
                                        Variable(
                                            34,
                                        ): "align_y",
                                        Variable(
                                            35,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {},
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            23,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"Ev-CLICK-OBA\"))))])[width] ",
                                        ),
                                        Variable(
                                            24,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"Ev-CLICK-OBA\"))))])[height] ",
                                        ),
                                        Variable(
                                            25,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"Ev-CLICK-OBA\"))))])[top] ",
                                        ),
                                        Variable(
                                            26,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"Ev-CLICK-OBA\"))))])[left] ",
                                        ),
                                        Variable(
                                            27,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"Ev-CLICK-OBA\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            28,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"Ev-CLICK-OBA\"))))])[right] ",
                                        ),
                                        Variable(
                                            30,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"Ev-CLICK-OBA\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            31,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"Ev-CLICK-OBA\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            33,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"Ev-CLICK-OBA\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            34,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"Ev-CLICK-OBA\"))))])[align_y] ",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            -0.0,
                                        ),
                                        Some(
                                            -0.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);\n width: -0px;\nheight: -0px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {},
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                            -0.0,
                                            -0.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        None,
                                    ),
                                },
                                opt_p_calculated: Some(
                                    LayoutCalculated {
                                        size_constraints: StateAnchor(
                                            [
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -600.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -600.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        8,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        9,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        8,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        9,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                            ],
                                        ),
                                        cassowary_inherited_generals_sa: StateAnchor(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "align_x": Variable(
                                                        14,
                                                    ),
                                                    "align_y": Variable(
                                                        15,
                                                    ),
                                                    "align_z": Variable(
                                                        16,
                                                    ),
                                                    "baseline": Variable(
                                                        22,
                                                    ),
                                                    "bottom": Variable(
                                                        8,
                                                    ),
                                                    "height": Variable(
                                                        5,
                                                    ),
                                                    "hgap": Variable(
                                                        18,
                                                    ),
                                                    "left": Variable(
                                                        7,
                                                    ),
                                                    "origin_x": Variable(
                                                        11,
                                                    ),
                                                    "origin_y": Variable(
                                                        12,
                                                    ),
                                                    "origin_z": Variable(
                                                        13,
                                                    ),
                                                    "right": Variable(
                                                        9,
                                                    ),
                                                    "top": Variable(
                                                        6,
                                                    ),
                                                    "vgap": Variable(
                                                        20,
                                                    ),
                                                    "width": Variable(
                                                        4,
                                                    ),
                                                    "z": Variable(
                                                        10,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        18,
                                                    ): 10.0,
                                                    Variable(
                                                        20,
                                                    ): 10.0,
                                                    Variable(
                                                        22,
                                                    ): 16.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "baseline": Variable(
                                                        21,
                                                    ),
                                                    "hgap": Variable(
                                                        17,
                                                    ),
                                                    "vgap": Variable(
                                                        19,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        17,
                                                    ): 10.0,
                                                    Variable(
                                                        19,
                                                    ): 10.0,
                                                    Variable(
                                                        21,
                                                    ): 16.0,
                                                },
                                                parent: None,
                                            },
                                        ),
                                        cass_or_calc_size: StateAnchor(
                                            [
                                                [
                                                    600.0,
                                                    600.0,
                                                ],
                                            ],
                                        ),
                                        origin: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        align: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        translation: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        coordinates_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        cass_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        matrix: StateAnchor(
                                            Mat4(
                                                [
                                                    [
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                    ],
                                                ],
                                            ),
                                        ),
                                        loc_styles: StateAnchor(
                                            Style {
                                                media_rules: {},
                                                rules: [
                                                    Rule {
                                                        value: Length(
                                                            Simplex(
                                                                ExactLengthSimplex {
                                                                    unit: Px,
                                                                    value: NotNan(
                                                                        600.0,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    Rule {
                                                        value: Length(
                                                            Simplex(
                                                                ExactLengthSimplex {
                                                                    unit: Px,
                                                                    value: NotNan(
                                                                        600.0,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    Rule {
                                                        value: StringValue(
                                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                        ),
                                                    },
                                                ],
                                                updated_at: [
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:13",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:17",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:31",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:45",
                                                ],
                                                pseudo: None,
                                                media: None,
                                                name: "",
                                                keyframes: Keyframes {
                                                    frames: [],
                                                },
                                                combinator: None,
                                                pre_combinators: [],
                                            },
                                        ),
                                        world: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            source_nix: StateVar(
                Some(
                    NodeIndex("debug_layer"),
                ),
            ),
            target_nix: StateVar(
                Some(
                    NodeIndex("Ev-CLICK-OBA"),
                ),
            ),
        },
        EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("GEl-ti_HF3oa")))): Edge {
            item: EmgEdgeItem {
                id: StateVar(
                    StateAnchor(
                        EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("GEl-ti_HF3oa")))),
                    ),
                ),
                paths: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Empty,
                                                                value: NotNan(
                                                                    600.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Empty,
                                                                value: NotNan(
                                                                    600.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {},
                                                v_v_suggest: {},
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {},
                                                top_v_v_suggest: {},
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    4,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            -600.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    5,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            -600.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    8,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    6,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    5,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    9,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    7,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    4,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    8,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    6,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    9,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    7,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    4,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    5,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    6,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    7,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    14,
                                                ),
                                                "align_y": Variable(
                                                    15,
                                                ),
                                                "align_z": Variable(
                                                    16,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    8,
                                                ),
                                                "height": Variable(
                                                    5,
                                                ),
                                                "hgap": Variable(
                                                    18,
                                                ),
                                                "left": Variable(
                                                    7,
                                                ),
                                                "origin_x": Variable(
                                                    11,
                                                ),
                                                "origin_y": Variable(
                                                    12,
                                                ),
                                                "origin_z": Variable(
                                                    13,
                                                ),
                                                "right": Variable(
                                                    9,
                                                ),
                                                "top": Variable(
                                                    6,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    4,
                                                ),
                                                "z": Variable(
                                                    10,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: None,
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                600.0,
                                                600.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    600.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                },
                                                Rule {
                                                    value: Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    600.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                },
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:13",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:17",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:31",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:45",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            14,
                                        ),
                                        "align_y": Variable(
                                            15,
                                        ),
                                        "align_z": Variable(
                                            16,
                                        ),
                                        "bottom": Variable(
                                            8,
                                        ),
                                        "height": Variable(
                                            5,
                                        ),
                                        "left": Variable(
                                            7,
                                        ),
                                        "origin_x": Variable(
                                            11,
                                        ),
                                        "origin_y": Variable(
                                            12,
                                        ),
                                        "origin_z": Variable(
                                            13,
                                        ),
                                        "right": Variable(
                                            9,
                                        ),
                                        "top": Variable(
                                            6,
                                        ),
                                        "width": Variable(
                                            4,
                                        ),
                                        "z": Variable(
                                            10,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            4,
                                        ): "width",
                                        Variable(
                                            5,
                                        ): "height",
                                        Variable(
                                            6,
                                        ): "top",
                                        Variable(
                                            7,
                                        ): "left",
                                        Variable(
                                            8,
                                        ): "bottom",
                                        Variable(
                                            9,
                                        ): "right",
                                        Variable(
                                            10,
                                        ): "z",
                                        Variable(
                                            11,
                                        ): "origin_x",
                                        Variable(
                                            12,
                                        ): "origin_y",
                                        Variable(
                                            13,
                                        ): "origin_z",
                                        Variable(
                                            14,
                                        ): "align_x",
                                        Variable(
                                            15,
                                        ): "align_y",
                                        Variable(
                                            16,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {},
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            4,
                                        ): (
                                            NotNan(
                                                600.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[width] ",
                                        ),
                                        Variable(
                                            5,
                                        ): (
                                            NotNan(
                                                600.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[height] ",
                                        ),
                                        Variable(
                                            6,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[top] ",
                                        ),
                                        Variable(
                                            7,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[left] ",
                                        ),
                                        Variable(
                                            8,
                                        ): (
                                            NotNan(
                                                600.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            9,
                                        ): (
                                            NotNan(
                                                600.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[right] ",
                                        ),
                                        Variable(
                                            11,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            12,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            14,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            15,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[align_y] ",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            23,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[width]",
                                        ),
                                        Variable(
                                            24,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[height]",
                                        ),
                                        Variable(
                                            25,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[top]",
                                        ),
                                        Variable(
                                            26,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[left]",
                                        ),
                                        Variable(
                                            27,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[bottom]",
                                        ),
                                        Variable(
                                            28,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[right]",
                                        ),
                                        Variable(
                                            36,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[width]",
                                        ),
                                        Variable(
                                            37,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[height]",
                                        ),
                                        Variable(
                                            38,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[top]",
                                        ),
                                        Variable(
                                            39,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[left]",
                                        ),
                                        Variable(
                                            40,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[bottom]",
                                        ),
                                        Variable(
                                            41,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[right]",
                                        ),
                                        Variable(
                                            49,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[width]",
                                        ),
                                        Variable(
                                            50,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[height]",
                                        ),
                                        Variable(
                                            51,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[top]",
                                        ),
                                        Variable(
                                            52,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[left]",
                                        ),
                                        Variable(
                                            53,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[bottom]",
                                        ),
                                        Variable(
                                            54,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[right]",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            600.0,
                                        ),
                                        Some(
                                            600.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "width: 600px;\nheight: 600px;\ntransform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);\n width: 600px;\nheight: 600px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {},
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                            600.0,
                                            600.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            0.0,
                                                        ),
                                                        y0: NotNan(
                                                            0.0,
                                                        ),
                                                        x1: NotNan(
                                                            540.0,
                                                        ),
                                                        y1: NotNan(
                                                            540.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        0.0,
                                                    ),
                                                    y0: NotNan(
                                                        0.0,
                                                    ),
                                                    x1: NotNan(
                                                        540.0,
                                                    ),
                                                    y1: NotNan(
                                                        540.0,
                                                    ),
                                                },
                                            },
                                        ),
                                    ),
                                },
                                opt_p_calculated: None,
                            },
                        ),
                    },
                ),
                layout: Layout {
                    w: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Pc,
                                            value: NotNan(
                                                20.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    h: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Pc,
                                            value: NotNan(
                                                20.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    z: StateVar(
                        StateAnchor(
                            0,
                        ),
                    ),
                    origin_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Pc,
                                            value: NotNan(
                                                0.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    origin_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    origin_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Pc,
                                            value: NotNan(
                                                0.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    align_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    cassowary_constants: StateVar(
                        StateAnchor(
                            [],
                        ),
                    ),
                    cassowary_selectors: StateVar(
                        [],
                    ),
                    cassowary_generals: StateVar(
                        CassowaryGeneralMap {
                            map: {},
                            v_v_suggest: {},
                            virtual_constraints: {},
                            top_virtual_constraints: {},
                            top_map: {},
                            top_v_v_suggest: {},
                            parent: None,
                        },
                    ),
                },
                styles: StateVar(
                    {
                        TypeName(
                            "CssBorderColor",
                        ): StateAnchor(
                            Rgba(
                                1.0,
                                1.0,
                                0.0,
                                1.0,
                            ),
                        ),
                        TypeName(
                            "CssBorderWidth",
                        ): StateAnchor(
                            Length(
                                Simplex(
                                    ExactLengthSimplex {
                                        unit: Px,
                                        value: NotNan(
                                            5.0,
                                        ),
                                    },
                                ),
                            ),
                        ),
                        TypeName(
                            "CssFill",
                        ): StateAnchor(
                            Rgba(
                                1.0,
                                0.0,
                                1.0,
                                1.0,
                            ),
                        ),
                    },
                ),
                path_styles: StateVar(
                    {},
                ),
                path_layouts: StateVar(
                    {},
                ),
                other_css_styles: StateVar(
                    Style {
                        media_rules: {},
                        rules: [],
                        updated_at: [
                            "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:942:45",
                        ],
                        pseudo: None,
                        media: None,
                        name: "",
                        keyframes: Keyframes {
                            frames: [],
                        },
                        combinator: None,
                        pre_combinators: [],
                    },
                ),
                edge_nodes: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("GEl-ti_HF3oa")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    20.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    20.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {},
                                                v_v_suggest: {},
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {},
                                                top_v_v_suggest: {},
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    49,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    4,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -0.2,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    50,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    5,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -0.2,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    54,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    52,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    49,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    53,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    51,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    50,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    53,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    51,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    54,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    52,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    49,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    50,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    51,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    52,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    59,
                                                ),
                                                "align_y": Variable(
                                                    60,
                                                ),
                                                "align_z": Variable(
                                                    61,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    53,
                                                ),
                                                "height": Variable(
                                                    50,
                                                ),
                                                "hgap": Variable(
                                                    18,
                                                ),
                                                "left": Variable(
                                                    52,
                                                ),
                                                "origin_x": Variable(
                                                    56,
                                                ),
                                                "origin_y": Variable(
                                                    57,
                                                ),
                                                "origin_z": Variable(
                                                    58,
                                                ),
                                                "right": Variable(
                                                    54,
                                                ),
                                                "top": Variable(
                                                    51,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    49,
                                                ),
                                                "z": Variable(
                                                    55,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: Some(
                                                CassowaryGeneralMap {
                                                    map: {
                                                        "align_x": Variable(
                                                            14,
                                                        ),
                                                        "align_y": Variable(
                                                            15,
                                                        ),
                                                        "align_z": Variable(
                                                            16,
                                                        ),
                                                        "baseline": Variable(
                                                            22,
                                                        ),
                                                        "bottom": Variable(
                                                            8,
                                                        ),
                                                        "height": Variable(
                                                            5,
                                                        ),
                                                        "hgap": Variable(
                                                            18,
                                                        ),
                                                        "left": Variable(
                                                            7,
                                                        ),
                                                        "origin_x": Variable(
                                                            11,
                                                        ),
                                                        "origin_y": Variable(
                                                            12,
                                                        ),
                                                        "origin_z": Variable(
                                                            13,
                                                        ),
                                                        "right": Variable(
                                                            9,
                                                        ),
                                                        "top": Variable(
                                                            6,
                                                        ),
                                                        "vgap": Variable(
                                                            20,
                                                        ),
                                                        "width": Variable(
                                                            4,
                                                        ),
                                                        "z": Variable(
                                                            10,
                                                        ),
                                                    },
                                                    v_v_suggest: {
                                                        Variable(
                                                            18,
                                                        ): 10.0,
                                                        Variable(
                                                            20,
                                                        ): 10.0,
                                                        Variable(
                                                            22,
                                                        ): 16.0,
                                                    },
                                                    virtual_constraints: {},
                                                    top_virtual_constraints: {},
                                                    top_map: {
                                                        "baseline": Variable(
                                                            21,
                                                        ),
                                                        "hgap": Variable(
                                                            17,
                                                        ),
                                                        "vgap": Variable(
                                                            19,
                                                        ),
                                                    },
                                                    top_v_v_suggest: {
                                                        Variable(
                                                            17,
                                                        ): 10.0,
                                                        Variable(
                                                            19,
                                                        ): 10.0,
                                                        Variable(
                                                            21,
                                                        ): 16.0,
                                                    },
                                                    parent: None,
                                                },
                                            ),
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                120.0,
                                                120.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            59,
                                        ),
                                        "align_y": Variable(
                                            60,
                                        ),
                                        "align_z": Variable(
                                            61,
                                        ),
                                        "bottom": Variable(
                                            53,
                                        ),
                                        "height": Variable(
                                            50,
                                        ),
                                        "left": Variable(
                                            52,
                                        ),
                                        "origin_x": Variable(
                                            56,
                                        ),
                                        "origin_y": Variable(
                                            57,
                                        ),
                                        "origin_z": Variable(
                                            58,
                                        ),
                                        "right": Variable(
                                            54,
                                        ),
                                        "top": Variable(
                                            51,
                                        ),
                                        "width": Variable(
                                            49,
                                        ),
                                        "z": Variable(
                                            55,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            49,
                                        ): "width",
                                        Variable(
                                            50,
                                        ): "height",
                                        Variable(
                                            51,
                                        ): "top",
                                        Variable(
                                            52,
                                        ): "left",
                                        Variable(
                                            53,
                                        ): "bottom",
                                        Variable(
                                            54,
                                        ): "right",
                                        Variable(
                                            55,
                                        ): "z",
                                        Variable(
                                            56,
                                        ): "origin_x",
                                        Variable(
                                            57,
                                        ): "origin_y",
                                        Variable(
                                            58,
                                        ): "origin_z",
                                        Variable(
                                            59,
                                        ): "align_x",
                                        Variable(
                                            60,
                                        ): "align_y",
                                        Variable(
                                            61,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {},
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            49,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-ti_HF3oa\"))))])[width] ",
                                        ),
                                        Variable(
                                            50,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-ti_HF3oa\"))))])[height] ",
                                        ),
                                        Variable(
                                            51,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-ti_HF3oa\"))))])[top] ",
                                        ),
                                        Variable(
                                            52,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-ti_HF3oa\"))))])[left] ",
                                        ),
                                        Variable(
                                            53,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-ti_HF3oa\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            54,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-ti_HF3oa\"))))])[right] ",
                                        ),
                                        Variable(
                                            56,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-ti_HF3oa\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            57,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-ti_HF3oa\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            59,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-ti_HF3oa\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            60,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"GEl-ti_HF3oa\"))))])[align_y] ",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            120.0,
                                        ),
                                        Some(
                                            120.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);\n width: 120px;\nheight: 120px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {
                                            TypeName(
                                                "CssBorderColor",
                                            ): StateAnchor(
                                                Rgba(
                                                    1.0,
                                                    1.0,
                                                    0.0,
                                                    1.0,
                                                ),
                                            ),
                                            TypeName(
                                                "CssBorderWidth",
                                            ): StateAnchor(
                                                Length(
                                                    Simplex(
                                                        ExactLengthSimplex {
                                                            unit: Px,
                                                            value: NotNan(
                                                                5.0,
                                                            ),
                                                        },
                                                    ),
                                                ),
                                            ),
                                            TypeName(
                                                "CssFill",
                                            ): StateAnchor(
                                                Rgba(
                                                    1.0,
                                                    0.0,
                                                    1.0,
                                                    1.0,
                                                ),
                                            ),
                                        },
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                            120.0,
                                            120.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        None,
                                    ),
                                },
                                opt_p_calculated: Some(
                                    LayoutCalculated {
                                        size_constraints: StateAnchor(
                                            [
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -600.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -600.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        8,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        9,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        8,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        9,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                            ],
                                        ),
                                        cassowary_inherited_generals_sa: StateAnchor(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "align_x": Variable(
                                                        14,
                                                    ),
                                                    "align_y": Variable(
                                                        15,
                                                    ),
                                                    "align_z": Variable(
                                                        16,
                                                    ),
                                                    "baseline": Variable(
                                                        22,
                                                    ),
                                                    "bottom": Variable(
                                                        8,
                                                    ),
                                                    "height": Variable(
                                                        5,
                                                    ),
                                                    "hgap": Variable(
                                                        18,
                                                    ),
                                                    "left": Variable(
                                                        7,
                                                    ),
                                                    "origin_x": Variable(
                                                        11,
                                                    ),
                                                    "origin_y": Variable(
                                                        12,
                                                    ),
                                                    "origin_z": Variable(
                                                        13,
                                                    ),
                                                    "right": Variable(
                                                        9,
                                                    ),
                                                    "top": Variable(
                                                        6,
                                                    ),
                                                    "vgap": Variable(
                                                        20,
                                                    ),
                                                    "width": Variable(
                                                        4,
                                                    ),
                                                    "z": Variable(
                                                        10,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        18,
                                                    ): 10.0,
                                                    Variable(
                                                        20,
                                                    ): 10.0,
                                                    Variable(
                                                        22,
                                                    ): 16.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "baseline": Variable(
                                                        21,
                                                    ),
                                                    "hgap": Variable(
                                                        17,
                                                    ),
                                                    "vgap": Variable(
                                                        19,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        17,
                                                    ): 10.0,
                                                    Variable(
                                                        19,
                                                    ): 10.0,
                                                    Variable(
                                                        21,
                                                    ): 16.0,
                                                },
                                                parent: None,
                                            },
                                        ),
                                        cass_or_calc_size: StateAnchor(
                                            [
                                                [
                                                    600.0,
                                                    600.0,
                                                ],
                                            ],
                                        ),
                                        origin: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        align: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        translation: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        coordinates_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        cass_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        matrix: StateAnchor(
                                            Mat4(
                                                [
                                                    [
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                    ],
                                                ],
                                            ),
                                        ),
                                        loc_styles: StateAnchor(
                                            Style {
                                                media_rules: {},
                                                rules: [
                                                    Rule {
                                                        value: Length(
                                                            Simplex(
                                                                ExactLengthSimplex {
                                                                    unit: Px,
                                                                    value: NotNan(
                                                                        600.0,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    Rule {
                                                        value: Length(
                                                            Simplex(
                                                                ExactLengthSimplex {
                                                                    unit: Px,
                                                                    value: NotNan(
                                                                        600.0,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    Rule {
                                                        value: StringValue(
                                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                        ),
                                                    },
                                                ],
                                                updated_at: [
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:13",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:17",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:31",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:45",
                                                ],
                                                pseudo: None,
                                                media: None,
                                                name: "",
                                                keyframes: Keyframes {
                                                    frames: [],
                                                },
                                                combinator: None,
                                                pre_combinators: [],
                                            },
                                        ),
                                        world: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            source_nix: StateVar(
                Some(
                    NodeIndex("debug_layer"),
                ),
            ),
            target_nix: StateVar(
                Some(
                    NodeIndex("GEl-ti_HF3oa"),
                ),
            ),
        },
        EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))): Edge {
            item: EmgEdgeItem {
                id: StateVar(
                    StateAnchor(
                        EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                    ),
                ),
                paths: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Empty,
                                                                value: NotNan(
                                                                    600.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Empty,
                                                                value: NotNan(
                                                                    600.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {},
                                                v_v_suggest: {},
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {},
                                                top_v_v_suggest: {},
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    4,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            -600.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    5,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            -600.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    8,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    6,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    5,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    9,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    7,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    4,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    8,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    6,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    9,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    7,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    4,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    5,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    6,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    7,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    14,
                                                ),
                                                "align_y": Variable(
                                                    15,
                                                ),
                                                "align_z": Variable(
                                                    16,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    8,
                                                ),
                                                "height": Variable(
                                                    5,
                                                ),
                                                "hgap": Variable(
                                                    18,
                                                ),
                                                "left": Variable(
                                                    7,
                                                ),
                                                "origin_x": Variable(
                                                    11,
                                                ),
                                                "origin_y": Variable(
                                                    12,
                                                ),
                                                "origin_z": Variable(
                                                    13,
                                                ),
                                                "right": Variable(
                                                    9,
                                                ),
                                                "top": Variable(
                                                    6,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    4,
                                                ),
                                                "z": Variable(
                                                    10,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: None,
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                600.0,
                                                600.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    600.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                },
                                                Rule {
                                                    value: Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Px,
                                                                value: NotNan(
                                                                    600.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                },
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:13",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:17",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:31",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:45",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            14,
                                        ),
                                        "align_y": Variable(
                                            15,
                                        ),
                                        "align_z": Variable(
                                            16,
                                        ),
                                        "bottom": Variable(
                                            8,
                                        ),
                                        "height": Variable(
                                            5,
                                        ),
                                        "left": Variable(
                                            7,
                                        ),
                                        "origin_x": Variable(
                                            11,
                                        ),
                                        "origin_y": Variable(
                                            12,
                                        ),
                                        "origin_z": Variable(
                                            13,
                                        ),
                                        "right": Variable(
                                            9,
                                        ),
                                        "top": Variable(
                                            6,
                                        ),
                                        "width": Variable(
                                            4,
                                        ),
                                        "z": Variable(
                                            10,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            4,
                                        ): "width",
                                        Variable(
                                            5,
                                        ): "height",
                                        Variable(
                                            6,
                                        ): "top",
                                        Variable(
                                            7,
                                        ): "left",
                                        Variable(
                                            8,
                                        ): "bottom",
                                        Variable(
                                            9,
                                        ): "right",
                                        Variable(
                                            10,
                                        ): "z",
                                        Variable(
                                            11,
                                        ): "origin_x",
                                        Variable(
                                            12,
                                        ): "origin_y",
                                        Variable(
                                            13,
                                        ): "origin_z",
                                        Variable(
                                            14,
                                        ): "align_x",
                                        Variable(
                                            15,
                                        ): "align_y",
                                        Variable(
                                            16,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {},
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            4,
                                        ): (
                                            NotNan(
                                                600.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[width] ",
                                        ),
                                        Variable(
                                            5,
                                        ): (
                                            NotNan(
                                                600.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[height] ",
                                        ),
                                        Variable(
                                            6,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[top] ",
                                        ),
                                        Variable(
                                            7,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[left] ",
                                        ),
                                        Variable(
                                            8,
                                        ): (
                                            NotNan(
                                                600.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            9,
                                        ): (
                                            NotNan(
                                                600.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[right] ",
                                        ),
                                        Variable(
                                            11,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            12,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            14,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            15,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))])[align_y] ",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            23,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[width]",
                                        ),
                                        Variable(
                                            24,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[height]",
                                        ),
                                        Variable(
                                            25,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[top]",
                                        ),
                                        Variable(
                                            26,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[left]",
                                        ),
                                        Variable(
                                            27,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[bottom]",
                                        ),
                                        Variable(
                                            28,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"Ev-CLICK-OBA\"[right]",
                                        ),
                                        Variable(
                                            36,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[width]",
                                        ),
                                        Variable(
                                            37,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[height]",
                                        ),
                                        Variable(
                                            38,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[top]",
                                        ),
                                        Variable(
                                            39,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[left]",
                                        ),
                                        Variable(
                                            40,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[bottom]",
                                        ),
                                        Variable(
                                            41,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"a1\"[right]",
                                        ),
                                        Variable(
                                            49,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[width]",
                                        ),
                                        Variable(
                                            50,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[height]",
                                        ),
                                        Variable(
                                            51,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[top]",
                                        ),
                                        Variable(
                                            52,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[left]",
                                        ),
                                        Variable(
                                            53,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[bottom]",
                                        ),
                                        Variable(
                                            54,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\"))))]) |=> #\"GEl-ti_HF3oa\"[right]",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            600.0,
                                        ),
                                        Some(
                                            600.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "width: 600px;\nheight: 600px;\ntransform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);\n width: 600px;\nheight: 600px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {},
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                            600.0,
                                            600.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            0.0,
                                                        ),
                                                        y0: NotNan(
                                                            0.0,
                                                        ),
                                                        x1: NotNan(
                                                            540.0,
                                                        ),
                                                        y1: NotNan(
                                                            540.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        0.0,
                                                    ),
                                                    y0: NotNan(
                                                        0.0,
                                                    ),
                                                    x1: NotNan(
                                                        540.0,
                                                    ),
                                                    y1: NotNan(
                                                        540.0,
                                                    ),
                                                },
                                            },
                                        ),
                                    ),
                                },
                                opt_p_calculated: None,
                            },
                        ),
                    },
                ),
                layout: Layout {
                    w: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Pc,
                                            value: NotNan(
                                                90.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    h: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Pc,
                                            value: NotNan(
                                                90.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    z: StateVar(
                        StateAnchor(
                            0,
                        ),
                    ),
                    origin_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Pc,
                                            value: NotNan(
                                                0.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    origin_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    origin_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_x: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                Length(
                                    Simplex(
                                        ExactLengthSimplex {
                                            unit: Pc,
                                            value: NotNan(
                                                0.0,
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ),
                    align_y: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    align_z: StateVar(
                        GenericSizeAnchor(
                            StateAnchor(
                                None,
                            ),
                        ),
                    ),
                    cassowary_constants: StateVar(
                        StateAnchor(
                            [
                                CCSS {
                                    svv_op_svvs: CCSSSvvOpSvvExpr {
                                        svv: ScopeViewVariable {
                                            scope: Some(
                                                Local,
                                            ),
                                            view: None,
                                            variable: Some(
                                                PredVariable(
                                                    "left",
                                                ),
                                            ),
                                        },
                                        op_exprs: [
                                            CCSSOpSvv {
                                                op: Add,
                                                svv: ScopeViewVariable {
                                                    scope: None,
                                                    view: None,
                                                    variable: Some(
                                                        PredVariable(
                                                            "hgap",
                                                        ),
                                                    ),
                                                },
                                            },
                                        ],
                                    },
                                    eq_exprs: [
                                        CCSSEqExpression {
                                            eq: Eq,
                                            expr: CCSSSvvOpSvvExpr {
                                                svv: ScopeViewVariable {
                                                    scope: None,
                                                    view: Some(
                                                        Id(
                                                            "a2",
                                                        ),
                                                    ),
                                                    variable: Some(
                                                        PredVariable(
                                                            "left",
                                                        ),
                                                    ),
                                                },
                                                op_exprs: [],
                                            },
                                        },
                                    ],
                                    opt_sw: None,
                                },
                                CCSS {
                                    svv_op_svvs: CCSSSvvOpSvvExpr {
                                        svv: ScopeViewVariable {
                                            scope: None,
                                            view: Some(
                                                Id(
                                                    "a2",
                                                ),
                                            ),
                                            variable: Some(
                                                PredVariable(
                                                    "right",
                                                ),
                                            ),
                                        },
                                        op_exprs: [
                                            CCSSOpSvv {
                                                op: Add,
                                                svv: ScopeViewVariable {
                                                    scope: None,
                                                    view: None,
                                                    variable: Some(
                                                        PredVariable(
                                                            "hgap",
                                                        ),
                                                    ),
                                                },
                                            },
                                        ],
                                    },
                                    eq_exprs: [
                                        CCSSEqExpression {
                                            eq: Eq,
                                            expr: CCSSSvvOpSvvExpr {
                                                svv: ScopeViewVariable {
                                                    scope: Some(
                                                        Local,
                                                    ),
                                                    view: None,
                                                    variable: Some(
                                                        PredVariable(
                                                            "right",
                                                        ),
                                                    ),
                                                },
                                                op_exprs: [],
                                            },
                                        },
                                    ],
                                    opt_sw: None,
                                },
                            ],
                        ),
                    ),
                    cassowary_selectors: StateVar(
                        [
                            ScopeViewVariable {
                                scope: None,
                                view: Some(
                                    Id(
                                        "a2",
                                    ),
                                ),
                                variable: None,
                            },
                        ],
                    ),
                    cassowary_generals: StateVar(
                        CassowaryGeneralMap {
                            map: {
                                "hgap": Variable(
                                    1,
                                ),
                                "my_other_gap": Variable(
                                    3,
                                ),
                            },
                            v_v_suggest: {
                                Variable(
                                    1,
                                ): 120.0,
                                Variable(
                                    3,
                                ): 28.0,
                            },
                            virtual_constraints: {},
                            top_virtual_constraints: {},
                            top_map: {
                                "hgap": Variable(
                                    0,
                                ),
                                "my_other_gap": Variable(
                                    2,
                                ),
                            },
                            top_v_v_suggest: {
                                Variable(
                                    0,
                                ): 120.0,
                                Variable(
                                    2,
                                ): 28.0,
                            },
                            parent: None,
                        },
                    ),
                },
                styles: StateVar(
                    {
                        TypeName(
                            "CssBorderColor",
                        ): StateAnchor(
                            Rgba(
                                1.0,
                                0.0,
                                0.0,
                                1.0,
                            ),
                        ),
                        TypeName(
                            "CssBorderWidth",
                        ): StateAnchor(
                            Length(
                                Simplex(
                                    ExactLengthSimplex {
                                        unit: Px,
                                        value: NotNan(
                                            5.0,
                                        ),
                                    },
                                ),
                            ),
                        ),
                        TypeName(
                            "CssFill",
                        ): StateAnchor(
                            Hsl(
                                150.0,
                                100.0,
                                100.0,
                            ),
                        ),
                    },
                ),
                path_styles: StateVar(
                    {},
                ),
                path_layouts: StateVar(
                    {},
                ),
                other_css_styles: StateVar(
                    Style {
                        media_rules: {},
                        rules: [],
                        updated_at: [
                            "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:942:45",
                        ],
                        pseudo: None,
                        media: None,
                        name: "",
                        keyframes: Keyframes {
                            frames: [],
                        },
                        combinator: None,
                        pre_combinators: [],
                    },
                ),
                edge_nodes: StateAnchor(
                    {
                        EPath(
                            [
                                EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex("debug_layer")))),
                                EdgeIndex(OptionNodeIndex(Some(NodeIndex("debug_layer")))->OptionNodeIndex(Some(NodeIndex("a1")))),
                            ],
                        ): EdgeData(
                            EdgeData {
                                path_layout: StateAnchor(
                                    Layout {
                                        w: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    90.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        h: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    90.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        z: StateVar(
                                            StateAnchor(
                                                0,
                                            ),
                                        ),
                                        origin_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        origin_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        origin_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_x: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    Length(
                                                        Simplex(
                                                            ExactLengthSimplex {
                                                                unit: Pc,
                                                                value: NotNan(
                                                                    0.0,
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                        align_y: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        align_z: StateVar(
                                            GenericSizeAnchor(
                                                StateAnchor(
                                                    None,
                                                ),
                                            ),
                                        ),
                                        cassowary_constants: StateVar(
                                            StateAnchor(
                                                [
                                                    CCSS {
                                                        svv_op_svvs: CCSSSvvOpSvvExpr {
                                                            svv: ScopeViewVariable {
                                                                scope: Some(
                                                                    Local,
                                                                ),
                                                                view: None,
                                                                variable: Some(
                                                                    PredVariable(
                                                                        "left",
                                                                    ),
                                                                ),
                                                            },
                                                            op_exprs: [
                                                                CCSSOpSvv {
                                                                    op: Add,
                                                                    svv: ScopeViewVariable {
                                                                        scope: None,
                                                                        view: None,
                                                                        variable: Some(
                                                                            PredVariable(
                                                                                "hgap",
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        eq_exprs: [
                                                            CCSSEqExpression {
                                                                eq: Eq,
                                                                expr: CCSSSvvOpSvvExpr {
                                                                    svv: ScopeViewVariable {
                                                                        scope: None,
                                                                        view: Some(
                                                                            Id(
                                                                                "a2",
                                                                            ),
                                                                        ),
                                                                        variable: Some(
                                                                            PredVariable(
                                                                                "left",
                                                                            ),
                                                                        ),
                                                                    },
                                                                    op_exprs: [],
                                                                },
                                                            },
                                                        ],
                                                        opt_sw: None,
                                                    },
                                                    CCSS {
                                                        svv_op_svvs: CCSSSvvOpSvvExpr {
                                                            svv: ScopeViewVariable {
                                                                scope: None,
                                                                view: Some(
                                                                    Id(
                                                                        "a2",
                                                                    ),
                                                                ),
                                                                variable: Some(
                                                                    PredVariable(
                                                                        "right",
                                                                    ),
                                                                ),
                                                            },
                                                            op_exprs: [
                                                                CCSSOpSvv {
                                                                    op: Add,
                                                                    svv: ScopeViewVariable {
                                                                        scope: None,
                                                                        view: None,
                                                                        variable: Some(
                                                                            PredVariable(
                                                                                "hgap",
                                                                            ),
                                                                        ),
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        eq_exprs: [
                                                            CCSSEqExpression {
                                                                eq: Eq,
                                                                expr: CCSSSvvOpSvvExpr {
                                                                    svv: ScopeViewVariable {
                                                                        scope: Some(
                                                                            Local,
                                                                        ),
                                                                        view: None,
                                                                        variable: Some(
                                                                            PredVariable(
                                                                                "right",
                                                                            ),
                                                                        ),
                                                                    },
                                                                    op_exprs: [],
                                                                },
                                                            },
                                                        ],
                                                        opt_sw: None,
                                                    },
                                                ],
                                            ),
                                        ),
                                        cassowary_selectors: StateVar(
                                            [
                                                ScopeViewVariable {
                                                    scope: None,
                                                    view: Some(
                                                        Id(
                                                            "a2",
                                                        ),
                                                    ),
                                                    variable: None,
                                                },
                                            ],
                                        ),
                                        cassowary_generals: StateVar(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "hgap": Variable(
                                                        1,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        3,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        1,
                                                    ): 120.0,
                                                    Variable(
                                                        3,
                                                    ): 28.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "hgap": Variable(
                                                        0,
                                                    ),
                                                    "my_other_gap": Variable(
                                                        2,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        0,
                                                    ): 120.0,
                                                    Variable(
                                                        2,
                                                    ): 28.0,
                                                },
                                                parent: None,
                                            },
                                        ),
                                    },
                                ),
                                calculated: LayoutCalculated {
                                    size_constraints: StateAnchor(
                                        [
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    36,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    4,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -0.9,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    37,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    5,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -0.9,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        900.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    41,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    39,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    36,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    40,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    38,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    37,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: Equal,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    40,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    38,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    41,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                            Term {
                                                                variable: Variable(
                                                                    39,
                                                                ),
                                                                coefficient: NotNan(
                                                                    -1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    36,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    37,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1001001000.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    38,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                            Constraint(
                                                ConstraintData {
                                                    expression: Expression {
                                                        terms: [
                                                            Term {
                                                                variable: Variable(
                                                                    39,
                                                                ),
                                                                coefficient: NotNan(
                                                                    1.0,
                                                                ),
                                                            },
                                                        ],
                                                        constant: NotNan(
                                                            0.0,
                                                        ),
                                                    },
                                                    strength: NotNan(
                                                        1.0,
                                                    ),
                                                    op: GreaterOrEqual,
                                                },
                                            ),
                                        ],
                                    ),
                                    cassowary_inherited_generals_sa: StateAnchor(
                                        CassowaryGeneralMap {
                                            map: {
                                                "align_x": Variable(
                                                    46,
                                                ),
                                                "align_y": Variable(
                                                    47,
                                                ),
                                                "align_z": Variable(
                                                    48,
                                                ),
                                                "baseline": Variable(
                                                    22,
                                                ),
                                                "bottom": Variable(
                                                    40,
                                                ),
                                                "height": Variable(
                                                    37,
                                                ),
                                                "hgap": Variable(
                                                    1,
                                                ),
                                                "left": Variable(
                                                    39,
                                                ),
                                                "my_other_gap": Variable(
                                                    3,
                                                ),
                                                "origin_x": Variable(
                                                    43,
                                                ),
                                                "origin_y": Variable(
                                                    44,
                                                ),
                                                "origin_z": Variable(
                                                    45,
                                                ),
                                                "right": Variable(
                                                    41,
                                                ),
                                                "top": Variable(
                                                    38,
                                                ),
                                                "vgap": Variable(
                                                    20,
                                                ),
                                                "width": Variable(
                                                    36,
                                                ),
                                                "z": Variable(
                                                    42,
                                                ),
                                            },
                                            v_v_suggest: {
                                                Variable(
                                                    1,
                                                ): 120.0,
                                                Variable(
                                                    3,
                                                ): 28.0,
                                                Variable(
                                                    18,
                                                ): 10.0,
                                                Variable(
                                                    20,
                                                ): 10.0,
                                                Variable(
                                                    22,
                                                ): 16.0,
                                            },
                                            virtual_constraints: {},
                                            top_virtual_constraints: {},
                                            top_map: {
                                                "baseline": Variable(
                                                    21,
                                                ),
                                                "hgap": Variable(
                                                    17,
                                                ),
                                                "my_other_gap": Variable(
                                                    2,
                                                ),
                                                "vgap": Variable(
                                                    19,
                                                ),
                                            },
                                            top_v_v_suggest: {
                                                Variable(
                                                    0,
                                                ): 120.0,
                                                Variable(
                                                    2,
                                                ): 28.0,
                                                Variable(
                                                    17,
                                                ): 10.0,
                                                Variable(
                                                    19,
                                                ): 10.0,
                                                Variable(
                                                    21,
                                                ): 16.0,
                                            },
                                            parent: Some(
                                                CassowaryGeneralMap {
                                                    map: {
                                                        "align_x": Variable(
                                                            14,
                                                        ),
                                                        "align_y": Variable(
                                                            15,
                                                        ),
                                                        "align_z": Variable(
                                                            16,
                                                        ),
                                                        "baseline": Variable(
                                                            22,
                                                        ),
                                                        "bottom": Variable(
                                                            8,
                                                        ),
                                                        "height": Variable(
                                                            5,
                                                        ),
                                                        "hgap": Variable(
                                                            18,
                                                        ),
                                                        "left": Variable(
                                                            7,
                                                        ),
                                                        "origin_x": Variable(
                                                            11,
                                                        ),
                                                        "origin_y": Variable(
                                                            12,
                                                        ),
                                                        "origin_z": Variable(
                                                            13,
                                                        ),
                                                        "right": Variable(
                                                            9,
                                                        ),
                                                        "top": Variable(
                                                            6,
                                                        ),
                                                        "vgap": Variable(
                                                            20,
                                                        ),
                                                        "width": Variable(
                                                            4,
                                                        ),
                                                        "z": Variable(
                                                            10,
                                                        ),
                                                    },
                                                    v_v_suggest: {
                                                        Variable(
                                                            18,
                                                        ): 10.0,
                                                        Variable(
                                                            20,
                                                        ): 10.0,
                                                        Variable(
                                                            22,
                                                        ): 16.0,
                                                    },
                                                    virtual_constraints: {},
                                                    top_virtual_constraints: {},
                                                    top_map: {
                                                        "baseline": Variable(
                                                            21,
                                                        ),
                                                        "hgap": Variable(
                                                            17,
                                                        ),
                                                        "vgap": Variable(
                                                            19,
                                                        ),
                                                    },
                                                    top_v_v_suggest: {
                                                        Variable(
                                                            17,
                                                        ): 10.0,
                                                        Variable(
                                                            19,
                                                        ): 10.0,
                                                        Variable(
                                                            21,
                                                        ): 16.0,
                                                    },
                                                    parent: None,
                                                },
                                            ),
                                        },
                                    ),
                                    cass_or_calc_size: StateAnchor(
                                        [
                                            [
                                                540.0,
                                                540.0,
                                            ],
                                        ],
                                    ),
                                    origin: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    align: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    translation: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    coordinates_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    cass_trans: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    matrix: StateAnchor(
                                        Mat4(
                                            [
                                                [
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                    0.0,
                                                ],
                                                [
                                                    0.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ],
                                            ],
                                        ),
                                    ),
                                    loc_styles: StateAnchor(
                                        Style {
                                            media_rules: {},
                                            rules: [
                                                Rule {
                                                    value: StringValue(
                                                        "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                    ),
                                                },
                                            ],
                                            updated_at: [
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:29",
                                                "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/calc.rs:472:33",
                                            ],
                                            pseudo: None,
                                            media: None,
                                            name: "",
                                            keyframes: Keyframes {
                                                frames: [],
                                            },
                                            combinator: None,
                                            pre_combinators: [],
                                        },
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                },
                                cassowary_map: CassowaryMap {
                                    map: {
                                        "align_x": Variable(
                                            46,
                                        ),
                                        "align_y": Variable(
                                            47,
                                        ),
                                        "align_z": Variable(
                                            48,
                                        ),
                                        "bottom": Variable(
                                            40,
                                        ),
                                        "height": Variable(
                                            37,
                                        ),
                                        "left": Variable(
                                            39,
                                        ),
                                        "origin_x": Variable(
                                            43,
                                        ),
                                        "origin_y": Variable(
                                            44,
                                        ),
                                        "origin_z": Variable(
                                            45,
                                        ),
                                        "right": Variable(
                                            41,
                                        ),
                                        "top": Variable(
                                            38,
                                        ),
                                        "width": Variable(
                                            36,
                                        ),
                                        "z": Variable(
                                            42,
                                        ),
                                    },
                                    v_k: {
                                        Variable(
                                            36,
                                        ): "width",
                                        Variable(
                                            37,
                                        ): "height",
                                        Variable(
                                            38,
                                        ): "top",
                                        Variable(
                                            39,
                                        ): "left",
                                        Variable(
                                            40,
                                        ): "bottom",
                                        Variable(
                                            41,
                                        ): "right",
                                        Variable(
                                            42,
                                        ): "z",
                                        Variable(
                                            43,
                                        ): "origin_x",
                                        Variable(
                                            44,
                                        ): "origin_y",
                                        Variable(
                                            45,
                                        ): "origin_z",
                                        Variable(
                                            46,
                                        ): "align_x",
                                        Variable(
                                            47,
                                        ): "align_y",
                                        Variable(
                                            48,
                                        ): "align_z",
                                    },
                                },
                                children_vars_sa: StateAnchor(
                                    {
                                        Variable(
                                            78,
                                        ),
                                        Variable(
                                            80,
                                        ),
                                        Variable(
                                            39,
                                        ),
                                        Variable(
                                            1,
                                        ),
                                        Variable(
                                            41,
                                        ),
                                    },
                                ),
                                cassowary_calculated_vars: StateAnchor(
                                    {
                                        Variable(
                                            0,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            1,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            2,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            3,
                                        ): (
                                            NotNan(
                                                28.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            17,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            18,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            19,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            20,
                                        ): (
                                            NotNan(
                                                10.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            21,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            22,
                                        ): (
                                            NotNan(
                                                16.0,
                                            ),
                                            "",
                                        ),
                                        Variable(
                                            36,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[width] ",
                                        ),
                                        Variable(
                                            37,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[height] ",
                                        ),
                                        Variable(
                                            38,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[top] ",
                                        ),
                                        Variable(
                                            39,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[left] ",
                                        ),
                                        Variable(
                                            40,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[bottom] ",
                                        ),
                                        Variable(
                                            41,
                                        ): (
                                            NotNan(
                                                540.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[right] ",
                                        ),
                                        Variable(
                                            43,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[origin_x] ",
                                        ),
                                        Variable(
                                            44,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[origin_y] ",
                                        ),
                                        Variable(
                                            46,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[align_x] ",
                                        ),
                                        Variable(
                                            47,
                                        ): (
                                            NotNan(
                                                0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))])[align_y] ",
                                        ),
                                        Variable(
                                            62,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[width]",
                                        ),
                                        Variable(
                                            63,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[height]",
                                        ),
                                        Variable(
                                            64,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[top]",
                                        ),
                                        Variable(
                                            65,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[left]",
                                        ),
                                        Variable(
                                            66,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[bottom]",
                                        ),
                                        Variable(
                                            67,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"GEl-fPY-hr04\"[right]",
                                        ),
                                        Variable(
                                            75,
                                        ): (
                                            NotNan(
                                                300.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[width]",
                                        ),
                                        Variable(
                                            76,
                                        ): (
                                            NotNan(
                                                20.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[height]",
                                        ),
                                        Variable(
                                            77,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[top]",
                                        ),
                                        Variable(
                                            78,
                                        ): (
                                            NotNan(
                                                120.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[left]",
                                        ),
                                        Variable(
                                            79,
                                        ): (
                                            NotNan(
                                                20.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[bottom]",
                                        ),
                                        Variable(
                                            80,
                                        ): (
                                            NotNan(
                                                420.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a2\"[right]",
                                        ),
                                        Variable(
                                            88,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[width]",
                                        ),
                                        Variable(
                                            89,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[height]",
                                        ),
                                        Variable(
                                            90,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[top]",
                                        ),
                                        Variable(
                                            91,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[left]",
                                        ),
                                        Variable(
                                            92,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[bottom]",
                                        ),
                                        Variable(
                                            93,
                                        ): (
                                            NotNan(
                                                30.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a3\"[right]",
                                        ),
                                        Variable(
                                            101,
                                        ): (
                                            NotNan(
                                                100.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[width]",
                                        ),
                                        Variable(
                                            102,
                                        ): (
                                            NotNan(
                                                40.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[height]",
                                        ),
                                        Variable(
                                            103,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[top]",
                                        ),
                                        Variable(
                                            104,
                                        ): (
                                            NotNan(
                                                -0.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[left]",
                                        ),
                                        Variable(
                                            105,
                                        ): (
                                            NotNan(
                                                40.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[bottom]",
                                        ),
                                        Variable(
                                            106,
                                        ): (
                                            NotNan(
                                                100.0,
                                            ),
                                            "EPath([EdgeIndex(OptionNodeIndex(None)->OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))), EdgeIndex(OptionNodeIndex(Some(NodeIndex(\"debug_layer\")))->OptionNodeIndex(Some(NodeIndex(\"a1\"))))]) |=> #\"a4\"[right]",
                                        ),
                                    },
                                ),
                                cassowary_calculated_layout: StateAnchor(
                                    (
                                        Some(
                                            540.0,
                                        ),
                                        Some(
                                            540.0,
                                        ),
                                    ),
                                ),
                                styles_string: StateAnchor(
                                    "transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);\n width: 540px;\nheight: 540px;\n",
                                ),
                                ctx: EdgeCtx {
                                    styles_end: StateAnchor(
                                        {
                                            TypeName(
                                                "CssBorderColor",
                                            ): StateAnchor(
                                                Rgba(
                                                    1.0,
                                                    0.0,
                                                    0.0,
                                                    1.0,
                                                ),
                                            ),
                                            TypeName(
                                                "CssBorderWidth",
                                            ): StateAnchor(
                                                Length(
                                                    Simplex(
                                                        ExactLengthSimplex {
                                                            unit: Px,
                                                            value: NotNan(
                                                                5.0,
                                                            ),
                                                        },
                                                    ),
                                                ),
                                            ),
                                            TypeName(
                                                "CssFill",
                                            ): StateAnchor(
                                                Hsl(
                                                    150.0,
                                                    100.0,
                                                    100.0,
                                                ),
                                            ),
                                        },
                                    ),
                                    layout_end: StateAnchor(
                                        (
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                            540.0,
                                            540.0,
                                        ),
                                    ),
                                    world: StateAnchor(
                                        [
                                            0.0,
                                            0.0,
                                            0.0,
                                        ],
                                    ),
                                    children_layout: StateAnchor(
                                        Some(
                                            LayoutOverride {
                                                rect_tree: {
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            120.0,
                                                        ),
                                                        y0: NotNan(
                                                            0.0,
                                                        ),
                                                        x1: NotNan(
                                                            420.0,
                                                        ),
                                                        y1: NotNan(
                                                            20.0,
                                                        ),
                                                    },
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            250.0,
                                                        ),
                                                        y0: NotNan(
                                                            250.0,
                                                        ),
                                                        x1: NotNan(
                                                            280.0,
                                                        ),
                                                        y1: NotNan(
                                                            280.0,
                                                        ),
                                                    },
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            300.0,
                                                        ),
                                                        y0: NotNan(
                                                            300.0,
                                                        ),
                                                        x1: NotNan(
                                                            330.0,
                                                        ),
                                                        y1: NotNan(
                                                            330.0,
                                                        ),
                                                    },
                                                    RectLTRB {
                                                        x0: NotNan(
                                                            400.0,
                                                        ),
                                                        y0: NotNan(
                                                            400.0,
                                                        ),
                                                        x1: NotNan(
                                                            500.0,
                                                        ),
                                                        y1: NotNan(
                                                            440.0,
                                                        ),
                                                    },
                                                },
                                                bbox: RectLTRB {
                                                    x0: NotNan(
                                                        120.0,
                                                    ),
                                                    y0: NotNan(
                                                        0.0,
                                                    ),
                                                    x1: NotNan(
                                                        500.0,
                                                    ),
                                                    y1: NotNan(
                                                        440.0,
                                                    ),
                                                },
                                            },
                                        ),
                                    ),
                                },
                                opt_p_calculated: Some(
                                    LayoutCalculated {
                                        size_constraints: StateAnchor(
                                            [
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -600.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                -600.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        8,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        9,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: Equal,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        8,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        9,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        -1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        4,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        5,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1001001000.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        6,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                                Constraint(
                                                    ConstraintData {
                                                        expression: Expression {
                                                            terms: [
                                                                Term {
                                                                    variable: Variable(
                                                                        7,
                                                                    ),
                                                                    coefficient: NotNan(
                                                                        1.0,
                                                                    ),
                                                                },
                                                            ],
                                                            constant: NotNan(
                                                                0.0,
                                                            ),
                                                        },
                                                        strength: NotNan(
                                                            1.0,
                                                        ),
                                                        op: GreaterOrEqual,
                                                    },
                                                ),
                                            ],
                                        ),
                                        cassowary_inherited_generals_sa: StateAnchor(
                                            CassowaryGeneralMap {
                                                map: {
                                                    "align_x": Variable(
                                                        14,
                                                    ),
                                                    "align_y": Variable(
                                                        15,
                                                    ),
                                                    "align_z": Variable(
                                                        16,
                                                    ),
                                                    "baseline": Variable(
                                                        22,
                                                    ),
                                                    "bottom": Variable(
                                                        8,
                                                    ),
                                                    "height": Variable(
                                                        5,
                                                    ),
                                                    "hgap": Variable(
                                                        18,
                                                    ),
                                                    "left": Variable(
                                                        7,
                                                    ),
                                                    "origin_x": Variable(
                                                        11,
                                                    ),
                                                    "origin_y": Variable(
                                                        12,
                                                    ),
                                                    "origin_z": Variable(
                                                        13,
                                                    ),
                                                    "right": Variable(
                                                        9,
                                                    ),
                                                    "top": Variable(
                                                        6,
                                                    ),
                                                    "vgap": Variable(
                                                        20,
                                                    ),
                                                    "width": Variable(
                                                        4,
                                                    ),
                                                    "z": Variable(
                                                        10,
                                                    ),
                                                },
                                                v_v_suggest: {
                                                    Variable(
                                                        18,
                                                    ): 10.0,
                                                    Variable(
                                                        20,
                                                    ): 10.0,
                                                    Variable(
                                                        22,
                                                    ): 16.0,
                                                },
                                                virtual_constraints: {},
                                                top_virtual_constraints: {},
                                                top_map: {
                                                    "baseline": Variable(
                                                        21,
                                                    ),
                                                    "hgap": Variable(
                                                        17,
                                                    ),
                                                    "vgap": Variable(
                                                        19,
                                                    ),
                                                },
                                                top_v_v_suggest: {
                                                    Variable(
                                                        17,
                                                    ): 10.0,
                                                    Variable(
                                                        19,
                                                    ): 10.0,
                                                    Variable(
                                                        21,
                                                    ): 16.0,
                                                },
                                                parent: None,
                                            },
                                        ),
                                        cass_or_calc_size: StateAnchor(
                                            [
                                                [
                                                    600.0,
                                                    600.0,
                                                ],
                                            ],
                                        ),
                                        origin: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        align: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        translation: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        coordinates_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        cass_trans: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                        matrix: StateAnchor(
                                            Mat4(
                                                [
                                                    [
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                        0.0,
                                                    ],
                                                    [
                                                        0.0,
                                                        0.0,
                                                        0.0,
                                                        1.0,
                                                    ],
                                                ],
                                            ),
                                        ),
                                        loc_styles: StateAnchor(
                                            Style {
                                                media_rules: {},
                                                rules: [
                                                    Rule {
                                                        value: Length(
                                                            Simplex(
                                                                ExactLengthSimplex {
                                                                    unit: Px,
                                                                    value: NotNan(
                                                                        600.0,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    Rule {
                                                        value: Length(
                                                            Simplex(
                                                                ExactLengthSimplex {
                                                                    unit: Px,
                                                                    value: NotNan(
                                                                        600.0,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    Rule {
                                                        value: StringValue(
                                                            "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",
                                                        ),
                                                    },
                                                ],
                                                updated_at: [
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:13",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:17",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:31",
                                                    "/Users/cuiluming/Nextcloud/dev_chaoway/rust/iced_emg/emg_layout/src/lib.rs:1908:45",
                                                ],
                                                pseudo: None,
                                                media: None,
                                                name: "",
                                                keyframes: Keyframes {
                                                    frames: [],
                                                },
                                                combinator: None,
                                                pre_combinators: [],
                                            },
                                        ),
                                        world: StateAnchor(
                                            [
                                                0.0,
                                                0.0,
                                                0.0,
                                            ],
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            source_nix: StateVar(
                Some(
                    NodeIndex("debug_layer"),
                ),
            ),
            target_nix: StateVar(
                Some(
                    NodeIndex("a1"),
                ),
            ),
        },
    },
}
